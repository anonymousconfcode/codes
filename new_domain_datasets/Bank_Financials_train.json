[
  {
    "db_id": "Bank_Financials",
    "question": "What are the company names?",
    "query": "SELECT DISTINCT Stk_Name FROM Basic_Info;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net income from fees and commissions of China Construction Bank in millions of yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Fee_Com_Net_Inc / 1000000 FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Construction Bank';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between total assets and total liabilities of Bank of Communications?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Assets - Balance_Sheet.Tot_Liab) AS Net_Worth  FROM Basic_Info JOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Communications';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find me the banks with total assets over 1 trillion yuan but fixed assets less than 20 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Tot_Assets, Balance_Sheet.Fix_Assets FROM Basic_Info JOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Assets > 1000000000000 AND Balance_Sheet.Fix_Assets < 20000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the total profits of all banks and sort them in descending order, excluding banks with negative profits.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Profit  FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Profit > 0 ORDER BY Income_Statement.Tot_Profit DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find out the top five banks in the industry in terms of the ratio of loans to deposits.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Loans_Adv / Balance_Sheet.Acc_Deposits) AS Loan_Deposit_Ratio  FROM Basic_Info JOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Loan_Deposit_Ratio DESC LIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Sort the banks by net interest income from bottom to top.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Int_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Net_Int_Inc ASC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top five banks in terms of employee compensation.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Emp_Comp_PAY  FROM Basic_Info JOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Emp_Comp_PAY DESC  LIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "When considering loans and advances, which two banks rank fifth and sixth?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Loans_Adv  FROM Basic_Info JOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code  ORDER BY Balance_Sheet.Loans_Adv DESC  LIMIT 2 OFFSET 4;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the lowest employee compensation, among banks whose operating income in the top 10.",
    "query": "SELECT BI.Stk_Name, Balance_Sheet.Emp_Comp_PAY  FROM Balance_Sheet  JOIN (SELECT Basic_Info.Stk_Code, Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Rev DESC LIMIT 10) BI ON Balance_Sheet.Stk_Code = BI.Stk_Code ORDER BY Balance_Sheet.Emp_Comp_PAY ASC LIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the proportion of net interest income in total net interest income of all banks and list the top three banks seperately.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / (SELECT SUM(Net_Int_Inc) FROM Income_Statement)) AS Market_Share_Percentage FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Market_Share_Percentage DESC LIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the sum of intangible assets and fixed assets for all banks, and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Fix_Assets + Balance_Sheet.Intang_Assets AS Total_Fixed_Intangible_Assets  FROM Basic_Info JOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code  ORDER BY Total_Fixed_Intangible_Assets DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest total of fixed assets and investment on real estate?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Fix_Assets + Balance_Sheet.Inv_Real_Estate) AS Fixed_And_Inv_Real_Estate  FROM Basic_Info JOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code  ORDER BY Fixed_And_Inv_Real_Estate DESC LIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find all banks where the difference between total assets and total liabilities is less than 10 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Assets - Balance_Sheet.Tot_Liab) AS Net_Value  FROM Basic_Info JOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code   WHERE Net_Value < 10000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Can you tell me which bank has the largest absolute difference between other assets and other liabilities?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Balance_Sheet.Oth_Assets - Balance_Sheet.Oth_Liab) AS Other_Difference  FROM Basic_Info JOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Other_Difference DESC  LIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List banks whose income from interest is no greater than the tax and surcharges of any other banks.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Int_Inc FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE EXISTS (SELECT 1 FROM Basic_Info BI JOIN Cash_Flow_Statement CFS ON BI.Stk_Code = CFS.Stk_Code WHERE Basic_Info.Stk_Name != BI.Stk_Name AND Cash_Flow_Statement.Int_Inc <= CFS.Tax_n_Surs);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Who are the second highest bank and the lowest bank in inventory decrease?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Inventory_Decrease FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inventory_Decrease DESC LIMIT 1 OFFSET 1; UNION ALL SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Inventory_Decrease FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inventory_Decrease = (SELECT MIN(Inventory_Decrease) FROM Cash_Flow_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the lowest ratio of operating expenses to operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Oper_Exp / Income_Statement.Oper_Rev) AS Operational_Expense_Ratio  FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Operational_Expense_Ratio ASC LIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of investment real estate and fixed assets in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Inv_Real_Estate + Balance_Sheet.Fix_Assets) / Balance_Sheet.Tot_Assets AS Investment_Ratio  FROM Basic_Info JOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Investment_Ratio DESC LIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the average loan and advance amount for all banks?",
    "query": "SELECT AVG(Loans_Adv) AS Average_Loans_Advances  FROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank's undistributed profit is closest to the average of all banks?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Balance_Sheet.Undist_Profits - (SELECT AVG(Undist_Profits) FROM Balance_Sheet)) AS Difference  FROM Basic_Info JOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Difference ASC LIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose proportion of estimated liabilities to their total liabilities exceed the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Est_Liab / Balance_Sheet.Tot_Liab) FROM Basic_Info JOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE (Balance_Sheet.Est_Liab / Balance_Sheet.Tot_Liab) > (SELECT AVG(Est_Liab / Tot_Liab) FROM Balance_Sheet);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the median net interest income of all banks?",
    "query": "SELECT Net_Int_Inc AS Median_Net_Interest_Income FROM (SELECT Net_Int_Inc, PERCENT_RANK() OVER (ORDER BY Net_Int_Inc) AS percentile FROM Income_Statement) AS Ranked WHERE percentile = 0.5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose ratio of net fee and commission income to operating income is at the median.",
    "query": "SELECT Stk_Name, Fee_Ratio FROM (SELECT Basic_Info.Stk_Name, (Income_Statement.Fee_Com_Net_Inc / Income_Statement.Oper_Rev) AS Fee_Ratio, PERCENT_RANK() OVER (ORDER BY Income_Statement.Fee_Com_Net_Inc / Income_Statement.Oper_Rev) AS Percentile FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code) AS RankedBanks WHERE Percentile = 0.5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Does the cash inflow from investment activities of Bank of Communications exceed that of Industrial and Commercial Bank of China?",
    "query": "SELECT CASE  WHEN (SELECT Cash_Flow_Statement.Inv_CF_In_Sub FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Communications') >  (SELECT Cash_Flow_Statement.Inv_CF_In_Sub FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China') THEN 'Yes'  ELSE 'No'  END AS Comparison;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Does China Mingsheng Bank exceed the average level in terms of net cash flow generated by operating activities?",
    "query": "SELECT CASE  WHEN (SELECT Cash_Flow_Statement.Net_CF_Op FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank') >  (SELECT AVG(Net_CF_Op) FROM Cash_Flow_Statement) THEN 'Yes'  ELSE 'No'  END AS Comparison;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have positive net cash flow from operating activities and also positive cash inflow from investing activities?",
    "query": "SELECT COUNT(*)  FROM Cash_Flow_Statement WHERE Net_CF_Op > 0 AND Inv_CF_In_Sub > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the cumulative total of cash outflows from financing activities for each bank.",
    "query": "SELECT Basic_Statement.Stk_Name, SUM(Cash_Flow_Statement.Fin_CF_Out_Sub) OVER (ORDER BY Basic_Info.Stk_Name) AS Cumulative_Fin_Outflow  FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "total cash inflow is the sum of subtotal cash inflow from operational activities, investment activities, and financing activities; Calculate the total cash inflow from operating, investing and financing activities of all banks and sort them by the total in descending order.",
    "query": "SELECT Basic_Info.Stk_Name,  SUM(Cash_Flow_Statement.Op_CF_Sub + Cash_Flow_Statement.Inv_CF_In_Sub + Cash_Flow_Statement.Fin_CF_In_Sub) AS Total_Inflows  FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name  ORDER BY Total_Inflows DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top five banks in terms of cash inflow from operating activities and show their rankings among all banks.",
    "query": "SELECT Stk_Name, Op_CF_Sub, Rank FROM (SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Op_CF_Sub, RANK() OVER (ORDER BY Cash_Flow_Statement.Op_CF_Sub DESC) AS Rank FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code) AS SubRankedBanks WHERE Rank <= 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total comprehensive income of each bank.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest total comprehensive income attributable to minority shareholders?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Minor_Int_Shareholders_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit attributable to the owner of the parent company is higher than their net profit.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > Income_Statement.Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of net profit attributable to minority shareholders among all banks.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Minor_Int_Inc_Loss / Income_Statement.Net_Profit) AS Minority_Shareholders_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Minority_Shareholders_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest proportion of minority shareholders' equity to total owner's equity.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Minor_Int_Eq / Balance_Sheet.Tot_Own_Eq) AS Minority_Equity_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Minority_Equity_Ratio DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the banks that have a net profit higher than the average net profit of all banks.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of total liabilities to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Liab / Balance_Sheet.Tot_Assets) AS Liabilities_Assets_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Liabilities_Assets_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net cash flow from financing activities.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Fin\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_CF_Fin DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit attributable to the owner of the parent company in total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Tot_Compre_Inc) AS Net_Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of long-term equity investment in total assets.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS LT_Eq_Invest_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY LT_Eq_Invest_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a net profit higher than 1 billion yuan?",
    "query": "SELECT COUNT(*) \nFROM Income_Statement\nWHERE Net_Profit > 1000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the proportion of net profit attributable to parent company to total net profit of all banks and list the top three banks.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / (SELECT SUM(Net_Profit) FROM Income_Statement)) AS Parent_Company_Proportion\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Parent_Company_Proportion DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest non-operating income among banks with a net profit greater than 1 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Non_Op_Rev \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 1000000000\nORDER BY Income_Statement.Non_Op_Rev DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net profit margin (net profit divided by operating income) for all banks.",
    "query": "SELECT AVG(Net_Profit / Oper_Rev) AS Average_Net_Profit_Margin \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of operating income coming from investment income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Inv_Inc / Income_Statement.Oper_Rev) AS Investment_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Investment_Income_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest amount of losses on disposal of non current assets?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Loss_Disposal_Nonc_Assets \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Loss_Disposal_Nonc_Assets DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Can you tell me the bank with the highest proportion of total liabilities to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Liab / Balance_Sheet.Tot_Assets) AS Liabilities_Assets_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Liabilities_Assets_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net cash flow from operating activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Op \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_CF_Op DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net cash outflow from financing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Fin < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net profit of Industrial and Commercial Bank of China in millions of yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit / 1000000\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the sum of cash and deposits with central bank for all banks?",
    "query": "SELECT SUM(Cash_CB) AS Total_Cash_CB FROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net profit margin (net profit divided by operating revenue) of Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a diluted earnings per share higher than 1 yuan?",
    "query": "SELECT COUNT(*) \nFROM Income_Statement\nWHERE Diluted_EPS > 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of intangible assets in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Intang_Assets / Balance_Sheet.Tot_Assets) AS Intangible_Asset_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Intangible_Asset_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the financial performance of Bank of Jiangsu in terms of operating revenue, net profit, and total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Rev, Income_Statement.Net_Profit, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Bank of Jiangsu';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of long-term equity investment in their total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS LT_Eq_Invest_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY LT_Eq_Invest_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher net profit than their net income from fees and commissions?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > Income_Statement.Fee_Com_Net_Inc;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of derivative financial assets in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Deriv_Assets / Balance_Sheet.Tot_Assets) AS Deriv_Assets_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Deriv_Assets_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher net profit attributable to the parent company than the net profit attributable to minority shareholders?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > Income_Statement.Minor_Int_Inc_Loss;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest diluted earnings per share?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Diluted_EPS \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Diluted_EPS DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of borrowing funds from other financial institutions in total borrowings?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Bor_Funds_Oth_FIs / (Balance_Sheet.Bor_CB + Balance_Sheet.IB_Dep_Oth_FIs + Balance_Sheet.Bor_Funds_Oth_FIs)) AS Borrowing_Funds_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Borrowing_Funds_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest cumulative total cash inflow from operating activities?",
    "query": "SELECT Basic_Info.Stk_Name, SUM(Cash_Flow_Statement.Op_CF_Sub) AS Cumulative_Op_Inflow \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nGROUP BY Basic_Info.Stk_Name\nORDER BY Cumulative_Op_Inflow DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit attributable to the owner of the parent company is greater than their net profit.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > Income_Statement.Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of investment in noble metals in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Prec_Metals / Balance_Sheet.Tot_Assets) AS Investment_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Investment_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks in ascending order of their initial cash and cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Initial_Cash_Equiv\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Initial_Cash_Equiv ASC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income is negative.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net profit margin for all banks.",
    "query": "SELECT AVG(Net_Profit / Oper_Rev) AS Average_Net_Profit_Margin \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest operating profit?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Oper_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest cash and cash equivalents at the end of the period?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Cash_End_Period \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Cash_End_Period DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income is less than 10 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc < 10000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top five banks in terms of total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net profit margin (net profit / operating income) for all banks.",
    "query": "SELECT AVG(Net_Profit / Oper_Rev) AS Average_Net_Profit_Margin \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest increase in customer deposits and interbank deposits?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a positive net profit?",
    "query": "SELECT COUNT(*) FROM Income_Statement WHERE Net_Profit > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the percentage change in cash and cash equivalents from the beginning to the end of the period for each bank.",
    "query": "SELECT Basic_Info.Stk_Name, ((Cash_Flow_Statement.Cash_End_Period - Cash_Flow_Statement.Cash_Begin_Period) / Cash_Flow_Statement.Cash_Begin_Period) * 100 AS Percentage_Change \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the top three banks with the highest comprehensive income attributable to minority shareholders.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Minor_Int_Shareholders_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net cash flow from financing activities for all banks.",
    "query": "SELECT AVG(Net_CF_Fin) AS Average_Net_Cash_Flow_Financing \nFROM Cash_Flow_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net cash flow from financing activities of Industrial and Commercial Bank of China?",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Fin\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks with the highest total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average diluted earnings per share of all banks.",
    "query": "SELECT AVG(Diluted_EPS) AS Average_Diluted_EPS FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest increase in customer deposits and interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest proportion of net interest income to total operating income.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Int_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Int_Inc_Ratio DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit attributable to the owner of the parent company is greater than 50 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest total comprehensive income in the industry?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of total assets to total liabilities?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Assets / Balance_Sheet.Tot_Liab) AS Asset_Liability_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Asset_Liability_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a cash and deposits balance with the central bank greater than 100 billion yuan and a net profit greater than 10 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Balance_Sheet.Cash_CB > 100000000000 AND Income_Statement.Net_Profit > 10000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit attributable to the owner of the parent company?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the ratio of total liabilities to total assets for Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Liab / Balance_Sheet.Tot_Assets) AS Liabilities_Assets_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net cash flow from operating activities is positive and their net cash flow from investing activities is negative.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > 0 AND Cash_Flow_Statement.Net_CF_Inv < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the ratio of net interest income to operating income for Industrial and Commercial Bank of China?",
    "query": "SELECT (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Interest_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of long-term equity investment to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS LT_Eq_Invest_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY LT_Eq_Invest_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest increase in cash and cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Net_CF_Cash_Equiv - Cash_Flow_Statement.Initial_Cash_Equiv) AS Increase_Cash_Equiv \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Increase_Cash_Equiv DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest cumulative total of net cash flow generated from operating activities?",
    "query": "SELECT Basic_Info.Stk_Name, SUM(Cash_Flow_Statement.Net_CF_Op) AS Cumulative_Net_CF_Op \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nGROUP BY Basic_Info.Stk_Name\nORDER BY Cumulative_Net_CF_Op DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have the highest net profit attributable to the owner of the parent company?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Net_Profit DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of operating expenses to operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Oper_Exp / Income_Statement.Oper_Rev) AS Operational_Expense_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Operational_Expense_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the difference between the highest and lowest net profit among all banks.",
    "query": "SELECT MAX(Income_Statement.Net_Profit) - MIN(Income_Statement.Net_Profit) AS Difference\nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Who is the bank with the highest proportion of cash and deposits with central bank to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB / Balance_Sheet.Tot_Assets) AS Cash_CB_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Cash_CB_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a net increase in customer deposits and interbank deposits greater than 200 billion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits > 200000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the operating profit of Industrial and Commercial Bank of China in millions of yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Profit / 1000000\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest increase in customer deposits and interbank deposits?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of long term equity investment in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS LT_Eq_Invest_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY LT_Eq_Invest_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net income in millions of yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit / 1000000\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest ratio of operating income to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Oper_Rev / Balance_Sheet.Tot_Assets) AS Operating_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Operating_Income_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is greater than their operating profit.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > Income_Statement.Oper_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between the total comprehensive income of Industrial and Commercial Bank of China and the total comprehensive income of Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Tot_Compre_Inc - Income_Statement.Tot_Compre_Inc) AS Difference \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China' OR Basic_Info.Stk_Name = 'Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List all banks whose net profit is greater than 1 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 1000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the banks with a net income from fees and commissions greater than 500 million yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Fee_Com_Net_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Fee_Com_Net_Inc > 500000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of loans and advances in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Loans_Adv / Balance_Sheet.Tot_Assets) AS Loan_Adv_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Loan_Adv_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of net profit to operating income.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net profit of all banks.",
    "query": "SELECT AVG(Net_Profit) AS Average_Net_Profit FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the smallest proportion of net interest income in total net interest income of all banks?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / (SELECT SUM(Net_Int_Inc) FROM Income_Statement)) AS Market_Share_Percentage\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Market_Share_Percentage ASC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the cumulative total of net cash flow from operating activities for each bank.",
    "query": "SELECT Basic_Info.Stk_Name, SUM(Cash_Flow_Statement.Net_CF_Op) OVER (ORDER BY Basic_Info.Stk_Name) AS Cumulative_Net_CF_Op \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest proportion of total liabilities to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Liab / Balance_Sheet.Tot_Assets) AS Liabilities_Assets_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Liabilities_Assets_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average basic earnings per share for all banks and round it to two decimal places.",
    "query": "SELECT ROUND(AVG(Basic_EPS), 2) AS Average_Basic_EPS FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the percentage of assets held in precious metals for each bank.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Prec_Metals / Balance_Sheet.Tot_Assets) * 100 AS Precious_Metals_Percentage \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher net cash flow from operating activities than their net cash flow from investing activities?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > Cash_Flow_Statement.Net_CF_Inv;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest amount of investment income from associates and joint ventures?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Inv_Inc_Assoc_JV \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Inv_Inc_Assoc_JV DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "In which bank is the proportion of employee compensation to operating income the highest?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Emp_Comp_PAY / Income_Statement.Oper_Rev) AS Emp_Comp_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Emp_Comp_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average basic earnings per share (EPS) for all banks.",
    "query": "SELECT AVG(Basic_EPS) AS Average_EPS FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net profit margin for the bank with the highest net profit?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of investments in held-to-maturity investments in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Held_Mat_Invest / Balance_Sheet.Tot_Assets) AS Investment_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Investment_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of cash and deposits with central bank in relation to their total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB / Balance_Sheet.Tot_Assets) AS Cash_CB_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Cash_CB_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is greater than their total assets.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > Balance_Sheet.Tot_Assets;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest diluted earnings per share (EPS)?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Diluted_EPS \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Diluted_EPS DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest cash and deposits with the central bank?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Cash_CB DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit per share based on its Basic EPS?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit / Income_Statement.Basic_EPS AS Net_Profit_Per_Share \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Per_Share DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks in descending order of their net profit.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find banks with a net profit less than 10 billion yuan, but operating income greater than 100 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit < 10000000000 AND Income_Statement.Oper_Rev > 100000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income is greater than 5 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > 5000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the ratio of net profit to total assets for all banks and list the top five banks.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Profit_Asset_Ratio DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the minimum value of net cash flow from operating activities among all banks?",
    "query": "SELECT MIN(Net_CF_Op) AS Minimum_Net_CF_Op FROM Cash_Flow_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest amount of long term equity investment and investment in real estate combined?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest + Balance_Sheet.Inv_Real_Estate) AS Total_Investment \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Total_Investment DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit among all banks?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net profit margin (net profit divided by operating revenue) for all banks.",
    "query": "SELECT AVG(Net_Profit / Oper_Rev) AS Average_Net_Profit_Margin \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find all banks where the net increase in customer deposits and interbank deposits is greater than 500 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits > 500000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest ratio of net profit to total assets.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Profit_Asset_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net interest income in total income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Interest_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Interest_Income_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Show the top five banks with the highest net profit margin.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Margin DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net cash flow from operating activities greater than 1 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Op\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > 1000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of long-term equity investment in total assets and the lowest proportion of investment real estate in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS Equity_Investment_Ratio, (Balance_Sheet.Inv_Real_Estate / Balance_Sheet.Tot_Assets) AS Real_Estate_Ratio\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Equity_Investment_Ratio DESC, Real_Estate_Ratio ASC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the highest net profit among banks in the industry?",
    "query": "SELECT MAX(Net_Profit) AS Highest_Net_Profit FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher proportion of non-operating income to total comprehensive income than the industry average?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Non_Op_Rev / Income_Statement.Tot_Compre_Inc) AS Non_Op_Income_Ratio\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE (Income_Statement.Non_Op_Rev / Income_Statement.Tot_Compre_Inc) > (SELECT AVG(Non_Op_Rev / Tot_Compre_Inc) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is higher than the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top five banks with the highest net profit margin.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Margin DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Among banks with total assets over 1 trillion yuan, which bank has the highest ratio of net interest income to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Balance_Sheet.Tot_Assets) AS Net_Int_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 1000000000000\nORDER BY Net_Int_Inc_Ratio DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net increase in customer deposits and interbank deposits greater than 500 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits > 500000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a negative net cash flow from financing activities?",
    "query": "SELECT COUNT(*) \nFROM Cash_Flow_Statement\nWHERE Net_CF_Fin < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net comprehensive income among all banks?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Tot_Compre_Inc / Income_Statement.Net_Profit) AS Net_Comprehensive_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Comprehensive_Income_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net profit margin of all banks.",
    "query": "SELECT AVG(Net_Profit / Oper_Rev) AS Average_Net_Profit_Margin \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the sum of net income from fees and commissions for all banks.",
    "query": "SELECT SUM(Fee_Com_Net_Inc) AS Total_Net_Income \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest increase in borrowing funds from other financial institutions?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_IB_Borrowings\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_IB_Borrowings DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks with the highest investment income from associates and joint ventures.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Inv_Inc_Assoc_JV\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Inv_Inc_Assoc_JV DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest ratio of net profit to operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher net cash flow from financing activities than operating activities?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Fin > Cash_Flow_Statement.Net_CF_Op;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest basic earnings per share?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Basic_EPS \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Basic_EPS DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average cash flow from investing activities for all banks.",
    "query": "SELECT AVG(Inv_CF_Out_Sub) AS Average_Cash_Flow_Investing_Activities \nFROM Cash_Flow_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have the highest cash and deposits with the central bank?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Cash_CB DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose diluted earnings per share are higher than the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Diluted_EPS\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Diluted_EPS > (SELECT AVG(Diluted_EPS) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of cash and deposits with the central bank in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB / Balance_Sheet.Tot_Assets) AS Cash_CB_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Cash_CB_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Show me the banks whose total liabilities exceed the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Tot_Liab\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Liab > (SELECT AVG(Tot_Liab) FROM Balance_Sheet);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose operating income exceeds 100 billion yuan and net profit is higher than 10 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Rev > 100000000000 AND Income_Statement.Net_Profit > 10000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a cash and deposits with the central bank greater than 100 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Cash_CB > 100000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Profit_Asset_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose basic earnings per share (EPS) is higher than the average EPS of all banks.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Basic_EPS\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Basic_EPS > (SELECT AVG(Basic_EPS) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest decrease in investments among all banks?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Recv_Investment - Cash_Flow_Statement.Cash_Pay_Invest AS Investment_Decrease\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Investment_Decrease DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Net_Profit DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the ratio of net profit to total assets for each bank? Which bank has the highest ratio?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Profit_Asset_Ratio DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of net profit attributable to the parent company in total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Tot_Compre_Inc) AS Parent_Company_Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Parent_Company_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total comprehensive income for each bank and rank them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total net profit of Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit attributable to the owner of the parent company is greater than 10 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > 10000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between the total liabilities and the total owner's equity of Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Liab - Balance_Sheet.Tot_Own_Eq) AS Difference \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net comprehensive income in the industry?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a positive net profit attributable to the owner of the parent company?",
    "query": "SELECT COUNT(*) \nFROM Income_Statement\nWHERE Attr_Parent_Net_Profit > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the average basic earnings per share for all banks?",
    "query": "SELECT AVG(Basic_EPS) AS Average_Basic_EPS FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest total comprehensive income attributable to shareholders of the parent company?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Shareholders_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List all banks whose total comprehensive income exceeds 50 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average cash and deposits with the central bank for all banks.",
    "query": "SELECT AVG(Cash_CB) AS Average_Cash_CB\nFROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit margin is above the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) > (SELECT AVG(Net_Profit / Oper_Rev) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is greater than the average net profit of all banks.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest total comprehensive income, excluding the top three banks?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name NOT IN (SELECT Basic_Info.Stk_Name \n                                  FROM Basic_Info\n                                  JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\n                                  ORDER BY Income_Statement.Tot_Compre_Inc DESC\n                                  LIMIT 3)\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find all banks whose diluted earnings per share is greater than 1 yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Diluted_EPS \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Diluted_EPS > 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the lowest net cash flow from financing activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Fin\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_CF_Fin ASC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit from operating activities is at least 50 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Op\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op >= 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net cash flow generated from financing activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Fin\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_CF_Fin DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the total amount of loans and advances for each bank and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Loans_Adv \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code \nORDER BY Balance_Sheet.Loans_Adv DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average operating expenses of all banks.",
    "query": "SELECT AVG(Oper_Exp) AS Average_Operating_Expenses \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a positive net cash flow from operating activities but a negative net cash flow from investing activities?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > 0 AND Cash_Flow_Statement.Net_CF_Inv < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest cash inflow from operating activities and also the highest cash inflow from investment activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Op_CF_Sub, Cash_Flow_Statement.Inv_CF_In_Sub\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Op_CF_Sub = (SELECT MAX(Op_CF_Sub) FROM Cash_Flow_Statement)\nAND Cash_Flow_Statement.Inv_CF_In_Sub = (SELECT MAX(Inv_CF_In_Sub) FROM Cash_Flow_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the average diluted earnings per share for all banks?",
    "query": "SELECT AVG(Diluted_EPS) AS Average_Diluted_EPS\nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest net profit margin.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Margin DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a net profit margin greater than 10%?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) > 0.1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the ratio of net profit to total comprehensive income for each bank?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Tot_Compre_Inc) AS Profit_Compre_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net cash flow from operating activities of Industrial and Commercial Bank of China?",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Op \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income is greater than their net profit.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > Income_Statement.Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net profit for all banks.",
    "query": "SELECT AVG(Net_Profit) AS Average_Net_Profit FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a positive net cash flow from operating activities and a negative cash flow from investing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > 0 AND Cash_Flow_Statement.Inv_CF_Out_Sub < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with negative net profits and positive total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit < 0 AND Income_Statement.Tot_Compre_Inc > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a net profit higher than the industry average?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total income tax expense for Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Income_Tax_Exp\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the total net profit of all banks and calculate the average net profit.",
    "query": "SELECT SUM(Net_Profit) AS Total_Net_Profit, AVG(Net_Profit) AS Average_Net_Profit\nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of borrowing funds from other financial institutions in total liabilities?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Bor_Funds_Oth_FIs / Balance_Sheet.Tot_Liab) AS Borrowing_Funds_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Borrowing_Funds_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is greater than their net interest income.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > Income_Statement.Net_Int_Inc;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is greater than 100 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 100000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a net increase in borrowings from the central bank?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_Inc_Borrowings_CB > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest borrowing from the central bank?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Bor_CB \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Bor_CB DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have the highest total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net cash flow generated from operating activities for Industrial and Commercial Bank of China?",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Op \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total comprehensive income attributable to minority shareholders for each bank and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Minor_Int_Shareholders_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest amount of loans and advances.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Loans_Adv \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Loans_Adv DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks with the highest net profit.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest ratio of net profits to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Profit_Asset_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit and what is its net profit?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net profit higher than the industry average and sort them in descending order of net profit.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement)\nORDER BY Income_Statement.Net_Profit DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the total comprehensive income of all banks and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net cash flow from operating activities greater than their net cash flow from investing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > Cash_Flow_Statement.Net_CF_Inv;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of assets impairment loss in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Assets_Imp_Loss / Balance_Sheet.Tot_Assets) AS Impairment_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Impairment_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the bank with the highest diluted earnings per share.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Diluted_EPS \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Diluted_EPS DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Can you provide the average operating expenses of all banks?",
    "query": "SELECT AVG(Income_Statement.Oper_Exp) AS Average_Operating_Expenses\nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher net cash flow from operating activities than from financing activities?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > Cash_Flow_Statement.Net_CF_Fin;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the net profit margin (net profit divided by operating income) for each bank and list the top three banks.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Margin DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest long-term equity investment?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.LT_Eq_Invest \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.LT_Eq_Invest DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average basic earnings per share for all banks.",
    "query": "SELECT AVG(Basic_EPS) AS Average_Basic_EPS FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income attributable to minority shareholders is negative.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List five banks with the highest total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose operating income is greater than their total expenses.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Rev > (Income_Statement.Oper_Exp + Income_Statement.Tax_n_Surs + Income_Statement.Gen_n_Admin_Exps + Income_Statement.Assets_Imp_Loss + Income_Statement.Oth_Biz_Costs);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net interest income to operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Int_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Int_Inc_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest ratio of net profit to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Profit_Asset_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top five banks with the largest net increase in customer deposits and interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest amount of total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average amount of cash and deposits with central bank for all banks.",
    "query": "SELECT AVG(Cash_CB) AS Average_Cash_CB FROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank whose diluted earnings per share is the highest.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Diluted_EPS \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Diluted_EPS DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net income from investment is greater than their net income from interest.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Inv_Inc > Income_Statement.Net_Int_Inc;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit attributable to the owner of the parent company in total net profit?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Net_Profit) AS Owner_Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Owner_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the cash and cash equivalents at the beginning and end of the period for Agricultural Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Cash_Begin_Period, Cash_Flow_Statement.Cash_End_Period\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Agricultural Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average ratio of loans to deposits for all banks.",
    "query": "SELECT AVG(Loans_Adv / Acc_Deposits) AS Average_Loan_Deposit_Ratio \nFROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest ratio of net interest income to total operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Int_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Int_Inc_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the median net profit of all banks?",
    "query": "SELECT Net_Profit AS Median_Net_Profit\nFROM (SELECT Net_Profit, PERCENT_RANK() OVER (ORDER BY Net_Profit) AS percentile FROM Income_Statement) AS Ranked\nWHERE percentile = 0.5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of trading financial assets in total assets.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Trad_FAs / Balance_Sheet.Tot_Assets) AS Trading_Asset_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Trading_Asset_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose operating income is greater than their operating expenses, and rank them by the difference between the two amounts.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Oper_Rev - Income_Statement.Oper_Exp) AS Difference \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Rev > Income_Statement.Oper_Exp\nORDER BY Difference DESC;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest increase in net customer deposits and interbank deposits?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest proportion of profits attributable to minority shareholders?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Minor_Int_Inc_Loss / Income_Statement.Net_Profit) AS Minority_Shareholders_Proportion \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Minority_Shareholders_Proportion DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a positive net cash flow from investing activities and a negative net cash flow from financing activities?",
    "query": "SELECT COUNT(*) \nFROM Cash_Flow_Statement\nWHERE Net_CF_Inv > 0 AND Net_CF_Fin < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest amount of loans and advances?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Loans_Adv \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Loans_Adv DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total amount of bonds payable for all banks?",
    "query": "SELECT SUM(Bonds_PAY) AS Total_Bonds_Payable FROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest increase in customer deposits and interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of cash and deposits with central bank in total assets.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB / Balance_Sheet.Tot_Assets) AS Cash_CB_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Cash_CB_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit margin?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Margin DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income attributable to shareholders of the parent company is greater than their net profit.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc > Income_Statement.Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Sort the banks by the difference between their total assets and total liabilities in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Assets - Balance_Sheet.Tot_Liab) AS Net_Worth \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Net_Worth DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net cash flow from operating activities is positive and the net cash flow from investing activities is negative.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > 0 AND Cash_Flow_Statement.Net_CF_Inv < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net interest income higher than the median net interest income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Int_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Int_Inc > (SELECT Net_Int_Inc FROM (SELECT Net_Int_Inc, PERCENT_RANK() OVER (ORDER BY Net_Int_Inc) AS percentile FROM Income_Statement) AS Ranked WHERE percentile = 0.5);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Can you tell me the top three banks with the highest total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total comprehensive income of Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a positive net cash flow from operating activities but a negative net cash flow from investing activities?",
    "query": "SELECT COUNT(*) \nFROM Cash_Flow_Statement\nWHERE Net_CF_Op > 0 AND Net_CF_Inv < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between the closing balance of cash and cash equivalents and the opening balance of cash and cash equivalents for all banks?",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Cash_End_Period - Cash_Flow_Statement.Cash_Begin_Period) AS Cash_Equivalent_Difference \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total comprehensive income of Bank of China in billions of yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc / 1000000000\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest cumulative total of cash outflows from financing activities?",
    "query": "SELECT Basic_Info.Stk_Name, SUM(Cash_Flow_Statement.Fin_CF_Out_Sub) AS Cumulative_Fin_Outflow \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nGROUP BY Basic_Info.Stk_Name\nORDER BY Cumulative_Fin_Outflow DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of long-term equity investment in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS LT_Eq_Invest_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY LT_Eq_Invest_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average cash and deposits with central bank for all banks.",
    "query": "SELECT AVG(Cash_CB) AS Average_Cash_CB FROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest amount of noble metals?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Prec_Metals \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Prec_Metals DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is negative.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks in terms of net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Net_Profit DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a positive net cash flow from operating activities but a negative net cash flow from financing activities?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > 0 AND Cash_Flow_Statement.Net_CF_Fin < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Can you provide the sum of all cash payments for interest and taxes for each bank?",
    "query": "SELECT Basic_Info.Stk_Name, SUM(Cash_Flow_Statement.Cash_Pay_Int_Fees_Com + Cash_Flow_Statement.Cash_Pay_Taxes) AS Total_Payments \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nGROUP BY Basic_Info.Stk_Name;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest decrease in operating receivables?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Oper_Receivables_Decrease \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Oper_Receivables_Decrease DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit to net interest income ratio?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Net_Int_Inc) AS Profit_to_Net_Interest_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Profit_to_Net_Interest_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher operating income than net profit?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Rev > Income_Statement.Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total comprehensive income of all banks.",
    "query": "SELECT SUM(Tot_Compre_Inc) AS Total_Comprehensive_Income FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of borrowed funds in total liabilities?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Bor_Funds_Oth_FIs / Balance_Sheet.Tot_Liab) AS Borrowed_Funds_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Borrowed_Funds_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the total amount of intangible assets and fixed assets for each bank and calculate the average amount of intangible assets and fixed assets for all banks.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Intang_Assets + Balance_Sheet.Fix_Assets) AS Total_Assets, AVG(Balance_Sheet.Intang_Assets + Balance_Sheet.Fix_Assets) AS Average_Assets\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nGROUP BY Basic_Info.Stk_Name;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of cash and deposits with central bank in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB / Balance_Sheet.Tot_Assets) AS Cash_CB_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Cash_CB_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest proportion of net profit attributable to the owner of the parent company to total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Tot_Compre_Inc) AS Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find all banks with a net profit higher than their operating profit.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > Income_Statement.Oper_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of treasury stocks in total owner's equity.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Treas_Stock / Balance_Sheet.Tot_Own_Eq) AS Treasury_Stock_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Treasury_Stock_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest cash and deposits with central bank?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Cash_CB DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of operating expenses in operating income.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Oper_Exp / Income_Statement.Oper_Rev) AS Expense_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Expense_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average operating profit margin (operating profit divided by operating revenue) for all banks.",
    "query": "SELECT AVG(Oper_Profit / Oper_Rev) AS Average_Operating_Profit_Margin \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income attributable to minority shareholders is positive.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit attributable to the owner of the parent company is negative.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a net profit higher than 50 billion yuan?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net cash flow from operating activities per share?",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Net_CF_Op / Basic_Info.Stk_Code) AS Net_CF_Op_Per_Share\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Net_CF_Op_Per_Share DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have negative net cash flow from investment activities?",
    "query": "SELECT COUNT(*) \nFROM Cash_Flow_Statement\nWHERE Net_CF_Inv < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net cash flow from operating activities is positive, while their net cash flow from investing activities is negative.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > 0 AND Cash_Flow_Statement.Net_CF_Inv < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is greater than 50 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of borrowing funds from other financial institutions in their total liabilities?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Bor_Funds_Oth_FIs / Balance_Sheet.Tot_Liab) AS Borrowing_Funds_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Borrowing_Funds_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of long-term equity investments to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS LT_Eq_Invest_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY LT_Eq_Invest_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest operating expense among banks with a net profit greater than 1 billion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Exp \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 1000000000\nORDER BY Income_Statement.Oper_Exp DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest comprehensive income attributable to parent company shareholders among all banks?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Shareholders_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a net profit higher than 10 billion yuan?",
    "query": "SELECT COUNT(*) \nFROM Income_Statement\nWHERE Net_Profit > 10000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net profit margin (net profit divided by operating income) of Huaxia Bank?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Huaxia Bank';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the net increase/decrease in customer deposits and interbank deposits for China Construction Bank.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'China Construction Bank';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the average basic earnings per share (EPS) for all banks?",
    "query": "SELECT AVG(Basic_EPS) AS Average_Basic_EPS FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net profit, among banks whose total assets are over 1 trillion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 1000000000000\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of other assets in total assets among banks with total assets over 1 trillion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Oth_Assets / Balance_Sheet.Tot_Assets) AS Other_Assets_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 1000000000000\nORDER BY Other_Assets_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average total comprehensive income for all banks.",
    "query": "SELECT AVG(Tot_Compre_Inc) AS Average_Total_Comprehensive_Income\nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income attributable to minority shareholders is greater than their net profit.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc > Income_Statement.Net_Profit\nAND Income_Statement.Minor_Int_Shareholders_Compre_Inc > Balance_Sheet.Minor_Int_Eq;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average basic earnings per share and diluted earnings per share for all banks.",
    "query": "SELECT AVG(Basic_EPS) AS Average_Basic_EPS, AVG(Diluted_EPS) AS Average_Diluted_EPS\nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a negative net cash flow from operating activities and a positive net cash flow from investing activities?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op < 0 AND Cash_Flow_Statement.Net_CF_Inv > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of total liabilities to total assets.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Liab / Balance_Sheet.Tot_Assets) AS Liabilities_Assets_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Liabilities_Assets_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find me the bank with the highest net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of lending funds to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Lending_Funds / Balance_Sheet.Tot_Assets) AS Lending_Funds_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Lending_Funds_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher net income than China Construction Bank?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT Net_Profit FROM Income_Statement WHERE Stk_Code = 'China Construction Bank');"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net comprehensive income attributable to the parent company in total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Shareholders_Compre_Inc / Income_Statement.Tot_Compre_Inc) AS Proportion \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Proportion DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the cash and deposits with central bank of Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a negative net cash flow from operating activities and a positive net cash flow from financing activities?",
    "query": "SELECT COUNT(*) \nFROM Cash_Flow_Statement\nWHERE Net_CF_Op < 0 AND Net_CF_Fin > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest amount of cash and deposits with central bank?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Cash_CB DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest absolute difference between net interest income and operating income?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Income_Statement.Net_Int_Inc - Income_Statement.Oper_Rev) AS Difference \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Difference DESC \nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net interest income in total operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Int_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Int_Inc_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is higher than the average net profit of all banks.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose operating income is less than their total expenses.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Rev < (Income_Statement.Oper_Exp + Income_Statement.Tax_n_Surs + Income_Statement.Gen_n_Admin_Exps + Income_Statement.Assets_Imp_Loss + Income_Statement.Oth_Biz_Costs);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the top three banks with the highest cash and deposits with central bank.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Cash_CB DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Among the banks whose total assets are greater than 5 trillion yuan, which bank has the highest net profit?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 5000000000000\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks in order of their highest total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose diluted earnings per share is greater than their basic earnings per share.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Diluted_EPS, Income_Statement.Basic_EPS\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Diluted_EPS > Income_Statement.Basic_EPS;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest ratio of total owner's equity to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Own_Eq / Balance_Sheet.Tot_Assets) AS Owner_Equity_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Owner_Equity_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a total comprehensive income greater than 50 billion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Sort the banks by their net profit in descending order and display the top 10 banks.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 10;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net interest income in its total operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Int_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Int_Inc_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net cash flow from investing activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Inv\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_CF_Inv DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average diluted earnings per share for all banks.",
    "query": "SELECT AVG(Diluted_EPS) AS Average_Diluted_EPS FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is greater than the average net profit.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the value of intangibles and fixed assets for the bank with the highest total assets.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Intang_Assets + Balance_Sheet.Fix_Assets) AS Total_Intangibles_Fixed_Assets\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets = (SELECT MAX(Tot_Assets) FROM Balance_Sheet);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of loans and advances among total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Loans_Adv / Balance_Sheet.Tot_Assets) AS Loan_Adv_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Loan_Adv_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of treasury stock in total owner's equity?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Treas_Stock / Balance_Sheet.Tot_Own_Eq) AS Treasury_Stock_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Treasury_Stock_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List banks whose net profit attributable to the owner of the parent company is negative.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit in the industry?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the proportion of income from changes in fair value in total comprehensive income for each bank?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.FV_Change_Inc / Income_Statement.Tot_Compre_Inc) AS Fair_Value_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is larger than their net interest income.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > Income_Statement.Net_Int_Inc;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net income to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Net_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Net_Income_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total comprehensive income of Industrial Bank and its ranking among all banks?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc, RANK() OVER (ORDER BY Income_Statement.Tot_Compre_Inc DESC) AS Rank \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial Bank';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total cash and deposits with the central bank for all banks?",
    "query": "SELECT SUM(Cash_CB) AS Total_Cash_CB FROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose income from interest is greater than their income from investment and operating activities combined.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Income_Statement.Int_Inc > (Income_Statement.Inv_Inc + Income_Statement.Oper_Rev)\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the lowest ratio of net profit to total assets.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Profit_Asset_Ratio ASC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit attributable to the owner of the parent company to its total net profit?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Net_Profit) AS Owner_Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Owner_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total comprehensive income for each bank and find the bank with the highest total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the highest net profit among all banks?",
    "query": "SELECT MAX(Net_Profit) AS Highest_Net_Profit FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of operating income to total income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Oper_Rev / (Income_Statement.Oper_Rev + Income_Statement.Non_Op_Rev)) AS Operating_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Operating_Income_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income attributable to shareholders of the parent company is negative.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher ratio of long-term equity investment to total assets than the industry average?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS LT_Eq_Invest_Ratio\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) > (SELECT AVG(LT_Eq_Invest / Tot_Assets) FROM Balance_Sheet);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher net cash flow from operating activities than from investing activities?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > Cash_Flow_Statement.Net_CF_Inv;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net profit of Industrial and Commercial Bank of China attributable to the owner of the parent company?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total comprehensive income attributable to minority shareholders for each bank.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Minor_Int_Shareholders_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a positive net cash flow from financing activities and a negative net cash flow from investing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Fin > 0 AND Cash_Flow_Statement.Net_CF_Inv < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Sort the banks based on their total comprehensive income from top to bottom.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net profit of all banks and find the banks whose net profit is above the average.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a net profit greater than 1 billion yuan and a diluted earnings per share greater than 1 yuan?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 1000000000 AND Income_Statement.Diluted_EPS > 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest operating profit and also the highest net profit.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Profit, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Oper_Profit DESC, Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is higher than the average of all banks.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average operating income of all banks.",
    "query": "SELECT AVG(Oper_Rev) AS Average_Operating_Income FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher net profit than net interest income?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > Income_Statement.Net_Int_Inc;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of gen_risk_res to total owner's equity?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Gen_Risk_Res / Balance_Sheet.Tot_Own_Eq) AS Gen_Risk_Res_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Gen_Risk_Res_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a net profit higher than their operating income?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > Income_Statement.Oper_Rev;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the banks that have a higher proportion of net profit to operating income than the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Profit_Ratio\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) > (SELECT AVG(Net_Profit / Oper_Rev) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is higher than the industry median.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT Net_Profit FROM (SELECT Net_Profit, PERCENT_RANK() OVER (ORDER BY Net_Profit) AS percentile FROM Income_Statement) AS Ranked WHERE percentile = 0.5);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Among the top five banks in terms of total assets, which bank has the highest proportion of long-term equity investment in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS LT_Eq_Invest_Ratio\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Basic_Info.Stk_Name IN (SELECT Basic_Info.Stk_Name\n                              FROM Basic_Info\n                              JOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\n                              ORDER BY Balance_Sheet.Tot_Assets DESC\n                              LIMIT 5)\nORDER BY LT_Eq_Invest_Ratio DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net profit higher than 50 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose ratio of net interest income to net profit is greater than the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Net_Profit) AS Interest_Profit_Ratio\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE (Income_Statement.Net_Int_Inc / Income_Statement.Net_Profit) > (SELECT AVG(Net_Int_Inc / Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Among banks with positive net profits, which bank has the highest diluted earnings per share?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Diluted_EPS\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 0\nORDER BY Income_Statement.Diluted_EPS DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the net cash flow from operating activities as a percentage of total assets for all banks and list them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Net_CF_Op / Balance_Sheet.Tot_Assets) * 100 AS Op_CF_Asset_Ratio \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Op_CF_Asset_Ratio DESC;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of operating income in total income among all banks?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Oper_Rev / (Income_Statement.Oper_Rev + Income_Statement.Non_Op_Rev)) AS Operating_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Operating_Income_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total cash outflow from operating activities for each bank.",
    "query": "SELECT Basic_Info.Stk_Name, SUM(Cash_Flow_Statement.Op_CF_Out_Sub) AS Total_Outflow \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nGROUP BY Basic_Info.Stk_Name;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the total net profit of all banks and find the bank with the highest net profit.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Among the banks with positive net profits, which bank has the highest comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 0\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank's net profit is closest to the median net profit of all banks?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Income_Statement.Net_Profit - (SELECT Net_Profit FROM (SELECT Net_Profit, PERCENT_RANK() OVER (ORDER BY Net_Profit) AS percentile FROM Income_Statement) AS Ranked WHERE percentile = 0.5)) AS Difference \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Difference ASC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest operating profit among all banks?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Oper_Profit DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a positive net cash flow from operating activities and a negative net cash flow from investing activities?",
    "query": "SELECT COUNT(*) \nFROM Cash_Flow_Statement\nWHERE Net_CF_Op > 0 AND Net_CF_Inv < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of non-operating income to total income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Non_Op_Rev / (Income_Statement.Oper_Rev + Income_Statement.Non_Op_Rev)) AS Non_Op_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Non_Op_Income_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks in which the proportion of net profit attributable to minority shareholders is higher than the average of all banks.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Minor_Int_Inc_Loss / Income_Statement.Net_Profit) AS Minority_Shareholders_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE (Income_Statement.Minor_Int_Inc_Loss / Income_Statement.Net_Profit) > (SELECT AVG(Minor_Int_Inc_Loss / Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net comprehensive income greater than 10 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > 10000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the difference between the total cash inflow and the total cash outflow from operating, investing, and financing activities for each bank.",
    "query": "SELECT Basic_Info.Stk_Name, (SUM(Cash_Flow_Statement.Op_CF_Sub + Cash_Flow_Statement.Inv_CF_In_Sub + Cash_Flow_Statement.Fin_CF_In_Sub) - SUM(Cash_Flow_Statement.Op_CF_Out_Sub + Cash_Flow_Statement.Inv_CF_Out_Sub + Cash_Flow_Statement.Fin_CF_Out_Sub)) AS Net_Cash_Flow \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nGROUP BY Basic_Info.Stk_Name;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher proportion of long-term equity investment in total assets than the industry average?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS LT_Eq_Invest_Ratio\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) > (SELECT AVG(LT_Eq_Invest / Tot_Assets) FROM Balance_Sheet);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net cash flow from operating activities for the bank with the highest total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Op\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Code = (SELECT Stk_Code FROM Income_Statement ORDER BY Tot_Compre_Inc DESC LIMIT 1);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit attributable to the owner of the parent company in total net profit among all banks?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Net_Profit) AS Proportion \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Proportion DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total amount of cash and deposits with central bank for China Mingsheng Bank?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Basic_Info.Stk_Name = 'China Mingsheng Bank';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the largest cash and deposits with central bank for Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net cash flow from operating activities and the highest net cash flow from investing activities.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Op, Cash_Flow_Statement.Net_CF_Inv\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_CF_Op DESC, Cash_Flow_Statement.Net_CF_Inv DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a net cash flow from operating activities greater than 1 billion yuan?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > 1000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is higher than 10 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 10000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average ratio of operating expenses to operating income for all banks.",
    "query": "SELECT AVG(Income_Statement.Oper_Exp / Income_Statement.Oper_Rev) AS Average_Oper_Expense_Ratio \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks that have a positive net cash flow from operating activities but a negative net cash flow from investing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > 0 AND Cash_Flow_Statement.Net_CF_Inv < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total amount of cash and deposits with central banks for all banks?",
    "query": "SELECT SUM(Cash_CB) AS Total_Cash_CB FROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Does Bank of China have the highest net profit among all banks?",
    "query": "SELECT CASE \nWHEN (SELECT Income_Statement.Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of China') = \n(SELECT MAX(Net_Profit) FROM Income_Statement) THEN 'Yes' \nELSE 'No' \nEND AS Comparison;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income is positive.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net profit margin of Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose long term equity investment is greater than their net profit.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.LT_Eq_Invest, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nJOIN Income_Statement on Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Balance_Sheet.LT_Eq_Invest > Income_Statement.Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose ratio of net profit to total assets is above 0.03.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) > 0.03;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the sum of cash and cash equivalents for all banks?",
    "query": "SELECT SUM(Final_Cash_Equiv) AS Total_Cash_Equivalents FROM Cash_Flow_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest cumulative net cash flow from operating activities, excluding banks with negative cash flow from financing activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Op\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Fin > 0\nORDER BY Cash_Flow_Statement.Net_CF_Op DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose cash and deposits with central bank is the highest.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Cash_CB DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List all the banks whose operating income is greater than 100 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Rev > 100000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Does Bank of China have a positive net cash flow from operating activities?",
    "query": "SELECT CASE \nWHEN (SELECT Net_CF_Op FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of China') > 0 THEN 'Yes' \nELSE 'No' \nEND AS Comparison;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of net interest income in total operating income.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Int_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Int_Inc_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net profit of all banks and list the banks whose net profit exceeds the average.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit in the financial statements?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Among the banks with positive net profit, which bank has the highest basic earnings per share?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Basic_EPS \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 0\nORDER BY Income_Statement.Basic_EPS DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List all banks that have a positive net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest cash and deposits with the central bank.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Cash_CB DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank(s) with the highest net increase in customer deposits and interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits = (SELECT MAX(Net_Inc_Cust_Deposits_IB_Deposits) FROM Cash_Flow_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total net profit of all banks?",
    "query": "SELECT SUM(Net_Profit) AS Total_Net_Profit FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a net increase in customer deposits and interbank deposits greater than 500 billion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits > 500000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between the total comprehensive income and the net profit of each bank?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Tot_Compre_Inc - Income_Statement.Net_Profit) AS Difference \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of cash and deposits with the central bank to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB / Balance_Sheet.Tot_Assets) AS Cash_CB_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Cash_CB_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a net increase in customer deposits and interbank deposits?",
    "query": "SELECT COUNT(*) \nFROM Cash_Flow_Statement\nWHERE Net_Inc_Cust_Deposits_IB_Deposits > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest operating income and their corresponding net profits.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Rev, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Rev = (SELECT MAX(Oper_Rev) FROM Income_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the sum of cash and deposits with central bank for all banks, and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code \nORDER BY Balance_Sheet.Cash_CB DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income is higher than their net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > Income_Statement.Attr_Parent_Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the sum of total assets and total liabilities for each bank?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Assets + Balance_Sheet.Tot_Liab) AS Total_Assets_Liabilities \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit attributable to the owner of the parent company is higher than their net profit attributable to minority shareholders.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > Income_Statement.Minor_Int_Inc_Loss;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a cash and deposits with central bank greater than 100 billion yuan?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Cash_CB > 100000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit attributable to minority shareholders?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Minor_Int_Inc_Loss / Income_Statement.Net_Profit) AS Minority_Shareholders_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Minority_Shareholders_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average diluted earnings per share (EPS) for all banks.",
    "query": "SELECT AVG(Diluted_EPS) AS Average_Diluted_EPS FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find all banks that have a total comprehensive income greater than 50 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List all banks whose net profit is greater than their net operating income.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > Income_Statement.Oper_Rev;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest cash outflow from financing activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Fin_CF_Out_Sub \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Fin_CF_Out_Sub DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose operating income is greater than or equal to the median operating income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Rev\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Rev >= (SELECT Oper_Rev FROM (SELECT Oper_Rev, PERCENT_RANK() OVER (ORDER BY Oper_Rev) AS percentile FROM Income_Statement) AS Ranked WHERE percentile = 0.5);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a diluted earnings per share greater than 1?",
    "query": "SELECT COUNT(*) \nFROM Income_Statement\nWHERE Diluted_EPS > 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net cash flow from operating activities higher than their net profits.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > Income_Statement.Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net profit attributable to minority shareholders.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Minor_Int_Inc_Loss \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Minor_Int_Inc_Loss DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a cash outflow from operating activities greater than 10 billion yuan?",
    "query": "SELECT COUNT(*) \nFROM Cash_Flow_Statement\nWHERE Op_CF_Out_Sub > 10000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total comprehensive income of each bank and sort them in ascending order.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc ASC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the average amount of investment income from associates and joint ventures for all banks?",
    "query": "SELECT AVG(Inv_Inc_Assoc_JV) AS Average_Investment_Income \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total amount of investment income for all banks?",
    "query": "SELECT SUM(Inv_Inc) AS Total_Investment_Income FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the highest net income attributable to the owner of the parent company among all banks?",
    "query": "SELECT MAX(Attr_Parent_Net_Profit) AS Highest_Net_Income_Attributable \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest ratio of net interest income to net profit?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Net_Profit) AS Interest_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Interest_Income_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of cash and cash equivalents to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Net_CF_Cash_Equiv / Balance_Sheet.Tot_Assets) AS Cash_Equiv_Ratio \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Cash_Equiv_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average cash and deposits with the central bank for all banks and list the banks that have a value higher than the average.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Cash_CB > (SELECT AVG(Cash_CB) FROM Balance_Sheet);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the total operating income and net profit of all banks.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Rev, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net profit attributable to the owner of the parent company greater than 10 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > 10000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net cash flow from operating activities as a percentage of its operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Net_CF_Op / Income_Statement.Oper_Rev) AS Cash_Flow_Percentage \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Cash_Flow_Percentage DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a net profit higher than the industry average?",
    "query": "SELECT COUNT(*) \nFROM Income_Statement\nWHERE Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total net profit of all banks in millions of yuan?",
    "query": "SELECT SUM(Net_Profit) / 1000000 AS Total_Net_Profit \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest undistributed profits among banks with total liabilities exceeding 1 trillion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Undist_Profits\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Liab > 1000000000000\nORDER BY Balance_Sheet.Undist_Profits DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total comprehensive income for each bank and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List of banks whose total comprehensive income attributable to the parent company is greater than 50 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between the closing and opening balance of cash for Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Cash_End_Period - Cash_Flow_Statement.Cash_Begin_Period) AS Cash_Difference \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest increase in customer loans and advances?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Cust_Loans_Net_Inc \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Cust_Loans_Net_Inc DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a net profit higher than 100 billion yuan?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 100000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the banks whose net profit exceeds 50 billion yuan and their basic earnings per share is greater than 1 yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit, Income_Statement.Basic_EPS\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 50000000000 AND Income_Statement.Basic_EPS > 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find me the bank with the highest proportion of net interest income in its total operating income.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Int_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Int_Inc_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose operating expenses are greater than their operating income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Exp, Income_Statement.Oper_Rev\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Exp > Income_Statement.Oper_Rev;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the smallest difference between its total assets and its total liabilities?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Balance_Sheet.Tot_Assets - Balance_Sheet.Tot_Liab) AS Difference \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Difference ASC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of non-operating income to total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Non_Op_Rev / Income_Statement.Tot_Compre_Inc) AS Non_Op_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Non_Op_Income_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of long term equity investments in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS LT_Eq_Invest_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY LT_Eq_Invest_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net profit in billions of yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit / 1000000000\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit in terms of absolute value?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Income_Statement.Net_Profit) AS Absolute_Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Absolute_Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the lowest proportion of net interest income to operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Int_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Int_Inc_Ratio ASC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total liabilities are greater than their total assets.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Liab > Balance_Sheet.Tot_Assets;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the sum of total liabilities and owner's equity of China Merchants Bank?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Liab + Balance_Sheet.Tot_Own_Eq) AS Total_Liab_Own_Eq \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Basic_Info.Stk_Name = 'China Merchants Bank';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the difference between the closing balance and opening balance of cash and cash equivalents for Bank of China.",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Cash_End_Period - Cash_Flow_Statement.Cash_Begin_Period) AS Cash_Equivalent_Difference \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average operating profit margin for all banks.",
    "query": "SELECT AVG(Oper_Profit / Oper_Rev) AS Average_Operating_Profit_Margin \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest increase in inventory?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Inventory_Decrease\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Inventory_Decrease DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net comprehensive income to total comprehensive income among all banks?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Tot_Compre_Inc) AS Net_Compre_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Compre_Inc_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total cash outflow from operating, investing, and financing activities of all banks and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, \nSUM(Cash_Flow_Statement.Op_CF_Out_Sub + Cash_Flow_Statement.Inv_CF_Out_Sub + Cash_Flow_Statement.Fin_CF_Out_Sub) AS Total_Outflows \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nGROUP BY Basic_Info.Stk_Name \nORDER BY Total_Outflows DESC;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net profit margin.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Margin DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Among the banks whose total assets exceed 1 trillion yuan, which bank has the highest net profit?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 1000000000000\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total cash inflow from operating activities for Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Op_CF_Sub\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List all banks whose cash and deposits with central bank are greater than 100 billion yuan and total liabilities are less than 1 trillion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Cash_CB > 100000000000 AND Balance_Sheet.Tot_Liab < 1000000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total liabilities exceed 500 billion yuan and have a net profit greater than 10 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Balance_Sheet.Tot_Liab > 500000000000 AND Income_Statement.Net_Profit > 10000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a cash and deposits with the central bank greater than 100 billion yuan?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Cash_CB > 100000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks that have a positive net cash flow from financing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Fin > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net profit attributable to the owner of the parent company, among banks with total assets over 2 trillion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 2000000000000\nORDER BY Income_Statement.Attr_Parent_Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net profit among banks whose total assets are less than 500 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets < 500000000000\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a positive net profit and a positive net cash flow from operating activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 0 AND Cash_Flow_Statement.Net_CF_Op > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a positive net cash flow from investing activities but a negative net cash flow from financing activities?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Inv > 0 AND Cash_Flow_Statement.Net_CF_Fin < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest absolute value of attr_parent_shareholders_compre_inc?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Income_Statement.Attr_Parent_Shareholders_Compre_Inc) AS Absolute_Value \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Absolute_Value DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net profit greater than 1 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 1000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit among all the banks?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average value of long-term equity investments across all banks.",
    "query": "SELECT AVG(LT_Eq_Invest) AS Average_LT_Equity_Investments \nFROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest increase in cash and cash equivalents during the period?",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Net_CF_Cash_Equiv - Cash_Flow_Statement.Initial_Cash_Equiv) AS Increase_Cash_Equiv \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Increase_Cash_Equiv DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the average total liabilities for all banks?",
    "query": "SELECT AVG(Tot_Liab) AS Average_Total_Liabilities FROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit attributable to the owner of the parent company is greater than the net profit attributable to minority shareholders.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > Income_Statement.Minor_Int_Inc_Loss;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net interest income to total operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Int_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Int_Inc_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Can you find the bank with the highest undistributed profit among banks with total assets over 1 trillion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Undist_Profits\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 1000000000000\nORDER BY Balance_Sheet.Undist_Profits DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the greatest absolute difference between the cash and deposits with the central bank and the interbank deposits?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Balance_Sheet.Cash_CB - Balance_Sheet.IB_Deposits) AS Difference \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Difference DESC \nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of net profit to total assets.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Profit_Asset_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks in terms of net profit margin and their corresponding net profit margins.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Margin DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest increase in cash and cash equivalents?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Cash_Equiv\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_CF_Cash_Equiv DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of borrowings from the central bank in total liabilities?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Bor_CB / Balance_Sheet.Tot_Liab) AS Borrowing_Proportion \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Borrowing_Proportion DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the lowest proportion of cash and deposits with central bank to its total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB / Balance_Sheet.Tot_Assets) AS Cash_CB_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Cash_CB_Ratio ASC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net profit attributable to the owner of the parent company higher than 10 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > 10000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit attributable to the owner of the parent company is greater than their paid-in capital.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > Balance_Sheet.Paid_Up_Cap;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net profit attributed to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total amount of cash paid for interest, handling fees, and commissions by Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Cash_Pay_Int_Fees_Com\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List all the banks whose total assets are greater than the sum of their total liabilities and total owner's equity.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > (Balance_Sheet.Tot_Liab + Balance_Sheet.Tot_Own_Eq);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest ratio of operating income to total assets.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Oper_Rev / Balance_Sheet.Tot_Assets) AS Operating_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Operating_Income_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of investment real estate to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Inv_Real_Estate / Balance_Sheet.Tot_Assets) AS Investment_Real_Estate_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Investment_Real_Estate_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit attributable to the parent company in total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Tot_Compre_Inc) AS Parent_Company_Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Parent_Company_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total revenue of all banks?",
    "query": "SELECT SUM(Oper_Rev) AS Total_Revenue FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net interest income of banks and find banks whose net interest income is higher than the average.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Int_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Int_Inc > (SELECT AVG(Net_Int_Inc) FROM Income_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of cash and deposits with the central bank in total assets.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB / Balance_Sheet.Tot_Assets) AS Cash_CB_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Cash_CB_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between the operating income and net profit for all banks?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Oper_Rev - Income_Statement.Net_Profit) AS Difference \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average operating expenses to operating income ratio for all banks.",
    "query": "SELECT AVG(Income_Statement.Oper_Exp / Income_Statement.Oper_Rev) AS Average_Oper_Exp_Ratio \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a net profit higher than 10 billion yuan and a net profit margin higher than 10%?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 10000000000 AND (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) > 0.1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest proportion of net profit to total assets.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Profit_Asset_Ratio DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with negative net cash flow from operating activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose operating income is higher than the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Rev\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Rev > (SELECT AVG(Oper_Rev) FROM Income_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of cash and deposits with central bank in its total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB / Balance_Sheet.Tot_Assets) AS Cash_CB_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Cash_CB_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a net profit greater than 50 billion yuan?",
    "query": "SELECT COUNT(*) \nFROM Income_Statement\nWHERE Net_Profit > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit attributable to the owner of the parent company is greater than their minority interest.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > Income_Statement.Minor_Int_Inc_Loss;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks that have a higher proportion of total liabilities to total assets compared to the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Liab / Balance_Sheet.Tot_Assets) AS Liabilities_Assets_Ratio\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE (Balance_Sheet.Tot_Liab / Balance_Sheet.Tot_Assets) > (SELECT AVG(Tot_Liab / Tot_Assets) FROM Balance_Sheet);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of total comprehensive income attributable to minority shareholders?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Minor_Int_Shareholders_Compre_Inc / Income_Statement.Tot_Compre_Inc) AS Minority_Shareholders_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Minority_Shareholders_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the highest amount of cash and deposits with central bank for a single bank?",
    "query": "SELECT MAX(Cash_CB) AS Highest_Cash_Deposits \nFROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit in millions of yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit / 1000000\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the sum of the net increase in customer deposits and interbank deposits for all banks.",
    "query": "SELECT SUM(Net_Inc_Cust_Deposits_IB_Deposits) AS Total_Net_Increase\nFROM Cash_Flow_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest increase in customer deposits and interbank deposits in the Cash Flow Statement?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net profit margin higher than the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) > (SELECT AVG(Net_Profit / Oper_Rev) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of investment income from associates and joint ventures.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Inv_Inc_Assoc_JV / Income_Statement.Inv_Inc) AS Investment_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Investment_Income_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks in terms of cash and deposits with the central bank.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Cash_CB DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net comprehensive income attributable to minority shareholders.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Minor_Int_Shareholders_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have negative net cash flow from operating activities and positive net cash flow from investing activities?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op < 0 AND Cash_Flow_Statement.Net_CF_Inv > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find out the bank with the highest proportion of undistributed profits in total owner's equity attributable to the parent company.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Undist_Profits / Balance_Sheet.Own_Eq_Attr_Parent) AS Undist_Profit_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Undist_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit in billions of yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit / 1000000000\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net profit per share for each bank.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / (SELECT COUNT(*) FROM Basic_Info)) AS Avg_Net_Profit_Per_Share \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List all the banks whose net cash flow from operating activities is greater than their net cash flow from investing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > Cash_Flow_Statement.Net_CF_Inv;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the sum of net cash flow from operating activities for each bank.",
    "query": "SELECT Basic_Info.Stk_Name, SUM(Cash_Flow_Statement.Net_CF_Op) AS Total_Net_CF_Op\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nGROUP BY Basic_Info.Stk_Name;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net cash flow from financing activities is greater than their net cash flow from operating activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Fin > Cash_Flow_Statement.Net_CF_Op;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest absolute difference between its total comprehensive income and its net profit?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Income_Statement.Tot_Compre_Inc - Income_Statement.Net_Profit) AS Difference \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Difference DESC \nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of net interest income to operating income.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Int_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Int_Inc_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher net cash flow from operating activities than China Everbright Bank?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > (SELECT Net_CF_Op FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Everbright Bank');"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total comprehensive income for each bank and sort them in ascending order.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc ASC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the net increase in customer deposits and interbank deposits for each bank.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of long-term equity investments in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS LT_Eq_Invest_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY LT_Eq_Invest_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the securities names of the banks with the highest and lowest net profit.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit = (SELECT MAX(Net_Profit) FROM Income_Statement)\nOR Income_Statement.Net_Profit = (SELECT MIN(Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the average operating profit of all banks?",
    "query": "SELECT AVG(Oper_Profit) AS Average_Operating_Profit FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of assets impairment loss in operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Assets_Imp_Loss / Income_Statement.Oper_Rev) AS Impairment_Loss_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Impairment_Loss_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest increase in customer deposits and interbank deposits compared to the previous period?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net profit margin (net profit divided by operating income) of each bank?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest ratio of derivative financial assets to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Deriv_Assets / Balance_Sheet.Tot_Assets) AS Deriv_Assets_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Deriv_Assets_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a higher net profit than Bank of Communications?",
    "query": "SELECT COUNT(*) \nFROM Income_Statement\nWHERE Net_Profit > (SELECT Net_Profit FROM Income_Statement WHERE Stk_Code = (SELECT Stk_Code FROM Basic_Info WHERE Stk_Name = 'Bank of Communications'));"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit attributable to the owner of the parent company?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Net_Profit) AS Owner_Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Owner_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest operating profit margin, among banks whose operating income is above 10 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Oper_Profit / Income_Statement.Oper_Rev) AS Operating_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Rev > 10000000000\nORDER BY Operating_Profit_Margin DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest profit attributable to the owner of the parent company?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of loans and advances to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Loans_Adv / Balance_Sheet.Tot_Assets) AS Loan_Adv_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Loan_Adv_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is greater than 50 billion yuan and their total assets exceed 5 trillion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Income_Statement.Net_Profit > 50000000000 AND Balance_Sheet.Tot_Assets > 5000000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher total comprehensive income than their net profit?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > Income_Statement.Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest difference between its net profit and its net interest income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit - Income_Statement.Net_Int_Inc) AS Difference \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Difference DESC \nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks with the highest comprehensive income attributable to minority shareholders.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Minor_Int_Shareholders_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of cash and deposits with central bank to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB / Balance_Sheet.Tot_Assets) AS Cash_CB_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Cash_CB_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net profit greater than 1 billion yuan and a diluted earnings per share greater than 1 yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 1000000000 AND Income_Statement.Diluted_EPS > 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the cumulative total of net cash flow generated from operating activities for each bank.",
    "query": "SELECT Basic_Info.Stk_Name, SUM(Cash_Flow_Statement.Net_CF_Op) OVER (ORDER BY Basic_Info.Stk_Name) AS Cumulative_Net_CF_Op \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net cash flow from operating activities and the highest cash inflow from investing activities.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Op, Cash_Flow_Statement.Inv_CF_In_Sub\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_CF_Op DESC, Cash_Flow_Statement.Inv_CF_In_Sub DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest net cash outflow from investing activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Inv\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_CF_Inv DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What are the top five banks with the highest diluted earnings per share?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Diluted_EPS\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Diluted_EPS DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher net profit than the average net profit of all banks?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of trading financial assets in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Trad_FAs / Balance_Sheet.Tot_Assets) AS Trading_Asset_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Trading_Asset_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net cash flow from financing activities for Industrial and Commercial Bank of China?",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Fin\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net interest income is below the industry median.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Int_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Int_Inc < (SELECT Net_Int_Inc FROM (SELECT Net_Int_Inc, PERCENT_RANK() OVER (ORDER BY Net_Int_Inc) AS percentile FROM Income_Statement) AS Ranked WHERE percentile = 0.5);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest total comprehensive income and what is their total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose ratio of net profit to total assets is greater than 10%.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) > 0.1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks with the highest net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Net_Profit DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest increase in net customer deposits and interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Does China Construction Bank have a positive net cash flow from operating activities?",
    "query": "SELECT CASE \nWHEN (SELECT Net_CF_Op FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Construction Bank') > 0 THEN 'Yes' \nELSE 'No' \nEND AS Comparison;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Is there any bank that has a negative net profit?",
    "query": "SELECT COUNT(*) \nFROM Income_Statement\nWHERE Net_Profit < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks that have a higher proportion of net interest income to operating income than the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Interest_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) > (SELECT AVG(Net_Int_Inc / Oper_Rev) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income attributable to the parent company is greater than their net profit.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > Income_Statement.Net_Profit AND Income_Statement.Tot_Compre_Inc > Balance_Sheet.Own_Eq_Attr_Parent;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net increase in borrowings from other financial institutions?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_IB_Borrowings \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_IB_Borrowings DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of long term equity investment in total liabilities and owner's equity?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Liab_Own_Eq) AS LT_Equity_Investment_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY LT_Equity_Investment_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the proportional sum of total liabilities and owner's equity for each bank?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Liab + Balance_Sheet.Tot_Own_Eq) / (Balance_Sheet.Tot_Liab_Own_Eq) AS Proportional_Sum \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income attributable to minority shareholders is greater than the total comprehensive income attributable to the parent company.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc > Income_Statement.Attr_Parent_Shareholders_Compre_Inc;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a positive net income?",
    "query": "SELECT COUNT(*) FROM Income_Statement WHERE Net_Profit > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net profit per share.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / (SELECT COUNT(*) FROM Basic_Info)) AS Net_Profit_Per_Share \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Per_Share DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average cash inflow from investment activities for all banks.",
    "query": "SELECT AVG(Inv_CF_In_Sub) AS Average_Investment_Cash_Inflow \nFROM Cash_Flow_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a total comprehensive income attributable to minority shareholders higher than 1 billion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Minor_Int_Shareholders_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc > 1000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest increase in customer deposits and interbank deposits and the bank with the lowest increase in borrowings from the central bank.",
    "query": "SELECT MAX(Net_Inc_Cust_Deposits_IB_Deposits) AS Max_Increase, MIN(Net_Inc_Borrowings_CB) AS Min_Increase\nFROM Cash_Flow_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net cash flow generated from operating activities of China Minsheng Bank?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Op\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'China Minsheng Bank';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks with the highest ratio of net profit to total assets.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Profit_Asset_Ratio DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest cash and deposits with the central bank.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Cash_CB DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the median diluted earnings per share of all banks?",
    "query": "SELECT Diluted_EPS AS Median_Diluted_EPS\nFROM (SELECT Diluted_EPS, PERCENT_RANK() OVER (ORDER BY Diluted_EPS) AS percentile FROM Income_Statement) AS Ranked\nWHERE percentile = 0.5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a positive net cash flow from operating activities and a negative net cash flow from investing activities?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > 0 AND Cash_Flow_Statement.Net_CF_Inv < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have net income from fees and commissions greater than their net interest income?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Fee_Com_Net_Inc > Income_Statement.Net_Int_Inc;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest increase in customer deposits and the highest decrease in operating receivables.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits, Cash_Flow_Statement.Oper_Receivables_Decrease\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC, Cash_Flow_Statement.Oper_Receivables_Decrease DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest ratio of net profit to operating income.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks ranked by total comprehensive income in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose diluted earnings per share exceed the average of all banks.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Diluted_EPS\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Diluted_EPS > (SELECT AVG(Diluted_EPS) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest net increase in borrowings from the central bank?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Borrowings_CB\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Borrowings_CB DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find all banks with a net loss in the income statement.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the ratio of net profit to total assets for each bank and list the banks with a ratio greater than 10%.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) > 0.1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank(s) with the highest net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit = (SELECT MAX(Attr_Parent_Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest absolute difference between net profit and net comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Income_Statement.Net_Profit - Income_Statement.Tot_Compre_Inc) AS Difference \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Difference DESC \nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the lowest ratio of non-operating expenses to total operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Non_Op_Exp / Income_Statement.Oper_Rev) AS Non_Operating_Expense_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Non_Operating_Expense_Ratio ASC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net income from fees and commissions?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Fee_Com_Net_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Fee_Com_Net_Inc DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher proportion of net interest income to operating income than the industry average?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Int_Inc_Ratio\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) > (SELECT AVG(Net_Int_Inc / Oper_Rev) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the sum of total liabilities and total owner's equity for each bank.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Liab + Balance_Sheet.Tot_Own_Eq) AS Total_Liab_Own_Eq \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the average interest expense of all banks?",
    "query": "SELECT AVG(Int_Exp) AS Average_Interest_Expense FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the smallest proportion of net interest income to operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Int_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Int_Inc_Ratio ASC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is higher than their net interest income.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > Income_Statement.Net_Int_Inc;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a negative net cash flow from investing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Inv < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit attributable to the parent company to total net profit?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Net_Profit) AS Parent_Company_Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Parent_Company_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total comprehensive income for each bank?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest ratio of operating profit to operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Oper_Profit / Income_Statement.Oper_Rev) AS Operating_Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Operating_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between the total comprehensive income and the net profit for Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Tot_Compre_Inc - Income_Statement.Net_Profit) AS Difference \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest cash inflows from financing activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Fin_CF_In_Sub \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Fin_CF_In_Sub DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks with the highest comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest total net comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest operating income and the lowest total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Rev, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Oper_Rev DESC, Income_Statement.Tot_Compre_Inc ASC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher proportion of long-term equity investment in total assets compared to the average proportion of the industry?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS LT_Eq_Invest_Ratio\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) > (SELECT AVG(LT_Eq_Invest / Tot_Assets) FROM Balance_Sheet);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a net profit higher than the median net profit of all banks?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT Net_Profit FROM (SELECT Net_Profit, PERCENT_RANK() OVER (ORDER BY Net_Profit) AS percentile FROM Income_Statement) AS Ranked WHERE percentile = 0.5);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average operating expenses for all banks.",
    "query": "SELECT AVG(Oper_Exp) AS Average_Operating_Expenses \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Among banks whose total assets exceed 1 trillion yuan, find the bank with the highest total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 1000000000000\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the operating profit of the bank with the highest net profit?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit = (SELECT MAX(Net_Profit) FROM Income_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a net cash flow from operating activities greater than their net cash flow from financing activities?",
    "query": "SELECT COUNT(*) \nFROM Cash_Flow_Statement\nWHERE Net_CF_Op > Net_CF_Fin;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of net profit attributable to the owner of the parent company in total net profit.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Net_Profit) AS Owner_Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Owner_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average earnings per share (EPS) for all banks.",
    "query": "SELECT AVG(Income_Statement.Basic_EPS) AS Average_EPS \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher net income than operating income?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > Income_Statement.Oper_Rev;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the average basic earnings per share of all banks?",
    "query": "SELECT AVG(Basic_EPS) AS Average_Basic_EPS FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net cash flow from operating activities among banks with total liabilities greater than 1 trillion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Op \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Liab > 1000000000000\nORDER BY Cash_Flow_Statement.Net_CF_Op DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of long-term equity investment in its total assets.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS LT_Eq_Invest_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY LT_Eq_Invest_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest operating expenses.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Exp\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Oper_Exp DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest comprehensive income attributable to the parent company.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Shareholders_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net operating cash flow to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Net_CF_Op / Balance_Sheet.Tot_Assets) AS Operating_Cashflow_Ratio \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Operating_Cashflow_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher net profit than the industry average?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total amount of cash and cash equivalents at the end of the period for Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Cash_End_Period\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the sum of borrowings from the central bank for each bank and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, SUM(Balance_Sheet.Bor_CB) AS Total_Borrowings \nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nGROUP BY Basic_Info.Stk_Name\nORDER BY Total_Borrowings DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the highest cash inflow from operating activities among banks whose net profit is positive?",
    "query": "SELECT MAX(Cash_Flow_Statement.Op_CF_Sub) AS Highest_Op_CF_Sub\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit attributable to the parent company in total net profit?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Net_Profit) AS Parent_Company_Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Parent_Company_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the ratio of net cash flow from operating activities to total assets for all banks?",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Net_CF_Op / Balance_Sheet.Tot_Assets) AS Operating_Cash_Ratio \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest decrease in operating receivables?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Oper_Receivables_Decrease \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Oper_Receivables_Decrease DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks that have a positive net cash flow from operating activities and a negative net cash flow from investing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > 0 AND Cash_Flow_Statement.Net_CF_Inv < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net profit for the current period.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of attr_parent_net_profit to net_profit?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Net_Profit) AS Proportion \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Proportion DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest difference between cash and deposits with the central bank and borrowing from the central bank?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB - Balance_Sheet.Bor_CB) AS Difference \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Difference DESC \nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks in terms of net profit margin.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Margin DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Rank the banks by their total comprehensive income and list the top five.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks with the highest proportion of net profit to total income.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Profit_Ratio DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total amount of cash and deposits with the central bank for all banks?",
    "query": "SELECT SUM(Cash_CB) AS Total_Cash_CB FROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks with the highest operating profit and their respective operating profit amounts.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Oper_Profit DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net interest income among all banks?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / (SELECT SUM(Net_Int_Inc) FROM Income_Statement)) AS Market_Share_Percentage\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Market_Share_Percentage DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest absolute value of loss on disposal of non current assets?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Income_Statement.Loss_Disposal_Nonc_Assets) AS Absolute_Loss \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Absolute_Loss DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with negative net cash flow from operating activities and positive net cash flow from financing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op < 0 AND Cash_Flow_Statement.Net_CF_Fin > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest operating income among banks with total assets over 1 trillion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Rev \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 1000000000000\nORDER BY Income_Statement.Oper_Rev DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net profit margin (net profit divided by operating income) of Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the largest increase in customer deposits and interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of total owner's equity attributable to the parent company?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Own_Eq_Attr_Parent / Balance_Sheet.Tot_Own_Eq) AS Parent_Equity_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Parent_Equity_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks in terms of total comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Shareholders_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit to net income from interest?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Net_Int_Inc) AS Profit_Interest_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Profit_Interest_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is greater than 1 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 1000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit attributable to the owner of the parent company (excluding minority interest) in total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Tot_Compre_Inc) AS Net_Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest cumulative total of cash inflows from investment activities?",
    "query": "SELECT Basic_Info.Stk_Name, SUM(Cash_Flow_Statement.Inv_CF_In_Sub) OVER (ORDER BY Basic_Info.Stk_Name) AS Cumulative_Inv_Inflow \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cumulative_Inv_Inflow DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of investment real estate in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Inv_Real_Estate / Balance_Sheet.Tot_Assets) AS Investment_Real_Estate_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Investment_Real_Estate_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest profit margin (net profit divided by operating income).",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Profit_Margin DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a positive net cash flow from financing activities?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Fin > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest ratio of net comprehensive income to total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Tot_Compre_Inc / Income_Statement.Tot_Compre_Inc) AS Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net profit among banks whose total assets are over 1 trillion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 1000000000000\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is in the top 10 among all banks.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 10;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the sum of cash and deposits with central bank and due from interbank deposits for Industrial and Commercial Bank of China in thousands of yuan?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB + Balance_Sheet.IB_Deposits) / 1000\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks that have a net cash outflow from financing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Fin < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest net profit?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks with the highest cash and deposits with central bank.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Cash_CB DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find all banks where the net profit attributable to the owner of the parent company is greater than 1 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > 1000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Does Bank of Communications have a higher net income than Industrial and Commercial Bank of China?",
    "query": "SELECT CASE \nWHEN (SELECT Income_Statement.Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Communications') > \n(SELECT Income_Statement.Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China') THEN 'Yes' \nELSE 'No' \nEND AS Comparison;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the largest net increase in customer deposits and interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total comprehensive income attributable to the parent company for each bank?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Shareholders_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total comprehensive income of the bank with the highest net profit?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit = (SELECT MAX(Net_Profit) FROM Income_Statement)\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks that have an operating profit greater than 30 billion yuan and a net profit greater than 20 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Profit > 30000000000 AND Income_Statement.Net_Profit > 20000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the average basic earnings per share (EPS) among all banks?",
    "query": "SELECT AVG(Basic_EPS) AS Average_EPS FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the lowest diluted earnings per share?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Diluted_EPS \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Diluted_EPS ASC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Provide a list of banks that have a higher net income than the average net income of all banks.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net increase in customer deposits and interbank deposits?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a positive net cash flow from financing activities?",
    "query": "SELECT COUNT(*) \nFROM Cash_Flow_Statement\nWHERE Net_CF_Fin > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit among banks whose total assets are less than 500 billion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets < 500000000000\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net operating cash flow to its total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Net_CF_Op / Balance_Sheet.Tot_Assets) AS Operating_Cashflow_Ratio \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Operating_Cashflow_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a positive net cash flow from operating activities and a negative net cash flow from investing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > 0 AND Cash_Flow_Statement.Net_CF_Inv < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit among banks that have a positive net profit?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 0\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top five banks with the highest proportion of non-operating income to total income.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Non_Op_Rev / (Income_Statement.Oper_Rev + Income_Statement.Non_Op_Rev)) AS Non_Op_Income_Ratio\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Non_Op_Income_Ratio DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "For each bank, calculate the difference between its net profit and its net cash flow from operating activities, and rank them from highest to lowest.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit - Cash_Flow_Statement.Net_CF_Op) AS Difference\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Difference DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest increase in net customer deposits and interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank where the sum of its net cash flow from operating activities, net cash flow from investing activities, and net cash flow from financing activities is the highest.",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Net_CF_Op + Cash_Flow_Statement.Net_CF_Inv + Cash_Flow_Statement.Net_CF_Fin) AS Total_Cash_Flow \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Total_Cash_Flow DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher net cash flow from investment activities than from operating activities?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Inv > Cash_Flow_Statement.Net_CF_Op;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the sum of net cash flow generated from operating activities for all banks?",
    "query": "SELECT SUM(Net_CF_Op) AS Total_Net_CF_Op FROM Cash_Flow_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income attributable to shareholders of the parent company is greater than 50 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Shareholders_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest comprehensive income attributable to minority shareholders?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Minor_Int_Shareholders_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top five banks with the highest net profit.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between the total liabilities and the total owner's equity for Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Liab - Balance_Sheet.Tot_Own_Eq) AS Difference \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net increase in borrowings from other financial institutions.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_IB_Borrowings \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_IB_Borrowings DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total comprehensive income (including both net profit and other comprehensive income) for each bank, and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the largest increase in customer deposits and interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the total assets of each bank and calculate the average total assets across all banks. Then, list the banks whose total assets are above the average.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Tot_Assets\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > (SELECT AVG(Tot_Assets) FROM Balance_Sheet);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List all banks whose net profit is greater than 50 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the largest increase in borrowings from other financial institutions.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_IB_Borrowings\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_IB_Borrowings DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the percentage change in cash and cash equivalents from the beginning of the period to the end of the period for Industrial and Commercial Bank of China?",
    "query": "SELECT ((Cash_Flow_Statement.Cash_End_Period - Cash_Flow_Statement.Cash_Begin_Period) / Cash_Flow_Statement.Cash_Begin_Period) * 100 AS Percentage_Change\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with negative net cash flow from investing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Inv < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income attributable to shareholders of the parent company is above 20 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Shareholders_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc > 20000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is greater than the average net profit among all banks.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total comprehensive income for each bank and list the top five banks with the highest total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest increase in net cash flow from operating activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Op\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_CF_Op DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Among banks with total assets over 500 billion yuan, which one has the highest net profit?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 500000000000\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose cash and cash equivalents at the end of the period are greater than the average of all banks.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Cash_End_Period\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Cash_End_Period > (SELECT AVG(Cash_End_Period) FROM Cash_Flow_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a negative net cash flow from investing activities and a positive net cash flow from financing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Inv < 0 AND Cash_Flow_Statement.Net_CF_Fin > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a positive net cash flow from financing activities and a negative net cash flow from operating activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Fin > 0 AND Cash_Flow_Statement.Net_CF_Op < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest cash inflow from investing activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Inv_CF_In_Sub \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Inv_CF_In_Sub DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit among those with a net profit attributable to minority shareholders?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Minor_Int_Inc_Loss > 0\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of deferred tax assets in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Def_IT_Assets / Balance_Sheet.Tot_Assets) AS Deferred_Tax_Assets_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Deferred_Tax_Assets_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the largest cash inflow from operating activities among all banks?",
    "query": "SELECT MAX(Op_CF_Sub) AS Largest_Cash_Inflow_Operating_Activities FROM Cash_Flow_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net interest income in total operating income among all banks?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Int_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Int_Inc_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit per share?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / (SELECT COUNT(*) FROM Basic_Info)) AS Net_Profit_Per_Share \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Per_Share DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total amount of borrowing from the Central Bank for all banks?",
    "query": "SELECT SUM(Bor_CB) AS Total_Borrowing_From_Central_Bank FROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose operating income is greater than 100 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Rev > 100000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose ratio of net fee and commission income to operating income is greater than the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Fee_Com_Net_Inc / Income_Statement.Oper_Rev) AS Fee_Ratio\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE (Income_Statement.Fee_Com_Net_Inc / Income_Statement.Oper_Rev) > (SELECT AVG(Fee_Com_Net_Inc / Oper_Rev) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest absolute difference between total assets and total owner's equity?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Balance_Sheet.Tot_Assets - Balance_Sheet.Tot_Own_Eq) AS Difference \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Difference DESC \nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Can you tell me the bank with the highest comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Provide a list of banks with a net profit lower than 10 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit < 10000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net interest income in its total revenue?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Int_Inc / Income_Statement.Oper_Rev) AS Net_Int_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Int_Inc_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the banks with a total comprehensive income higher than 50 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Among banks with total assets over 500 billion yuan, which bank has the highest proportion of fixed assets to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Fix_Assets / Balance_Sheet.Tot_Assets) AS Fixed_Asset_Ratio\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 500000000000\nORDER BY Fixed_Asset_Ratio DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the smallest difference between the total of fixed assets and the total of current liabilities?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Fix_Assets - (Balance_Sheet.Tot_Liab - Balance_Sheet.Oth_Liab)) AS Difference \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Difference ASC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest absolute value of cash flow from operating activities?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Cash_Flow_Statement.Net_CF_Op) AS Absolute_Cash_Flow \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Absolute_Cash_Flow DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest ratio of total comprehensive income to net profit?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Tot_Compre_Inc / Income_Statement.Net_Profit) AS Compre_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Compre_Inc_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average total liabilities for all banks.",
    "query": "SELECT AVG(Tot_Liab) AS Average_Total_Liabilities FROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net profit attributable to the owner of the parent company for all banks.",
    "query": "SELECT AVG(Attr_Parent_Net_Profit) AS Average_Net_Profit \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between the net profit and the net interest income for each bank?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit - Income_Statement.Net_Int_Inc) AS Profit_Interest_Difference \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest ratio of investment real estate to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Inv_Real_Estate / Balance_Sheet.Tot_Assets) AS Inv_Real_Estate_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Inv_Real_Estate_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the proportion of net profit to operating income for Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Profit_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the net profit margin (net profit divided by operating income) for each bank and rank them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Margin DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest operating profit among banks whose net interest income is above 50 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Int_Inc > 50000000000\nORDER BY Income_Statement.Oper_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the largest absolute difference between net cash flow from operating activities and net cash flow from investing activities?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Cash_Flow_Statement.Net_CF_Op - Cash_Flow_Statement.Net_CF_Inv) AS Difference \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Difference DESC \nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income is higher than their net profit.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > Income_Statement.Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List all the banks whose total comprehensive income attributable to shareholders of the parent company is negative.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest net profit attributable to the owner of the parent company?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the banks that have a total comprehensive income greater than 50 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose cash inflow from operating activities is greater than their net profit.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Op_CF_Sub, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Op_CF_Sub > Income_Statement.Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a net profit higher than 50 billion yuan?",
    "query": "SELECT COUNT(*) \nFROM Income_Statement\nWHERE Net_Profit > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of income from investment in total operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Inv_Inc / Income_Statement.Oper_Rev) AS Investment_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Investment_Income_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between the total liabilities and the total owner's equity of Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Liab - Balance_Sheet.Tot_Own_Eq) AS Difference \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the net income of all banks and display the top three banks with the highest net income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit attributable to the owner of the parent company in total owner's equity?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Balance_Sheet.Own_Eq_Attr_Parent) AS Net_Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Net_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is greater than 10 billion yuan but less than 50 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 10000000000 AND Income_Statement.Net_Profit < 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest operating revenue?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Rev \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Oper_Rev DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Sort the banks by net profit in ascending order and show their rankings among all banks.",
    "query": "SELECT Stk_Name, Net_Profit, Rank\nFROM (SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit, RANK() OVER (ORDER BY Income_Statement.Net_Profit ASC) AS Rank FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code) AS SubRankedBanks;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Among banks with total assets over 1 trillion yuan, which bank has the highest net profit?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 1000000000000\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net cash flow from operating activities for all banks.",
    "query": "SELECT AVG(Net_CF_Op) AS Average_Net_CF_Op FROM Cash_Flow_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the change in cash and cash equivalents of China Construction Bank during the period?",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Final_Cash_Equiv - Cash_Flow_Statement.Initial_Cash_Equiv) AS Cash_Equiv_Change \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'China Construction Bank';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Does the net profit of Ping An Bank exceed that of Industrial and Commercial Bank of China?",
    "query": "SELECT CASE \nWHEN (SELECT Income_Statement.Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Ping An Bank') > \n(SELECT Income_Statement.Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China') THEN 'Yes' \nELSE 'No' \nEND AS Comparison;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the sum of Borrowing from the Central Bank for all banks?",
    "query": "SELECT SUM(Bor_CB) AS Total_Borrowing_CB FROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest total assets among banks with more than 1 trillion yuan in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Tot_Assets \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 1000000000000\nORDER BY Balance_Sheet.Tot_Assets DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top five banks in terms of total comprehensive income and their corresponding net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc, Income_Statement.Attr_Parent_Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit to total assets among all banks?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Profit_Asset_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net interest income among the banks with negative net interest income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Int_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Int_Inc < 0\nORDER BY Income_Statement.Net_Int_Inc DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the average net profit of all banks?",
    "query": "SELECT AVG(Net_Profit) AS Average_Net_Profit FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks with the highest net comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Can you provide the bank with the highest cash inflow from operating activities in millions of yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Op_CF_Sub / 1000000\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Op_CF_Sub DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a higher proportion of long-term equity investment in total assets than the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) AS LT_Eq_Invest_Ratio\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Assets) > (SELECT AVG(LT_Eq_Invest / Tot_Assets) FROM Balance_Sheet);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total net increase in customer deposits and interbank deposits for all banks?",
    "query": "SELECT SUM(Net_Inc_Cust_Deposits_IB_Deposits) AS Total_Net_Increase\nFROM Cash_Flow_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net increase in cash and cash equivalents? Provide the amount in millions of yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Cash_Equiv / 1000000\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_CF_Cash_Equiv DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List banks whose total comprehensive income is higher than their net profit.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > Income_Statement.Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest non-operating income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Non_Op_Rev \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Non_Op_Rev DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is above the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher ratio of total owner's equity attributable to the parent company to total assets than the industry average?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Own_Eq_Attr_Parent / Balance_Sheet.Tot_Assets) AS Equity_Asset_Ratio\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE (Balance_Sheet.Own_Eq_Attr_Parent / Balance_Sheet.Tot_Assets) > (SELECT AVG(Own_Eq_Attr_Parent / Tot_Assets) FROM Balance_Sheet);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total comprehensive income of China Merchants Bank in millions of yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc / 1000000\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'China Merchants Bank';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is greater than their total liabilities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > Balance_Sheet.Tot_Liab;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the banks where the ratio of net profit to total assets exceeds the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) > (SELECT AVG(Net_Profit / Tot_Assets) FROM Income_Statement JOIN Balance_Sheet ON Income_Statement.Stk_Code = Balance_Sheet.Stk_Code);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest comprehensive income among banks whose operating income is above 100 billion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Rev > 100000000000\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the average net profit margin for all banks?",
    "query": "SELECT AVG(Net_Profit / Oper_Rev) AS Average_Net_Profit_Margin \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with negative net cash flow from operating activities but positive net cash flow from investing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op < 0 AND Cash_Flow_Statement.Net_CF_Inv > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Sort the banks by their net profit in ascending order and display the top 5 banks.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit ASC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income is greater than 20 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > 20000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the average proportion of cash and deposits with central bank to total assets for all banks?",
    "query": "SELECT AVG(Cash_CB / Tot_Assets) AS Average_Cash_CB_Ratio \nFROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the average net profit margin of all banks?",
    "query": "SELECT AVG(Net_Profit / Oper_Rev) AS Average_Net_Profit_Margin \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks in terms of total comprehensive income attributable to minority shareholders.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Minor_Int_Shareholders_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest cash outflow from operating activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Op_CF_Out_Sub \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Op_CF_Out_Sub DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest absolute difference between operating income and operating expenses?",
    "query": "SELECT Basic_Info.Stk_Name, ABS(Income_Statement.Oper_Rev - Income_Statement.Oper_Exp) AS Difference \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Difference DESC \nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks with the highest proportion of net comprehensive income to total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Tot_Compre_Inc / (SELECT SUM(Tot_Compre_Inc) FROM Income_Statement)) AS Proportion\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Proportion DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Is there any bank that has negative net cash flow from investment activities and positive net cash flow from financing activities?",
    "query": "SELECT CASE \nWHEN EXISTS (SELECT 1 FROM Cash_Flow_Statement WHERE Net_CF_Inv < 0 AND Net_CF_Fin > 0) THEN 'Yes' \nELSE 'No' \nEND AS Comparison;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net profit margin (net profit divided by operating income) for each bank?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which three banks have the highest comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find all banks where the net increase in customer deposits and interbank deposits is greater than the net increase in borrowings from the central bank.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits > Cash_Flow_Statement.Net_Inc_Borrowings_CB;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net income attributable to the owner of the parent company in total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Tot_Compre_Inc) AS Proportion \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Proportion DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of investment real estate and fixed assets in total assets and also has positive net cash flow from operating activities?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Inv_Real_Estate + Balance_Sheet.Fix_Assets) / Balance_Sheet.Tot_Assets AS Investment_Ratio, Cash_Flow_Statement.Net_CF_Op\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nJOIN Cash_Flow_Statement on Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > 0\nORDER BY Investment_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Can you tell me the total number of banks in the database?",
    "query": "SELECT COUNT(*) FROM Basic_Info;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net cash flow from financing activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Fin\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_CF_Fin DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a total comprehensive income higher than the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > (SELECT AVG(Tot_Compre_Inc) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net increase in customer deposits and interbank deposits is greater than 500 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits > 500000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the ratio of net profit to total assets for each bank and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Profit_Asset_Ratio DESC;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total comprehensive income of the bank with the largest total owner's equity?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Code = (SELECT Stk_Code FROM Balance_Sheet ORDER BY Tot_Own_Eq DESC LIMIT 1);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks that have positive net cash flow from operating activities but negative net cash flow from financing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > 0 AND Cash_Flow_Statement.Net_CF_Fin < 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net profit margin (net profit divided by operating income) of all banks.",
    "query": "SELECT AVG(Net_Profit / Oper_Rev) AS Average_Net_Profit_Margin \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total net cash flow generated from operating activities for all banks?",
    "query": "SELECT SUM(Net_CF_Op) AS Total_Net_CF_Op FROM Cash_Flow_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of net profit attributable to the parent company in total net profit.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Net_Profit) AS Parent_Company_Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Parent_Company_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest amount of intangible assets?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Intang_Assets \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Intang_Assets DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the proportion of net profit attributable to the owner of the parent company to total net profit for each bank and list them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Net_Profit) AS Proportion \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Proportion DESC;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top three banks in terms of total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 3;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest accumulated profits?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Profit DESC \nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Does Bank of Nanjing have any intangible assets?",
    "query": "SELECT CASE \nWHEN (SELECT Intang_Assets FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Nanjing') > 0 THEN 'Yes' \nELSE 'No' \nEND AS Intangible_Assets_Present;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the lowest operating profit?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Oper_Profit ASC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose operating income and net interest income are both greater than the median.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Rev > (SELECT Oper_Rev FROM (SELECT Oper_Rev, PERCENT_RANK() OVER (ORDER BY Oper_Rev) AS percentile FROM Income_Statement) AS Ranked WHERE percentile = 0.5)\nAND Income_Statement.Net_Int_Inc > (SELECT Net_Int_Inc FROM (SELECT Net_Int_Inc, PERCENT_RANK() OVER (ORDER BY Net_Int_Inc) AS percentile FROM Income_Statement) AS Ranked WHERE percentile = 0.5);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total amount of long-term equity investments for the banks?",
    "query": "SELECT SUM(LT_Eq_Invest) AS Total_Long_Term_Equity_Investments FROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of cash and deposits with the central bank to its total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB / Balance_Sheet.Tot_Assets) AS Cash_CB_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Cash_CB_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest net profit among those whose income from interest is higher than their interest expenses.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Int_Inc > Income_Statement.Int_Exp\nORDER BY Income_Statement.Net_Profit DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a total comprehensive income that is positive and higher than the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > 0 AND Income_Statement.Tot_Compre_Inc > (SELECT AVG(Tot_Compre_Inc) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is greater than 50 billion yuan and rank them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 50000000000\nORDER BY Income_Statement.Net_Profit DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total comprehensive income attributable to minority shareholders for each bank?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Minor_Int_Shareholders_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the ratio of net profit to total assets for each bank? Sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Profit_Asset_Ratio DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net cash flow from operating activities is higher than their net cash flow from financing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > Cash_Flow_Statement.Net_CF_Fin;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks that have a cash and deposits with the central bank greater than 100 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Cash_CB > 100000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average cash inflow from financing activities for all banks.",
    "query": "SELECT AVG(Fin_CF_In_Sub) AS Average_Financing_Inflow \nFROM Cash_Flow_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between the net income and the total comprehensive income of Ping An Bank?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit - Income_Statement.Tot_Compre_Inc) AS Difference \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Ping An Bank';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of net comprehensive income among all banks.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Tot_Compre_Inc / Income_Statement.Net_Profit) AS Net_Compre_Inc_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Compre_Inc_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the median total comprehensive income of all banks?",
    "query": "SELECT Tot_Compre_Inc AS Median_Total_Comprehensive_Income\nFROM (SELECT Tot_Compre_Inc, PERCENT_RANK() OVER (ORDER BY Tot_Compre_Inc) AS percentile FROM Income_Statement) AS Ranked\nWHERE percentile = 0.5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net income from fees and commissions as a percentage of its operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Fee_Com_Net_Inc / Income_Statement.Oper_Rev) AS Fee_Com_Inc_Percentage \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Fee_Com_Inc_Percentage DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is greater than or equal to the average net profit of all banks.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit >= (SELECT AVG(Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the operating profit margin (operating profit divided by operating income) for each bank and list them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Oper_Profit / Income_Statement.Oper_Rev) AS Operating_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Operating_Profit_Margin DESC;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the cumulative total of cash inflows from financing activities for each bank.",
    "query": "SELECT Basic_Info.Stk_Name, SUM(Cash_Flow_Statement.Fin_CF_In_Sub) OVER (ORDER BY Basic_Info.Stk_Name) AS Cumulative_Fin_Inflow \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net income from fees and commissions is greater than their net income from interest.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Fee_Com_Net_Inc > Income_Statement.Net_Int_Inc;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between the closing balance and opening balance of cash for Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Cash_End_Period - Cash_Flow_Statement.Cash_Begin_Period) AS Cash_Balance_Difference \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is positive and higher than the average net profit of all banks.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 0 AND Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of long term equity investment in total owner's equity?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.LT_Eq_Invest / Balance_Sheet.Tot_Own_Eq) AS LT_Eq_Invest_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY LT_Eq_Invest_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net cash flow from investing activities for China Merchants Bank?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Inv\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'China Merchants Bank';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a net profit greater than 1 billion yuan?",
    "query": "SELECT COUNT(*) \nFROM Income_Statement\nWHERE Net_Profit > 1000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the change in fair value income of Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.FV_Change_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose cash inflow from financing activities is greater than their cash outflow from investing activities.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Fin_CF_In_Sub > Cash_Flow_Statement.Inv_CF_Out_Sub;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between the net profit and net income of Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit - Income_Statement.Net_Int_Inc) AS Difference \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose operating profit is greater than their net profit.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Profit > Income_Statement.Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest total comprehensive income attributable to minority shareholders.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Minor_Int_Shareholders_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net cash flow from operating activities is negative and net cash flow from financing activities is positive.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op < 0 AND Cash_Flow_Statement.Net_CF_Fin > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of borrowing from the central bank in its total liabilities?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Bor_CB / Balance_Sheet.Tot_Liab) AS Borrowing_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Borrowing_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest amount of cash and deposits with the central bank?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Cash_CB \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Cash_CB DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total of cash inflows from operating activities for Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Op_CF_Sub\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Industrial and Commercial Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest ratio of loans and advances to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Loans_Adv / Balance_Sheet.Tot_Assets) AS Loan_Adv_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Loan_Adv_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit to operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net operating cash flow to net income?",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Net_CF_Op / Income_Statement.Net_Profit) AS CashFlow_Profit_Ratio\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY CashFlow_Profit_Ratio DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest percentage of net profit attributable to the parent company in total net profit among all banks?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Net_Profit) AS Parent_Company_Percentage \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Parent_Company_Percentage DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest basic earnings per share (EPS) among banks whose net profit exceeds 10 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Basic_EPS \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 10000000000\nORDER BY Income_Statement.Basic_EPS DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Are there any banks whose net profit is higher than their operating income? If yes, list them.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > Income_Statement.Oper_Rev;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks in descending order based on their net profit margin.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Margin DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose operating profit is greater than their non-operating income.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Profit > Income_Statement.Non_Op_Rev;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks have a net profit higher than the average net profit of all banks?",
    "query": "SELECT COUNT(*) \nFROM Income_Statement\nWHERE Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List all the banks with a cash flow statement.",
    "query": "SELECT DISTINCT Stk_Name FROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the largest total comprehensive income in the current reporting period.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net income is greater than 1 billion yuan.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > 1000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net profit margin (net profit/sales) of all banks.",
    "query": "SELECT AVG(Net_Profit / Oper_Rev) AS Average_Net_Profit_Margin \nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "For each bank, what is the ratio of net profit to total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Balance_Sheet.Tot_Assets) AS Profit_Asset_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List all the banks that have a proportion of cash and deposits with central bank to total assets higher than 10%.",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB / Balance_Sheet.Tot_Assets) AS Cash_CB_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE (Balance_Sheet.Cash_CB / Balance_Sheet.Tot_Assets) > 0.1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a net increase in customer loans and advances greater than 2 trillion yuan.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Cust_Loans_Net_Inc\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Cust_Loans_Net_Inc > 2000000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total net profit for each bank in the industry.",
    "query": "SELECT Basic_Info.Stk_Name, SUM(Income_Statement.Net_Profit) AS Total_Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nGROUP BY Basic_Info.Stk_Name;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total amount of borrowings from the central bank for all banks?",
    "query": "SELECT SUM(Bor_CB) AS Total_Borrowings_CB FROM Balance_Sheet;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income attributable to shareholders of the parent company is higher than their net profit.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc > Income_Statement.Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net cash flow generated from operating activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Op \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_CF_Op DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total net comprehensive income for all banks.",
    "query": "SELECT SUM(Tot_Compre_Inc) AS Total_Net_Comprehensive_Income FROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher net cash flow from investing activities than from operating activities?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Inv > Cash_Flow_Statement.Net_CF_Op;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the net profit margin of all banks and list the top five banks.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Margin DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the ratio of net cash flow from operating activities to operating income for Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, (Cash_Flow_Statement.Net_CF_Op / Income_Statement.Oper_Rev) AS Operating_Cash_Flow_Ratio \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Bank of China';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a net cash flow from operating activities greater than the average net cash flow from operating activities of all banks?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Op\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Cash_Flow_Statement.Net_CF_Op > (SELECT AVG(Net_CF_Op) FROM Cash_Flow_Statement);"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the top five banks in terms of net profit margin.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Net_Profit_Margin \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Net_Profit_Margin DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit and what is their net profit in billions of yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit / 1000000000\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest undistributed profits, among banks whose net profit is in the top 5.",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Undist_Profits \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Basic_Info.Stk_Code IN (SELECT Stk_Code FROM Income_Statement ORDER BY Net_Profit DESC LIMIT 5)\nORDER BY Balance_Sheet.Undist_Profits DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the banks whose net profit is greater than the industry average.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit > (SELECT AVG(Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total comprehensive income of Bank of China and the difference between the total comprehensive income of Bank of China and that of Industrial and Commercial Bank of China?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'Bank of China';\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net interest income for all banks.",
    "query": "SELECT AVG(Net_Int_Inc) AS Average_Net_Interest_Income\nFROM Income_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the smallest increase in customer deposits and interbank deposits?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits ASC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average net profit of all banks and list the banks whose net profit is below the average.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Net_Profit < (SELECT AVG(Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest proportion of operating expenses to operating income.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Oper_Exp / Income_Statement.Oper_Rev) AS Operational_Expense_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Operational_Expense_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the total cash outflows from investment activities of all banks and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Inv_CF_Out_Sub \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Inv_CF_Out_Sub DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit among banks with total assets over 500 billion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Assets > 500000000000\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a negative net cash flow from operating activities but a positive net cash flow from investing activities?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Net_CF_Op < 0 AND Net_CF_Inv > 0;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the difference between the cash and deposits with the central bank and the loans and advances for each bank?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Cash_CB - Balance_Sheet.Loans_Adv) AS Difference \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of net profit attributable to the parent company to its total net profit?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Attr_Parent_Net_Profit / Income_Statement.Net_Profit) AS Parent_Company_Profit_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Parent_Company_Profit_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total number of banks listed in the database?",
    "query": "SELECT COUNT(*) FROM Basic_Info;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest cash inflow from financing activities?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Fin_CF_In_Sub \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Fin_CF_In_Sub DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the accumulated net cash flow from operating activities for each bank?",
    "query": "SELECT Basic_Info.Stk_Name, SUM(Cash_Flow_Statement.Net_CF_Op) OVER (ORDER BY Basic_Info.Stk_Name) AS Accumulated_Net_CF_Op \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the average ratio of net cash flow from operating activities to net cash flow from investing activities for all banks.",
    "query": "SELECT AVG(Net_CF_Op / Net_CF_Inv) AS Average_Ratio \nFROM Cash_Flow_Statement;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest amount of deposits with central bank and interbank deposits?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.IB_Deposits\nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.IB_Deposits DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the number of banks in the database.",
    "query": "SELECT COUNT(*) FROM Basic_Info;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of investment in precious metals in total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Prec_Metals / Balance_Sheet.Tot_Assets) AS Precious_Metals_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Precious_Metals_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest ratio of trading financial liabilities to total liabilities?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Trad_Fin_Liab / Balance_Sheet.Tot_Liab) AS Trading_Liability_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Trading_Liability_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit attributable to the owner of the parent company is greater than their net profit attributable to minority shareholders.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > Income_Statement.Minor_Int_Inc_Loss;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher total comprehensive income attributable to minority shareholders than to the parent company?",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc > Income_Statement.Attr_Parent_Shareholders_Compre_Inc;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the total net cash flow generated from financing activities for China Merchants Bank?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Fin\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Basic_Info.Stk_Name = 'China Merchants Bank';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "How many banks in the database have a total comprehensive income attributable to minority shareholders greater than 1 billion yuan?",
    "query": "SELECT COUNT(*) \nFROM Income_Statement\nWHERE Minor_Int_Shareholders_Compre_Inc > 1000000000;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest proportion of total liabilities to its total assets?",
    "query": "SELECT Basic_Info.Stk_Name, (Balance_Sheet.Tot_Liab / Balance_Sheet.Tot_Assets) AS Liabilities_Assets_Ratio \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Liabilities_Assets_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net profit among banks with total liabilities less than 5 trillion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Liab < 5000000000000\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a total comprehensive income attributable to the parent company greater than 50 billion yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc > 50000000000;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank contributed the most to the total net profit of all banks?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest amount of cash and cash equivalents at the end of the period?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Cash_End_Period \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Cash_End_Period DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the percentage of net profit to operating income for each bank and rank them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) * 100 AS Profit_Percentage \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Profit_Percentage DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit attributable to the owner of the parent company is greater than the net profit attributable to the minority shareholders.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Attr_Parent_Net_Profit > Income_Statement.Minor_Int_Inc_Loss;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Query the total cash flow from operating activities for each bank and calculate the average.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Op \nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nGROUP BY Basic_Info.Stk_Name\nHAVING Cash_Flow_Statement.Net_CF_Op > 0\nORDER BY Cash_Flow_Statement.Net_CF_Op DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with the highest operating income but the lowest net profit.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Oper_Rev, Income_Statement.Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE Income_Statement.Oper_Rev = (SELECT MAX(Oper_Rev) FROM Income_Statement) AND Income_Statement.Net_Profit = (SELECT MIN(Net_Profit) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose net profit is less than the sum of income tax expenses and interest payable.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Income_Statement.Net_Profit < (Income_Statement.Income_Tax_Exp + Balance_Sheet.Int_Pay);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks in descending order of their net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Attr_Parent_Net_Profit\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Attr_Parent_Net_Profit DESC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net cash flow from operating activities in millions of yuan?",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_CF_Op / 1000000\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_CF_Op DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Net_Profit \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Net_Profit DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the difference in net profit between China Everbright Bank and Industrial Bank.",
    "query": "SELECT (IS1.Net_Profit - IS2.Net_Profit) AS Profit_Difference\nFROM Basic_Info BI1\nJOIN Income_Statement IS1 ON BI1.Stk_Code = IS1.Stk_Code\nJOIN Basic_Info BI2 ON BI2.Stk_Name = 'Industrial Bank'\nJOIN Income_Statement IS2 ON BI2.Stk_Code = IS2.Stk_Code\nWHERE BI1.Stk_Name = 'China Everbright Bank';"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which banks have a higher proportion of net profit to total operating income than the industry average?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) AS Profit_Ratio\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nWHERE (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) > (SELECT AVG(Net_Profit / Oper_Rev) FROM Income_Statement);\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest amount of interbank deposits?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.IB_Deposits \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.IB_Deposits DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the total comprehensive income of all banks and show the bank with the highest total comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "What is the net profit of Industrial and Commercial Bank of China?",
    "query": "SELECT Net_Profit FROM Income_Statement WHERE Stk_Code = (SELECT Stk_Code FROM Basic_Info WHERE Stk_Name = 'Industrial and Commercial Bank of China');"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest net income from fees and commissions per million yuan of operating income?",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Fee_Com_Net_Inc / Income_Statement.Oper_Rev) * 1000000 AS Fee_Income_Ratio \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Fee_Income_Ratio DESC\nLIMIT 1;\n"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find the bank with the highest increase in borrowings from other financial institutions.",
    "query": "SELECT Basic_Info.Stk_Name, Cash_Flow_Statement.Net_Inc_IB_Borrowings\nFROM Basic_Info\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nORDER BY Cash_Flow_Statement.Net_Inc_IB_Borrowings DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which bank has the highest total assets?",
    "query": "SELECT Basic_Info.Stk_Name, Balance_Sheet.Tot_Assets \nFROM Basic_Info\nJOIN Balance_Sheet on Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nORDER BY Balance_Sheet.Tot_Assets DESC\nLIMIT 1;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Can you give me the top five banks in terms of total comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Name, Income_Statement.Tot_Compre_Inc\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Income_Statement.Tot_Compre_Inc DESC\nLIMIT 5;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks whose total comprehensive income exceeds their net profit.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nJOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code\nWHERE Income_Statement.Tot_Compre_Inc > Income_Statement.Net_Profit;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "List the banks with a total liability higher than their total assets.",
    "query": "SELECT Basic_Info.Stk_Name\nFROM Basic_Info\nJOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code\nWHERE Balance_Sheet.Tot_Liab > Balance_Sheet.Tot_Assets;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Calculate the percentage of net profit to operating income for each bank and list them in ascending order.",
    "query": "SELECT Basic_Info.Stk_Name, (Income_Statement.Net_Profit / Income_Statement.Oper_Rev) * 100 AS Profit_Percentage \nFROM Basic_Info\nJOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code\nORDER BY Profit_Percentage ASC;"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the two stocks with the highest non operating income.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Non_Op_Rev DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two securities with the highest translation difference of foreign currency statements.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Exch_Diff_Cash DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values of capital converted from debt do we have in our records?",
    "query": "SELECT count(DISTINCT Cash_Flow_Statement.Debt_Converted_Capital) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or have a subtotal of cash inflows from operating activities equal to 377651880000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Cash_Flow_Statement.Op_CF_Sub = 377651880000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code of records with operating payables increase not equal to 150890000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Oper_Payables_Increase != 150890000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me a list of distinct securities codes from the records.",
    "query": "SELECT distinct(Basic_Info.Stk_Code) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities have a different subtotal of cash inflows from financing activities than 100645000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fin_CF_In_Sub != 100645000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have 'China Mingsheng Bank' as a substring in their stock names?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%China Mingsheng Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all information about records with negative business and management fees.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Gen_n_Admin_Exps < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have received other cash related to investment activities of either 10266052498.0 or 35887354877.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Recv_Other_Invest = 10266052498.0 OR Cash_Flow_Statement.Recv_Other_Invest = 35887354877.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the minimum interest income for each diluted earnings per share value.",
    "query": "SELECT MIN (Income_Statement.Int_Inc) , Income_Statement.Diluted_EPS FROM Income_Statement GROUP BY Income_Statement.Diluted_EPS"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the fixed assets values in ascending order of their frequency.",
    "query": "SELECT Balance_Sheet.Fix_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Fix_Assets ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the stock name that appears the most frequently?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes that have at least five records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the eight Stk_Code with the lowest frequency in the records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the list of stock names whose issued bonds value is equal to or less than 364317625000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Issue_Bonds <= 364317625000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the convertible corporate bond maturing within one year with the highest frequency in our data?",
    "query": "SELECT Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of the two securities with the highest loss on disposal of fixed assets, intangible assets, and other long-term assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have derivative financial assets greater than 3314468000.0 for each stock code?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Deriv_Assets > 3314468000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the name Shanghai Pudong Development Bank or has other cash received related to operating activities equal to 1414041000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Cash_Flow_Statement.Cash_Oth_Oper_Activities = 1414041000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code that contains the word '600919.SH'.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600919.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest and lowest net cash flow generated from financing activities among all records?",
    "query": "SELECT MAX (Cash_Flow_Statement.Net_CF_Fin) , MIN (Cash_Flow_Statement.Net_CF_Fin) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please show me the closing balance of cash equivalents and the total cash paid for interest, handling fees, and commissions for each period.",
    "query": "SELECT Cash_Flow_Statement.Cash_Eq_End_Period , SUM (Cash_Flow_Statement.Cash_Pay_Int_Fees_Com) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Eq_End_Period"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all trading financial liabilities that have a total translation difference of foreign currency statements greater than 10.",
    "query": "SELECT Balance_Sheet.Trad_Fin_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Trad_Fin_Liab HAVING sum(Balance_Sheet.Exch_Diff_Cash) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the maximum, minimum, and average net profit attributable to the owner of the parent company in our data?",
    "query": "SELECT MAX (Income_Statement.Attr_Parent_Net_Profit) , MIN (Income_Statement.Attr_Parent_Net_Profit), AVG (Income_Statement.Attr_Parent_Net_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to 600016.SH or have undistributed profits equal to 199479000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Balance_Sheet.Undist_Profits = 199479000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have other business income more than 5676000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Inc > 5676000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either 10978682435 or 16894022197 as their interest payable?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Int_Pay = 10978682435 OR Balance_Sheet.Int_Pay = 16894022197"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the securities code of the record with the smallest number of corresponding records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the number of records and the corresponding stock names that have derivative financial assets value exceeding 3314468000.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Deriv_Assets > 3314468000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the total comprehensive income for each record that does not have a value for long-term amortization.",
    "query": "SELECT Income_Statement.Tot_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Longterm_Amortization IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have exchange difference of either 49337805049 or 36352257336?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Exch_Diff_Cash = 49337805049 OR Balance_Sheet.Exch_Diff_Cash = 36352257336"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average interest expenses of records grouped by interest income.",
    "query": "SELECT avg(Income_Statement.Int_Exp) , Income_Statement.Int_Inc FROM Income_Statement GROUP BY Income_Statement.Int_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with the name \"China Mingsheng Bank\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"China Mingsheng Bank\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the accounts receivable investment values that appear in at least 4 records, where the total owner's equity is greater than 721080000000.0.",
    "query": "SELECT Balance_Sheet.Recv_Invest FROM Balance_Sheet WHERE Balance_Sheet.Tot_Own_Eq > 721080000000.0 GROUP BY Balance_Sheet.Recv_Invest HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all closing balances of cash where there are at least four records with opening balances of cash equivalents greater than 18412097713.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_End_Period FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Eq_Begin_Period > 18412097713.0 GROUP BY Cash_Flow_Statement.Cash_End_Period HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of net income from handling fees and commissions and cash received for interest, handling fees, and commissions.",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc , Cash_Flow_Statement.Cash_Int_Commission_Collected FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest value of taxes and surcharges.",
    "query": "SELECT * FROM Income_Statement ORDER BY Income_Statement.Tax_n_Surs DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the securities code for all records with income tax expenses less than or equal to 14447000000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Income_Tax_Exp <= 14447000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the investment cash outflow subtotal from the record with the lowest frequency of investment cash outflow subtotal?",
    "query": "SELECT Cash_Flow_Statement.Inv_CF_Out_Sub FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Inv_CF_Out_Sub ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top two stocks with the highest undistributed profits.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Undist_Profits DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "4755 SLAVE: 155 =",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Exch_Diff_Cash <= 8090552536 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the available-for-sale financial assets values that appeared more than 3 times.",
    "query": "SELECT Balance_Sheet.Avail_Sale_FAs FROM Balance_Sheet GROUP BY Balance_Sheet.Avail_Sale_FAs HAVING COUNT (*) > 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all values of minority interest that appear less than 10 times in our records.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss FROM Income_Statement GROUP BY Income_Statement.Minor_Int_Inc_Loss HAVING COUNT (*) < 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the fewest occurrences in our records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of cash paid for taxes that have at least 5 records?",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Taxes FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Taxes HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock names and estimated liabilities of each record, sorted by derivative financial assets in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Est_Liab FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Deriv_Assets DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all the information available in the database.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock codes of all records that have employee compensation payable less than or equal to 8047000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Emp_Comp_PAY <= 8047000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the maximum, minimum and average other liabilities value from all records.",
    "query": "SELECT MAX (Balance_Sheet.Oth_Liab) , MIN (Balance_Sheet.Oth_Liab), AVG (Balance_Sheet.Oth_Liab) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600036.SH or a total comprehensive income equal to 13404000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Income_Statement.Tot_Compre_Inc = 13404000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the security code of the stock with the least number of records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, tell me how many records we have.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest net increase in customer loans and advances.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cust_Loans_Net_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have each interest expense value? please show the result in ascending order.",
    "query": "SELECT Income_Statement.Int_Exp , COUNT (*) FROM Income_Statement GROUP BY Income_Statement.Int_Exp ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock codes have net increase in cash and cash equivalents less than or equal to -15933000000.0, in descending order?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.IM_NCF_Cash_Eq <= -15933000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the closing cash balance in descending order of cash inflows from financing activities.",
    "query": "SELECT Cash_Flow_Statement.Cash_End_Period FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Fin_CF_In_Sub DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information in balance sheet where deferred tax liability is negative.",
    "query": "SELECT * FROM Balance_Sheet WHERE Balance_Sheet.Def_IT_Liab < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest assets impairment loss?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Assets_Imp_Loss DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock names of all records that have a different value of debt repayment than 672761000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Repay_Debt != 672761000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the exchange gains values that appeared at least 4 times in records where operating income is greater than 71539000000.0?",
    "query": "SELECT Income_Statement.Exch_Gain_Inc FROM Income_Statement WHERE Income_Statement.Oper_Rev > 71539000000.0 GROUP BY Income_Statement.Exch_Gain_Inc HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with asset impairment provision greater than 3918000000.0 do we have for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Asset_Impairment_Dec > 3918000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the operating revenue value that appears the most frequently?",
    "query": "SELECT Income_Statement.Oper_Rev FROM Income_Statement GROUP BY Income_Statement.Oper_Rev ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the values of noble metal and general risk preparation for records whose trading financial liabilities is either greater than 14920000000.0 or less than 8618476149.0.",
    "query": "SELECT Balance_Sheet.Prec_Metals , Balance_Sheet.Gen_Risk_Res FROM Balance_Sheet WHERE Balance_Sheet.Trad_Fin_Liab > 14920000000.0 OR Balance_Sheet.Trad_Fin_Liab < 8618476149.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the eight least frequent securities codes, sorted in ascending order of their frequency.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the securities codes with taxes and fees payable less than or equal to 5260499000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tax_Pay <= 5260499000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the minimum value of cash paid for other operating activities for each non-operating expense.",
    "query": "SELECT MIN (Cash_Flow_Statement.Cash_Pay_Op_Other) , Income_Statement.Non_Op_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Non_Op_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which value of income tax expenses appeared exactly 13 times?",
    "query": "SELECT Income_Statement.Income_Tax_Exp FROM Income_Statement GROUP BY Income_Statement.Income_Tax_Exp HAVING COUNT (*) = 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, find out how many different values of net interest income are there.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Net_Int_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash outflows from operating activities for each record, sorted in descending order of loss on scrapping of fixed assets.",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Out_Sub FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Fixed_Asset_Scrap_Loss DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of received other cash related to investment activities that have at least five records.",
    "query": "SELECT Cash_Flow_Statement.Recv_Other_Invest FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Recv_Other_Invest HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average investment income from associates and joint ventures, the minimum total comprehensive income and the minimum operating expenses of all records?",
    "query": "SELECT AVG (Income_Statement.Inv_Inc_Assoc_JV) , MIN (Income_Statement.Tot_Compre_Inc), MIN (Income_Statement.Oper_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose operating revenue is less than or equal to 47642000000.0, sorted in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Rev <= 47642000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many different long term equity investments do we have for each stock code?",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Balance_Sheet.LT_Eq_Invest) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the most frequent value of total liabilities?",
    "query": "SELECT Balance_Sheet.Tot_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent loss on disposal of non current assets values, sorted by their frequency in ascending order?",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets FROM Income_Statement GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have treasury stock values before 1980?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Treas_Stock < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net income from handling fees and commissions and count how many times each value appears.",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc , count(*) FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Net_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the stock codes that do not have a fixed asset scrap loss value of 42607324711.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fixed_Asset_Scrap_Loss != 42607324711"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the trading financial liabilities value and the number of records with that value, sorted by the count.",
    "query": "SELECT Balance_Sheet.Trad_Fin_Liab , COUNT (*) FROM Balance_Sheet GROUP BY Balance_Sheet.Trad_Fin_Liab ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have 9 or more records in the database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) >= 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the highest borrowing from the Central Bank.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Bor_CB DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest interest receivable values?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Int_Receiv DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "group the records by stock name and list all records with total comprehensive income greater than 26693000000.0 for each stock.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Compre_Inc > 26693000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the operating profit of records that have cash paid for assets between 3392000000.0 and 1273001000.0.",
    "query": "SELECT Income_Statement.Oper_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Assets BETWEEN 3392000000.0 AND 1273001000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the net income from handling fees and commissions of records, sorted in descending order by the net increase in deposits with central bank and interbank funds.",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.CenBank_Interbank_Net_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of stocks that have at least 5 records in the database.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average of cash payments related to financing activities for each dividend and profits paid by subsidiaries to minority shareholders value.",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_Pay_Fin_Other) , Cash_Flow_Statement.Subsidiary_Pay_Minority FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Subsidiary_Pay_Minority"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have a different net increase in cash and cash equivalents from 17849000000.0? Show their stock codes.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Cash_Equiv != 17849000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest increase in deferred income tax liabilities?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.DIT_Liability_Increase DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the stock codes whose due from interbank deposits is less than or equal to 44028805000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.IB_Deposits <= 44028805000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities with stock code containing '600036.SH'.",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600036.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest cash and deposits with the central bank?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Cash_CB DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of the top three stocks with the highest capital reserves.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Cap_Reserves DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three securities with the highest total liabilities and owner's equity.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tot_Liab_Own_Eq DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the sum of total comprehensive income attributable to shareholders of the parent company for each loss on disposal of non-current assets value.",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets , SUM (Income_Statement.Attr_Parent_Shareholders_Compre_Inc) FROM Income_Statement GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have general risk preparation exceeding 90673000000.0 and deferred tax assets above 16367490000.0?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Gen_Risk_Res > 90673000000.0 AND Balance_Sheet.Def_IT_Assets > 16367490000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the top 5 stock names with the highest number of records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock names in descending order for all records with net cash flow generated from operating activities less than or equal to 108631000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Op <= 108631000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top five companies with the highest number of records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have other business costs before the year 1980?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Oth_Biz_Costs < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the columns in the cash flow statement records.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the name of each stock and the count of unique investment real estate values for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Balance_Sheet.Inv_Real_Estate) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the net profit attributable to the owner of the parent company for each record whose subtotal of cash outflows from investment activities is greater than 10.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Attr_Parent_Net_Profit HAVING sum(Cash_Flow_Statement.Inv_CF_Out_Sub) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many records have a loss on scrapping of fixed assets greater than 41751881951 and cash outflows from investment activities greater than 955356000000.0?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Fixed_Asset_Scrap_Loss > 41751881951 AND Cash_Flow_Statement.Inv_CF_Out_Sub > 955356000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all information about records with negative values for financial assets sold for repurchase.",
    "query": "SELECT * FROM Balance_Sheet WHERE Balance_Sheet.Sell_Rep_FAs < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the information available in cash flow statement.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest value of cash and deposits with central bank.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Cash_CB DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of stocks whose undistributed profits are not equal to 522383000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Undist_Profits != 522383000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the taxes and surcharges value and the number of records with each value.",
    "query": "SELECT Income_Statement.Tax_n_Surs , count(*) FROM Income_Statement GROUP BY Income_Statement.Tax_n_Surs"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of records whose closing balance of cash equivalents is not equal to 24869523980.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Eq_End_Period != 24869523980.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which Fin_Lease_Additions_Fixed_Assets value are shared by more than 5 records?",
    "query": "SELECT Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets HAVING COUNT (*) > 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of records that have loans and advances not equal to 6096979000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Loans_Adv != 6096979000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock name, show the stock name, the number of unique exchange gains, and the total count of records for that stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Income_Statement.Exch_Gain_Inc) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values does the dividend and profits paid by subsidiaries to minority shareholders have in our records?",
    "query": "SELECT count(DISTINCT Cash_Flow_Statement.Subsidiary_Pay_Minority) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "gather the count of records that have fixed assets exceeding 50856000000.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Fix_Assets > 50856000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have operating revenue either equal to 91230000000.0 or 71539000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Oper_Rev = 91230000000.0 OR Income_Statement.Oper_Rev = 71539000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have owner's equity attributable to the parent company of either 613419000000.0 or 713100000000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Own_Eq_Attr_Parent = 613419000000.0 OR Balance_Sheet.Own_Eq_Attr_Parent = 713100000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code and other liabilities of each stock.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Oth_Liab FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the details of the record with the highest value of translation difference of foreign currency statements.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Exch_Diff_Cash DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are either China Mingsheng Bank or have cash paid for investment equal to 1004883902000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Cash_Flow_Statement.Cash_Pay_Invest = 1004883902000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the stock codes and the count of unique net profit attributable to the owner of the parent company for each stock code?",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Attr_Parent_Net_Profit) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code and hold-to-maturity investment value of all records, sorted by their other liabilities in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Held_Mat_Invest FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Oth_Liab DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which net cash flow generated from investment activities value only appeared once?",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Inv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Inv HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the cash and deposits with central bank and trading financial liabilities of the top 5 records with the highest trading financial liabilities.",
    "query": "SELECT Balance_Sheet.Trad_Fin_Liab , Balance_Sheet.Cash_CB FROM Balance_Sheet ORDER BY Balance_Sheet.Trad_Fin_Liab DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average other comprehensive income for each net cash received from disposal of fixed assets, intangible assets, and other long-term assets value?",
    "query": "SELECT avg(Income_Statement.Oth_Compre_Inc) , Cash_Flow_Statement.Cash_Disposal_Assets FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cash_Disposal_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock codes have available-for-sale financial assets less than or equal to 42447925315, in descending order?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Avail_Sale_FAs <= 42447925315 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the name of stocks whose other cash payments related to operating activities are not equal to 95779000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Op_Other != 95779000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all data of the record with the highest opening balance of cash equivalents.",
    "query": "SELECT * FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cash_Eq_Begin_Period DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with all the details of the record with the highest value of other assets.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Oth_Assets DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me the securities code and total assets of records, sorted by interest payable in descending order?",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Tot_Assets FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Int_Pay DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three stocks have the highest intangible assets?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Intang_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code, asset impairment loss, and taxes and surcharges for each record.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Assets_Imp_Loss , Income_Statement.Tax_n_Surs FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of the top three companies with the highest undistributed profits.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Undist_Profits DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of records where the total profit is not equal to 16410000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Profit != 16410000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fair value change income and operating profit of the top 5 records with the highest fair value change income.",
    "query": "SELECT Income_Statement.FV_Change_Inc , Income_Statement.Oper_Profit FROM Income_Statement ORDER BY Income_Statement.FV_Change_Inc DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an increase in deferred income tax liabilities greater than 47334431484 and a decrease in deferred income tax assets greater than 26867897326.0?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.DIT_Liability_Increase > 47334431484 AND Cash_Flow_Statement.DIT_Asset_Reduction > 26867897326.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the average available-for-sale financial assets, the minimum deferred tax liability and the minimum deposits from interbank and other financial institutions across all records.",
    "query": "SELECT AVG (Balance_Sheet.Avail_Sale_FAs) , MIN (Balance_Sheet.Def_IT_Liab), MIN (Balance_Sheet.IB_Dep_Oth_FIs) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the operating expenses of all records, along with the total cash inflows from operating activities for each.",
    "query": "SELECT Income_Statement.Oper_Exp , SUM (Cash_Flow_Statement.Op_CF_Sub) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Oper_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all the records with Stk_Code containing the substring '600036.SH'.",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600036.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the fee and commission income for records whose increase in operating payables is between 252407000000.0 and 150890000000.0.",
    "query": "SELECT Income_Statement.Fee_Com_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Oper_Payables_Increase BETWEEN 252407000000.0 AND 150890000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the lending funds and other assets of the records whose capital reserves are either above or below 81762000000.0?",
    "query": "SELECT Balance_Sheet.Lending_Funds , Balance_Sheet.Oth_Assets FROM Balance_Sheet WHERE Balance_Sheet.Cap_Reserves > 81762000000.0 OR Balance_Sheet.Cap_Reserves < 81762000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the maximum and minimum income tax expenses among all records?",
    "query": "SELECT MAX (Income_Statement.Income_Tax_Exp) , MIN (Income_Statement.Income_Tax_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the value of cash payments related to financing activities for records where there is no value for net increase in borrowing funds from other financial institutions.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Fin_Other FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_Inc_IB_Borrowings IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of three companies with the highest operating revenue.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Rev DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me a list of stock names and taxes and surcharges values, sorted by interest expenses in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Tax_n_Surs FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Int_Exp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the other liabilities values that have at least 4 records with borrowing funds from other financial institutions larger than 106646000000.0.",
    "query": "SELECT Balance_Sheet.Oth_Liab FROM Balance_Sheet WHERE Balance_Sheet.Bor_Funds_Oth_FIs > 106646000000.0 GROUP BY Balance_Sheet.Oth_Liab HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the securities codes in descending alphabetical order whose interest expenses are less than or equal to 89866000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Int_Exp <= 89866000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the basic earnings per share and net profit in cash flow statement of the top five records with the highest basic earnings per share.",
    "query": "SELECT Income_Statement.Basic_EPS , Cash_Flow_Statement.CF_Stmt_Net_Income FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Basic_EPS DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each company name, show me the number of records that have a net cash received from disposal of fixed assets, intangible assets, and other long-term assets value higher than 1394000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Disposal_Assets > 1394000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three stocks with the highest increase in deferred income tax liabilities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.DIT_Liability_Increase DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three stocks with the highest loss on disposal of non-current assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Loss_Disposal_Nonc_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all stock codes that appear less than 4 times.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) < 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a net profit in cash flow statement exceeding 12365000000.0 for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Net_Income > 12365000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the mean net cash flow generated from financing activities for each non-operating income value.",
    "query": "SELECT avg(Cash_Flow_Statement.Net_CF_Fin) , Income_Statement.Non_Op_Rev FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Non_Op_Rev"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out how many different operating payables increase values are there for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Cash_Flow_Statement.Oper_Payables_Increase) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the operating expenses and business and management fees of the top 5 records with the highest operating expenses.",
    "query": "SELECT Income_Statement.Oper_Exp , Income_Statement.Gen_n_Admin_Exps FROM Income_Statement ORDER BY Income_Statement.Oper_Exp DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each company name, show me the number of records and different values of capital converted from debt.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.Debt_Converted_Capital) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the stock code with the highest number of records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the securities code of records that have net profit attributable to the owner of the parent company different from 12114000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Net_Profit != 12114000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes in descending alphabetical order, for all records where other business income is no more than 1283000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Inc <= 1283000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Huaxia Bank or have cash paid for interest, handling fees, and commissions equal to 71825000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Cash_Flow_Statement.Cash_Pay_Int_Fees_Com = 71825000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes that contain the word '600015.SH'.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600015.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the fair value change income and net profits for records where fair value change income exceeds -2413000000.0.",
    "query": "SELECT Income_Statement.FV_Change_Inc , Income_Statement.Net_Profit FROM Income_Statement WHERE Income_Statement.FV_Change_Inc > -2413000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the comprehensive income attributable to shareholders of the parent company and the cash paid to and on behalf of employees for records with net increase in borrowing funds from other financial institutions larger than 13068329529 or shorter than 3623846164.",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc , Cash_Flow_Statement.Cash_Pay_Emp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_IB_Borrowings > 13068329529 OR Cash_Flow_Statement.Net_Inc_IB_Borrowings < 3623846164"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has only one record?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average interest receivable, the minimum investment real estate value, and the minimum deposits from interbank and other financial institutions value in our data.",
    "query": "SELECT AVG (Balance_Sheet.Int_Receiv) , MIN (Balance_Sheet.Inv_Real_Estate), MIN (Balance_Sheet.IB_Dep_Oth_FIs) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Huaxia Bank or have an investment income of exactly 8976000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Income_Statement.Inv_Inc = 8976000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code of records that do not have a diluted earnings per share of 0.7.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Diluted_EPS != 0.7"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two stock codes of records with the highest business and management fees?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Gen_n_Admin_Exps DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock name and the decrease in inventory value of all records, sorted by the decreasing order of interest income.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Inventory_Decrease FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Int_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest value of fixed assets.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Fix_Assets DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600015.SH or undistributed profits of 115670000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Balance_Sheet.Undist_Profits = 115670000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average value of lending funds across all records?",
    "query": "SELECT MAX (Balance_Sheet.Lending_Funds) , MIN (Balance_Sheet.Lending_Funds), AVG (Balance_Sheet.Lending_Funds) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the highest assets impairment loss.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Assets_Imp_Loss DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the information in the Basic_Info table.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have borrowing from the Central Bank less than 1980?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Bor_CB < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which company name occurs the most frequently in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have decrease in deferred income tax assets, while the sum of losses on disposal of fixed assets, intangible assets, and other long-term assets is more than 10?",
    "query": "SELECT Cash_Flow_Statement.DIT_Asset_Reduction FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.DIT_Asset_Reduction HAVING sum(Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the securities code and the purchase of resale financial assets for each record.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Buyback_FAs FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have income tax expenses exceeding 775000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Income_Tax_Exp > 775000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of investment losses and cash paid to employees in records where investment losses are greater than 1494406973.0?",
    "query": "SELECT Cash_Flow_Statement.Investment_Loss , Cash_Flow_Statement.Cash_Pay_Emp FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Investment_Loss > 1494406973.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all details of the record with the highest payable employee compensation value.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Emp_Comp_PAY DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have fair value change loss values not equal to -4319000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fair_Value_Change_Loss != -4319000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "get me the operating profit and the net increase in deposits with central bank and interbank funds for the top five records with the highest operating profit.",
    "query": "SELECT Income_Statement.Oper_Profit , Cash_Flow_Statement.CenBank_Interbank_Net_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Oper_Profit DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a loss on disposal of non-current assets less than 1980?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Loss_Disposal_Nonc_Assets < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities codes that appear more than 14 times in our records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) > 14"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the net cash flow generated from investment activities and subsidiary absorbing minority shareholder investments of the top 5 records with the highest subsidiary absorbing minority shareholder investments?",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Absorb_Minority , Cash_Flow_Statement.Net_CF_Inv FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Subsidiary_Absorb_Minority DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of purchase of resale financial assets and cash and deposits with central bank, where long term equity investment is either greater than 26296000000.0 or less than 34062299161.0.",
    "query": "SELECT Balance_Sheet.Buyback_FAs , Balance_Sheet.Cash_CB FROM Balance_Sheet WHERE Balance_Sheet.LT_Eq_Invest > 26296000000.0 OR Balance_Sheet.LT_Eq_Invest < 34062299161.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of stocks whose other business costs are less than or equal to 857000000.0, sorted in descending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Costs <= 857000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list out the stock codes of records that have a different value of total liabilities and owner's equity from 8932519000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab_Own_Eq != 8932519000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the stock name, other comprehensive income, and basic earnings per share for all the records.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Oth_Compre_Inc , Income_Statement.Basic_EPS FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for every deferred tax liability value in balance sheet, show me the value itself, how many estimated liabilities, and how many records have this value.",
    "query": "SELECT Balance_Sheet.Def_IT_Liab , count(DISTINCT Balance_Sheet.Est_Liab) , count(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Def_IT_Liab"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or an investment loss of -11281000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Cash_Flow_Statement.Investment_Loss = -11281000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have income from changes in fair value more than 2462319000.0 for each stock code?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.FV_Change_Inc > 2462319000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the five most frequent total owner's equity attributable to the parent company values?",
    "query": "SELECT Balance_Sheet.Own_Eq_Attr_Parent FROM Balance_Sheet GROUP BY Balance_Sheet.Own_Eq_Attr_Parent ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock codes of records whose cash paid for distributing dividends, profits, or paying interest is not equal to 4821000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Distribute_Dividends_Profits != 4821000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Bank of Jiangsu or have fee and commission income equal to 3157221000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Income_Statement.Fee_Com_Inc = 3157221000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks where income from changes in fair value is less than or equal to 1814000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.FV_Change_Inc <= 1814000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the eight least frequent stock names in our records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each company, i would like to know how many records and different net profit values do we have, along with the company name.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Income_Statement.Net_Profit) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have payable employee compensation before the year 1980?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Emp_Comp_PAY < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the information about records with negative derivative financial liabilities.",
    "query": "SELECT * FROM Balance_Sheet WHERE Balance_Sheet.Deriv_Liab < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values of dividends and profits paid by subsidiaries to minority shareholders are there in our records?",
    "query": "SELECT count(DISTINCT Cash_Flow_Statement.Subsidiary_Pay_Minority) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the average opening balance of cash equivalents, the smallest amortization of intangible assets, and the smallest asset impairment provision in our records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Initial_Cash_Equiv) , MIN (Cash_Flow_Statement.Intangible_Asset_Amortization), MIN (Cash_Flow_Statement.Asset_Impairment_Dec) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me interest receivables with at least 4 records where the total liabilities and owner's equity is greater than 4098550000000.0.",
    "query": "SELECT Balance_Sheet.Int_Receiv FROM Balance_Sheet WHERE Balance_Sheet.Tot_Liab_Own_Eq > 4098550000000.0 GROUP BY Balance_Sheet.Int_Receiv HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have deposits from interbank and other financial institutions before 1980?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.IB_Dep_Oth_FIs < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values of cash received for interest, handling fees, and commissions do we have for each stock?",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Cash_Flow_Statement.Cash_Int_Commission_Collected) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks whose net cash flow generated from financing activities is not equal to -78581000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Fin != -78581000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the inventory decrease values that appear less than 9 times.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Inventory_Decrease HAVING COUNT (*) < 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"Shanghai Pudong Development Bank\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of trading financial liabilities that appeared only once?",
    "query": "SELECT Balance_Sheet.Trad_Fin_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Trad_Fin_Liab HAVING COUNT (*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of the two stocks with the highest cash inflows from investment activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inv_CF_In_Sub DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the average deposits from interbank and other financial institutions, the minimum payable employee compensation and the minimum minority shareholders' equity across all records.",
    "query": "SELECT AVG (Balance_Sheet.IB_Dep_Oth_FIs) , MIN (Balance_Sheet.Emp_Comp_PAY), MIN (Balance_Sheet.Minor_Int_Eq) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the foreign exchange rate change on cash for all records that have no dividends and profits paid by subsidiaries to minority shareholders.",
    "query": "SELECT Cash_Flow_Statement.FX_Rate_Change_Cash FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Subsidiary_Pay_Minority IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "get me all the securities codes from the basic info table.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the securities codes of the top two records with the highest total assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tot_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code, fixed asset depreciation amortization decrease, and other cash related to operating activities for each record.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec , Cash_Flow_Statement.Cash_Oth_Oper_Activities FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of stocks and received other cash related to financing activities, sorted by cash received for interest, handling fees, and commissions in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Recv_Other_Fin FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Int_Commission_Collected DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the top three securities with the highest value of deferred tax assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Def_IT_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the securities codes of the records that appear more than 7 times.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) > 7"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the cash paid to and on behalf of employees and income from changes in fair value for those records whose investment income from associates and joint ventures is either above 23860991409.0 or below 31428654111.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Emp , Income_Statement.FV_Change_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Inv_Inc_Assoc_JV > 23860991409.0 OR Income_Statement.Inv_Inc_Assoc_JV < 31428654111.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Bank of Jiangsu or have other assets equal to 12296993000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Balance_Sheet.Oth_Assets = 12296993000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which combinations of asset impairment provision and other cash received related to operating activities have the asset impairment provision greater than 230000000.0?",
    "query": "SELECT Cash_Flow_Statement.Asset_Impairment_Dec , Cash_Flow_Statement.Cash_Oth_Oper_Activities FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Asset_Impairment_Dec > 230000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the names of the two companies with the highest amount of bonds payable.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Bonds_PAY DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock codes in descending alphabetical order for records with subsidiary payments to minority shareholders less than or equal to 18253188566.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Subsidiary_Pay_Minority <= 18253188566 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash paid for other investment activities, sorted in descending order by net cash flow generated from financing activities.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Inv_Other FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Net_CF_Fin DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or have indirect method - net cash flow generated from operating activities equal to 94352000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Cash_Flow_Statement.IM_NCF_Oper_Activities = 94352000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks that appear only once in the data.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the securities code and deposit absorption in descending order of borrowing from the central bank.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Acc_Deposits FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Bor_CB DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the instances of bonds payable and deposits from interbank and other financial institutions for which bonds payable is greater than 265819000000.0?",
    "query": "SELECT Balance_Sheet.Bonds_PAY , Balance_Sheet.IB_Dep_Oth_FIs FROM Balance_Sheet WHERE Balance_Sheet.Bonds_PAY > 265819000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock codes of all records where non-operating expenses are less than or equal to 42892000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Non_Op_Exp <= 42892000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of loss on disposal of non current assets that have at least 4 records, and the other business income is larger than 1376000000.0?",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets FROM Income_Statement WHERE Income_Statement.Oth_Biz_Inc > 1376000000.0 GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code that contains the phrase '600015.SH'.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600015.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, how many different values of cash paid for interest, handling fees, and commissions are there?",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Cash_Flow_Statement.Cash_Pay_Int_Fees_Com) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks don't have surplus reserves value equal to 94985000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Sur_Reserves != 94985000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the most frequent value of exchange gains in the income statement?",
    "query": "SELECT Income_Statement.Exch_Gain_Inc FROM Income_Statement GROUP BY Income_Statement.Exch_Gain_Inc ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list two securities codes with the highest interest expenses.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Int_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the securities codes in descending order for records whose investment income is less than or equal to 8976000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Inv_Inc <= 8976000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the exchange gains and taxes and surcharges for records with exchange gains less than -106000000.0.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc , Income_Statement.Tax_n_Surs FROM Income_Statement WHERE Income_Statement.Exch_Gain_Inc < -106000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the investment receivable and issuance of loans and advances of the top five records with the highest investment receivable value.",
    "query": "SELECT Balance_Sheet.Recv_Invest , Balance_Sheet.Loans_Adv FROM Balance_Sheet ORDER BY Balance_Sheet.Recv_Invest DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each security code, give me the security code itself, the number of operating profits, and the total number of records associated with that security code.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Income_Statement.Oper_Profit) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top three stocks with the highest operating expenses.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest net income from handling fees and commissions?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Net_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the total profit in descending order of their cash paid to and on behalf of employees.",
    "query": "SELECT Income_Statement.Tot_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Emp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an opening balance of cash equivalents greater than 567198000000.0 and income from exchange gains greater than -106000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Initial_Cash_Equiv > 567198000000.0 AND Income_Statement.Exch_Gain_Inc > -106000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the investment real estate values that appear in at least 6 records.",
    "query": "SELECT Balance_Sheet.Inv_Real_Estate FROM Balance_Sheet GROUP BY Balance_Sheet.Inv_Real_Estate HAVING COUNT (*) >= 6"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the securities codes of the top two records with the highest total comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the five most common values of exchange gains in the records?",
    "query": "SELECT Income_Statement.Exch_Gain_Inc FROM Income_Statement GROUP BY Income_Statement.Exch_Gain_Inc ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the details of the record with the highest value of minority shareholders' equity.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Minor_Int_Eq DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the distribution of dividends and profits, as well as the net increase in customer deposits and interbank deposits, for records with a value of Distribute_Dividends_Profits less than 11854000000.0.",
    "query": "SELECT Cash_Flow_Statement.Distribute_Dividends_Profits , Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Distribute_Dividends_Profits < 11854000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the stock codes of the two records with the highest value of other cash received related to operating activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Oth_Oper_Activities DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the information about records with a negative value in the purchase of resale financial assets column.",
    "query": "SELECT * FROM Balance_Sheet WHERE Balance_Sheet.Buyback_FAs < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the other liabilities value which appear more than once.",
    "query": "SELECT Balance_Sheet.Oth_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Oth_Liab HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the total comprehensive income attributable to shareholders of the parent company for records that appear more than once.",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock name, show me the number of records and distinct values of net increase in cash and cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.IM_NCF_Cash_Eq) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a value of 195000000.0 for the variable Minor_Int_Inc_Loss?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Minor_Int_Inc_Loss = 195000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks whose net increase in borrowing funds from other financial institutions is less than or equal to 10549826640, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_IB_Borrowings <= 10549826640 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock codes in descending order whose purchase of resale financial assets value is 31459000000.0 or less.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Buyback_FAs <= 31459000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the count of net profit and total count of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Income_Statement.Net_Profit) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the number of records, different values of other cash related to operating activities and the corresponding stock code for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Cash_Flow_Statement.Cash_Oth_Oper_Activities) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with all the details of the record with the highest value of general risk preparation.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Gen_Risk_Res DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code of records that have different values of total comprehensive income attributable to minority shareholders than 530000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc != 530000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, how many different values of held-to-maturity investments do we have?",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Balance_Sheet.Held_Mat_Invest) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have owner's equity attributable to the parent company more than 613419000000.0 for each stock code?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Own_Eq_Attr_Parent > 613419000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the value of other liabilities, the number of different derivative financial assets and the total number of records for each value of other liabilities.",
    "query": "SELECT Balance_Sheet.Oth_Liab , count(DISTINCT Balance_Sheet.Deriv_Assets) , count(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Oth_Liab"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the trading financial assets and the count of records for each value of trading financial assets.",
    "query": "SELECT Balance_Sheet.Trad_FAs , count(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Trad_FAs"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the total liabilities and owner's equity, along with the translation difference of foreign currency statements, for records with total assets greater than or less than 8932519000000.0.",
    "query": "SELECT Balance_Sheet.Tot_Liab_Own_Eq , Balance_Sheet.Exch_Diff_Cash FROM Balance_Sheet WHERE Balance_Sheet.Tot_Assets > 8932519000000.0 OR Balance_Sheet.Tot_Assets < 8932519000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the other business costs values that have at least four records where the total profit is greater than 22433659000.0?",
    "query": "SELECT Income_Statement.Oth_Biz_Costs FROM Income_Statement WHERE Income_Statement.Tot_Profit > 22433659000.0 GROUP BY Income_Statement.Oth_Biz_Costs HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me how many records have investment income greater than 5883075000.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Inv_Inc > 5883075000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks that have at least two records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) >= 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of other assets and payable employee compensation in records where other assets are greater than 145910000000.0?",
    "query": "SELECT Balance_Sheet.Oth_Assets , Balance_Sheet.Emp_Comp_PAY FROM Balance_Sheet WHERE Balance_Sheet.Oth_Assets > 145910000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest net profit in cash flow statement.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.CF_Stmt_Net_Income DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of the top three stocks with the highest value of cash received from other cash related to operating activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Oth_Oper_Activities DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with basic earnings per share higher than 2.93 do we have for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Basic_EPS > 2.93 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of two companies with the highest cash outflows from financing activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fin_CF_Out_Sub DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the securities codes whose decrease in inventory is less than or equal to 39056216337, ordered in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inventory_Decrease <= 39056216337 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes that have more than 6 occurrences in the database.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) > 6"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and net cash flow generated from cash and cash equivalents for all records.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Net_CF_Cash_Equiv FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the cash flow statement - net profit for records where the asset impairment provision is null.",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Net_Income FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Asset_Impairment_Dec IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the information available in cash flow statement records.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all fee and commission income values that have at least four records with fair value change loss greater than -7930000000.0.",
    "query": "SELECT Income_Statement.Fee_Com_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fair_Value_Change_Loss > -7930000000.0 GROUP BY Income_Statement.Fee_Com_Inc HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the value of amortization of intangible assets and the number of records with each value.",
    "query": "SELECT Cash_Flow_Statement.Intangible_Asset_Amortization , COUNT(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Intangible_Asset_Amortization"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks where the cash paid for the purchase and construction of fixed assets is less than or equal to 4674000000.0 in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Assets <= 4674000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of increase in deferred income tax liabilities and cash paid for interest, handling fees, and commissions, for records whose received other financing cash is either greater than 31119913670.0 or less than 2283732796.0.",
    "query": "SELECT Cash_Flow_Statement.DIT_Liability_Increase , Cash_Flow_Statement.Cash_Pay_Int_Fees_Com FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Recv_Other_Fin > 31119913670.0 OR Cash_Flow_Statement.Recv_Other_Fin < 2283732796.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose hold-to-maturity investment value is not equal to 10549957517.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Held_Mat_Invest != 10549957517"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a net interest income greater than 60428000000.0 for each company?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Net_Int_Inc > 60428000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average of cash received from other cash related to operating activities for each value of total comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_Oth_Oper_Activities) , Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the fair value change loss and cash paid for interest, handling fees, and commissions for records with fair value change loss smaller than -7930000000.0.",
    "query": "SELECT Cash_Flow_Statement.Fair_Value_Change_Loss , Cash_Flow_Statement.Cash_Pay_Int_Fees_Com FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Fair_Value_Change_Loss < -7930000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many distinct undistributed profits values are there in the records?",
    "query": "SELECT count(DISTINCT Balance_Sheet.Undist_Profits) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the exchange gains and the subtotal of cash outflows from financing activities for records with exchange gains above 24366000.0.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc , Cash_Flow_Statement.Fin_CF_Out_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Exch_Gain_Inc > 24366000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of the top three stocks with the highest surplus reserves.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Sur_Reserves DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the company name \"Shanghai Pudong Development Bank\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"Shanghai Pudong Development Bank\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the information available in the income statement table for all records.",
    "query": "SELECT * FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the details of the record with the highest cash paid for investment.",
    "query": "SELECT * FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cash_Pay_Invest DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest cash and deposits with central bank value.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Cash_CB DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the value of fixed assets acquired through financing lease that has the fewest occurrences in the table.",
    "query": "SELECT Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the smallest net cash flow generated from investment activities for each subtotal of cash outflows from investment activities?",
    "query": "SELECT MIN (Cash_Flow_Statement.Net_CF_Inv) , Cash_Flow_Statement.Inv_CF_Out_Sub FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Inv_CF_Out_Sub"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the name of stocks whose non-operating expenses are not equal to 42892000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Non_Op_Exp != 42892000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the stock names and their initial balance of cash equivalents by the decrease of increase in operating payables.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Initial_Cash_Equiv FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Oper_Payables_Increase DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the comprehensive income attributable to shareholders of the parent company for records where investment income from associates and joint ventures is between 43028778631.0 and 138000000.0.",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement WHERE Income_Statement.Inv_Inc_Assoc_JV BETWEEN 43028778631.0 AND 138000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have deferred income tax liabilities equal to 47334431484?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.DIT_Liability_Increase = 47334431484 OR Cash_Flow_Statement.DIT_Liability_Increase = 47334431484"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have long term equity investment values of either 34062299161.0 or 26296000000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.LT_Eq_Invest = 34062299161.0 OR Balance_Sheet.LT_Eq_Invest = 26296000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock's investment income is not equal to 8976000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Inv_Inc != 8976000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the count for each stock code, how many records and distinct values of foreign exchange rate change of cash do they have.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Cash_Flow_Statement.FX_Rate_Change_Cash) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me general and administration expenses value that has at least 4 records with loss on disposal of fixed assets larger than -1000000.0.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec > -1000000.0 GROUP BY Income_Statement.Gen_n_Admin_Exps HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which Stk_Code do not have a minority interest value of 685000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Inc_Loss != 685000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which security codes have 9 or more records in the database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) >= 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have investment cash inflows more than 931722450000.0 and net cash flow generated from operating activities exceeding 126222341000.0?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Inv_CF_In_Sub > 931722450000.0 AND Cash_Flow_Statement.Net_CF_Op > 126222341000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the loss on disposal of fixed assets, intangible assets, and other long-term assets that appear at least 14 times in the records.",
    "query": "SELECT Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec HAVING COUNT (*) >= 14"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the indirect method net increase in cash and cash equivalents and the corresponding count of records for each value.",
    "query": "SELECT Cash_Flow_Statement.IM_NCF_Cash_Eq , count(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.IM_NCF_Cash_Eq"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the stock names whose total liabilities and owner's equity are smaller than or equal to 4098550000000.0, sorted in descending order of stock names.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab_Own_Eq <= 4098550000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have investment losses greater than -11281000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Investment_Loss > -11281000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock name appeared most frequently in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which values of available-for-sale financial assets have at least 5 records?",
    "query": "SELECT Balance_Sheet.Avail_Sale_FAs FROM Balance_Sheet GROUP BY Balance_Sheet.Avail_Sale_FAs HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the values of absorbing investments and the subtotal of cash outflows from operating activities for records where the value of absorbing investments is greater than 19646535200.",
    "query": "SELECT Cash_Flow_Statement.Absorb_Investment , Cash_Flow_Statement.Op_CF_Out_Sub FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Absorb_Investment > 19646535200"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all unique values of interest expenses in the income statement.",
    "query": "SELECT distinct(Income_Statement.Int_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or trading financial assets equal to 487716000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Balance_Sheet.Trad_FAs = 487716000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of records that have a different value of total liabilities from 3790933000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab != 3790933000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the smallest minority interest values in each subtotal of cash outflows from operating activities.",
    "query": "SELECT MIN (Income_Statement.Minor_Int_Inc_Loss) , Cash_Flow_Statement.Op_CF_Out_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Op_CF_Out_Sub"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the stock code of 600015.SH or the investment in real estate value equal to 1227000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Balance_Sheet.Inv_Real_Estate = 1227000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of securities whose derivative financial assets are less than or equal to 70837000000.0, in descending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Deriv_Assets <= 70837000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes that contain the word '600036.SH'.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600036.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the issue bonds values whose total business and management fees are greater than 10.",
    "query": "SELECT Cash_Flow_Statement.Issue_Bonds FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Issue_Bonds HAVING sum(Income_Statement.Gen_n_Admin_Exps) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the fee and commission expenses value that appears the least in our records.",
    "query": "SELECT Income_Statement.Fee_Com_Exp FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Exp ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have the substring '600016.SH' in their securities code?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600016.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the name of stocks whose net increase in cash and cash equivalents doesn't equal to 22704805000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Cash_Equiv != 22704805000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the data from cash flow statement.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the handling fees and commission expenses and interest income for records with expenses at handling fees and commission less than 3558000000.0.",
    "query": "SELECT Income_Statement.Fee_Com_Exp , Income_Statement.Int_Inc FROM Income_Statement WHERE Income_Statement.Fee_Com_Exp < 3558000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent values of other business income in ascending order?",
    "query": "SELECT Income_Statement.Oth_Biz_Inc FROM Income_Statement GROUP BY Income_Statement.Oth_Biz_Inc ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average tax and surcharges value, the minimum investment income, and the minimum net increase in deposits with central bank and interbank funds for all records?",
    "query": "SELECT AVG (Income_Statement.Tax_n_Surs) , MIN (Income_Statement.Inv_Inc), MIN (Cash_Flow_Statement.CenBank_Interbank_Net_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks where the net profit is 12365000000.0 or lower, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Net_Profit <= 12365000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to the stock 600015.SH or has cash paid for investment equal to 833348000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Cash_Flow_Statement.Cash_Pay_Invest = 833348000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the lowest cash payment for investment of each dividend and profits paid by subsidiaries to minority shareholders.",
    "query": "SELECT MIN (Cash_Flow_Statement.Cash_Pay_Inv_Other) , Cash_Flow_Statement.Subsidiary_Pay_Minority FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Subsidiary_Pay_Minority"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock code and other cash payments related to financing activities of each record.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Cash_Pay_Fin_Other FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose asset impairment provision value is not equal to 49000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Asset_Impairment_Dec != 49000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Mingsheng Bank or their interest income is exactly 133080000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Income_Statement.Int_Inc = 133080000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock code and financial expenses in cash flow statement.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.CF_Stmt_Fin_Expenses FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of records that have interest payable value different from 24567760127.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Int_Pay != 24567760127"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600919.SH or other business income equal to 2447000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Income_Statement.Oth_Biz_Inc = 2447000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me two securities codes of the records with the highest cash payments related to investment activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Inv_Other DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the minor interest income/loss and operating revenue for records where the minor interest income/loss is less than 251000000.0.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss , Income_Statement.Oper_Rev FROM Income_Statement WHERE Income_Statement.Minor_Int_Inc_Loss < 251000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the minor interest (in Yuan) in descending order based on their cash equivalents opening balance.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Begin_Period DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the distinct securities codes from our records.",
    "query": "SELECT distinct(Basic_Info.Stk_Code) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of parent company's net profit that has the highest number of occurrences?",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Net_Profit ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum value of other assets in all records.",
    "query": "SELECT avg(Balance_Sheet.Oth_Assets), max(Balance_Sheet.Oth_Assets) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top five interbank deposits values among the records with the highest frequency?",
    "query": "SELECT Balance_Sheet.IB_Deposits FROM Balance_Sheet GROUP BY Balance_Sheet.IB_Deposits ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the financial expenses of records whose impact of exchange rate changes on cash and cash equivalents is between 610000000.0 and 3636000000.0.",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Fin_Expenses FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.FX_Rate_Change_Cash BETWEEN 610000000.0 AND 3636000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of top three securities, in terms of other assets value.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Oth_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code and total liabilities of all records, sorted by investment in real estate in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Tot_Liab FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Inv_Real_Estate DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the records where the subtotal of cash inflows from financing activities is negative.",
    "query": "SELECT * FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Fin_CF_In_Sub < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which cash and deposits with central bank value have at least 11 records?",
    "query": "SELECT Balance_Sheet.Cash_CB FROM Balance_Sheet GROUP BY Balance_Sheet.Cash_CB HAVING COUNT (*) >= 11"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average capital reserves, minimum trading financial assets, and minimum intangible assets across all records.",
    "query": "SELECT AVG (Balance_Sheet.Cap_Reserves) , MIN (Balance_Sheet.Trad_FAs), MIN (Balance_Sheet.Intang_Assets) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the asset impairment provision values that have a sum of net increase in customer deposits and interbank deposits greater than 10.",
    "query": "SELECT Cash_Flow_Statement.Asset_Impairment_Dec FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Asset_Impairment_Dec HAVING sum(Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose deferred tax assets value is less than or equal to 11907000000.0, sorted in descending order of their names.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Def_IT_Assets <= 11907000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code of records that have a deferred tax asset value different from 16367490000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Def_IT_Assets != 16367490000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of stocks whose exchange gains are not equal to 2480000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Exch_Gain_Inc != 2480000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all details of the record with the highest value of cash paid for other operating activities.",
    "query": "SELECT * FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cash_Pay_Op_Other DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average operating expenses, the minimum business and management fees, and the minimum total comprehensive income attributable to minority shareholders in our data?",
    "query": "SELECT AVG (Income_Statement.Oper_Exp) , MIN (Income_Statement.Gen_n_Admin_Exps), MIN (Income_Statement.Minor_Int_Shareholders_Compre_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average value of minority shareholders' equity for each category of other liabilities.",
    "query": "SELECT avg(Balance_Sheet.Minor_Int_Eq) , Balance_Sheet.Oth_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Oth_Liab"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me all the records in the income statement where other business costs are negative.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Oth_Biz_Costs < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average debt repayment, the minimum net cash flow generated from operating activities and the minimum cash inflows from financing activities for all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Repay_Debt) , MIN (Cash_Flow_Statement.IM_NCF_Oper_Activities), MIN (Cash_Flow_Statement.Fin_CF_In_Sub) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the long-term equity investment and paid-in capital of records whose long-term equity investment is less than 46083375627.0.",
    "query": "SELECT Balance_Sheet.LT_Eq_Invest , Balance_Sheet.Paid_Up_Cap FROM Balance_Sheet WHERE Balance_Sheet.LT_Eq_Invest < 46083375627.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the two stock codes that have the highest net increase in cash and cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.IM_NCF_Cash_Eq DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average business and management fees for each value of the impact of exchange rate changes on cash and cash equivalents.",
    "query": "SELECT avg(Income_Statement.Gen_n_Admin_Exps) , Cash_Flow_Statement.FX_Rate_Change_Cash FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.FX_Rate_Change_Cash"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of the top three records with the highest other comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oth_Compre_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the value of bonds payable and corresponding total owner's equity attributable to the parent company, for those records whose bonds payable is greater than 265819000000.0.",
    "query": "SELECT Balance_Sheet.Bonds_PAY , Balance_Sheet.Own_Eq_Attr_Parent FROM Balance_Sheet WHERE Balance_Sheet.Bonds_PAY > 265819000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the total count of records in the cash flow statement?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent other liabilities values, sorted by their frequency in ascending order?",
    "query": "SELECT Balance_Sheet.Oth_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Oth_Liab ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top two companies with the highest fee and commission income.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all borrowing from the Central Bank values and the corresponding count of records, sorted by the frequency.",
    "query": "SELECT Balance_Sheet.Bor_CB , COUNT (*) FROM Balance_Sheet GROUP BY Balance_Sheet.Bor_CB ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities have only one record?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the number of records and the stock codes for each stock that has bonds payable exceeding 451699954000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Bonds_PAY > 451699954000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the average and maximum loss on scrapping of fixed assets for each record.",
    "query": "SELECT avg(Cash_Flow_Statement.Fixed_Asset_Scrap_Loss), max(Cash_Flow_Statement.Fixed_Asset_Scrap_Loss) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock name has the least number of records?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the surplus reserves values that appeared more than twice in our data?",
    "query": "SELECT Balance_Sheet.Sur_Reserves FROM Balance_Sheet GROUP BY Balance_Sheet.Sur_Reserves HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent values of cash paid for debt repayment?",
    "query": "SELECT Cash_Flow_Statement.Repay_Debt FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Repay_Debt ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the indirect method net increase in cash and cash equivalents and net cash flow generated from operating activities for the records whose capital converted from debt is above 2559439174 or below 4589071433?",
    "query": "SELECT Cash_Flow_Statement.IM_NCF_Cash_Eq , Cash_Flow_Statement.Net_CF_Op FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Debt_Converted_Capital > 2559439174 OR Cash_Flow_Statement.Debt_Converted_Capital < 4589071433"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records for each stock code have a total owner's equity attributable to the parent company greater than 613419000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Own_Eq_Attr_Parent > 613419000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, tell me how many records we have, and sort them by the smallest count first.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net profit attributable to the owner of the parent company with at least four records, where the cash received from issuing bonds is higher than 506253000000.0.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Issue_Bonds > 506253000000.0 GROUP BY Income_Statement.Attr_Parent_Net_Profit HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the operating payables increase and exchange gains of the top five records with the highest operating payables increase.",
    "query": "SELECT Cash_Flow_Statement.Oper_Payables_Increase , Income_Statement.Exch_Gain_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Oper_Payables_Increase DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information about records where the opening balance of cash equivalents is less than 0.",
    "query": "SELECT * FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Eq_Begin_Period < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you list the stock code and decrease in inventory in descending order of net cash received from disposal of fixed assets, intangible assets, and other long-term assets?",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Inventory_Decrease FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Disposal_Assets DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all interbank deposits that have more than 4 records with interest receivable greater than 7919685125.",
    "query": "SELECT Balance_Sheet.IB_Deposits FROM Balance_Sheet WHERE Balance_Sheet.Int_Receiv > 7919685125 GROUP BY Balance_Sheet.IB_Deposits HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average value of fixed assets, the minimum value of intangible assets, and the minimum value of derivative financial assets for all records.",
    "query": "SELECT AVG (Balance_Sheet.Fix_Assets) , MIN (Balance_Sheet.Intang_Assets), MIN (Balance_Sheet.Deriv_Assets) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records and different company names do we have for each stock, with comprehensive income attributable to minority shareholders greater than 391000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc > 391000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have multiple records in our database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of stocks where the net profit attributable to the owner of the parent company is no more than 75752000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Net_Profit <= 75752000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Huaxia Bank or have a cash paid for debt repayment of 10000000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Cash_Flow_Statement.Repay_Debt = 10000000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash payment for other investment activities and other business income for the top 5 records with the highest cash payment for other investment activities.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Inv_Other , Income_Statement.Oth_Biz_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Inv_Other DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the investment income from associates and joint ventures and the non-operating expenses for records with investment income from associates and joint ventures less than 138000000.0.",
    "query": "SELECT Income_Statement.Inv_Inc_Assoc_JV , Income_Statement.Non_Op_Exp FROM Income_Statement WHERE Income_Statement.Inv_Inc_Assoc_JV < 138000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average value of total owner's equity in our data?",
    "query": "SELECT MAX (Balance_Sheet.Tot_Own_Eq) , MIN (Balance_Sheet.Tot_Own_Eq), AVG (Balance_Sheet.Tot_Own_Eq) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average investment income from associates and joint ventures for each net interest income value.",
    "query": "SELECT avg(Income_Statement.Inv_Inc_Assoc_JV) , Income_Statement.Net_Int_Inc FROM Income_Statement GROUP BY Income_Statement.Net_Int_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes in descending alphabetical order, whose interest income is less than or equal to 187334000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Int_Inc <= 187334000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the security codes of records whose net increase in cash and cash equivalents is less than or equal to 22704805000.0, arranged in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.IM_NCF_Cash_Eq <= 22704805000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the smallest fixed assets value for each accounts receivable investment.",
    "query": "SELECT MIN (Balance_Sheet.Fix_Assets) , Balance_Sheet.Recv_Invest FROM Balance_Sheet GROUP BY Balance_Sheet.Recv_Invest"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the records with stock code containing '600919.SH'.",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600919.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum value of other comprehensive income in all records.",
    "query": "SELECT avg(Income_Statement.Oth_Compre_Inc), max(Income_Statement.Oth_Compre_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which company has the highest number of records in our database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of different minority shareholders' equity values for each treasury stock value.",
    "query": "SELECT Balance_Sheet.Treas_Stock , COUNT (DISTINCT Balance_Sheet.Minor_Int_Eq) FROM Balance_Sheet GROUP BY Balance_Sheet.Treas_Stock"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes and closing balance of cash of all records, sorted by descending net cash flow generated from operating activities.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Cash_End_Period FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.IM_NCF_Oper_Activities DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which subsidiaries have made payments to minority shareholders more than twice?",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Pay_Minority FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Subsidiary_Pay_Minority HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the value of decrease in deferred income tax assets for all records where there is null value in business and management fees.",
    "query": "SELECT Cash_Flow_Statement.DIT_Asset_Reduction FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Gen_n_Admin_Exps IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the highest, lowest, and average values of bonds payable in the records?",
    "query": "SELECT MAX (Balance_Sheet.Bonds_PAY) , MIN (Balance_Sheet.Bonds_PAY), AVG (Balance_Sheet.Bonds_PAY) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the tax and surcharges value and other cash payments related to financing activities of records whose interest income exceeds 187334000000.0 or is less than 187334000000.0.",
    "query": "SELECT Income_Statement.Tax_n_Surs , Cash_Flow_Statement.Cash_Pay_Fin_Other FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Int_Inc > 187334000000.0 OR Income_Statement.Int_Inc < 187334000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are either from Shanghai Pudong Development Bank or have a total comprehensive income attributable to minority shareholders of 530000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Income_Statement.Minor_Int_Shareholders_Compre_Inc = 530000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest net increase in customer deposits and interbank deposits?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for stock 600016.SH or whose other comprehensive income is equal to 2721000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Income_Statement.Oth_Compre_Inc = 2721000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many records of each stock code have taxes and surcharges more than 534000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tax_n_Surs > 534000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest cash received from subsidiaries absorbing minority shareholder investments?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Subsidiary_Absorb_Minority DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a stock code of 600000.SH or other comprehensive income equal to 1375220000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Income_Statement.Oth_Compre_Inc = 1375220000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock codes that have net cash flow generated from investment activities less than or equal to -117751000000.0, in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Inv <= -117751000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of records whose investment in real estate is not equal to 9240005991.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Inv_Real_Estate != 9240005991.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all received other cash related to investment activities values and their corresponding total amortization of long-term deferred expenses.",
    "query": "SELECT Cash_Flow_Statement.Recv_Other_Invest , SUM (Cash_Flow_Statement.Longterm_Amortization) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Recv_Other_Invest"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the smallest income from changes in fair value for each operating revenue?",
    "query": "SELECT MIN (Income_Statement.FV_Change_Inc) , Income_Statement.Oper_Rev FROM Income_Statement GROUP BY Income_Statement.Oper_Rev"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes and the depreciation of fixed assets, depletion of oil and gas assets, and depreciation of productive biological assets, sorted by net increase in cash and cash equivalents in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.IM_NCF_Cash_Eq DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the investment cash inflow subtotals that only appeared once.",
    "query": "SELECT Cash_Flow_Statement.Inv_CF_In_Sub FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Inv_CF_In_Sub HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to stock 600919.SH or have an 'other' value of 4006573551?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Cash_Flow_Statement.Other = 4006573551"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of stocks whose income tax expenses does not equal to 2952000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Income_Tax_Exp != 2952000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me interbank deposits values that appear in five or more records.",
    "query": "SELECT Balance_Sheet.IB_Deposits FROM Balance_Sheet GROUP BY Balance_Sheet.IB_Deposits HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the stock codes of records that have different values of cash and deposits with the central bank from 354899000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Cash_CB != 354899000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which other comprehensive income value is associated with the fewest number of records?",
    "query": "SELECT Income_Statement.Oth_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Oth_Compre_Inc ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock, whose subtotal of cash inflows from operating activities is greater than 401985000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Op_CF_Sub > 401985000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the owner's equity attributable to the parent company values that appear in five or more records.",
    "query": "SELECT Balance_Sheet.Own_Eq_Attr_Parent FROM Balance_Sheet GROUP BY Balance_Sheet.Own_Eq_Attr_Parent HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belongs to China Mingsheng Bank or has other comprehensive income of 1375220000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Income_Statement.Oth_Compre_Inc = 1375220000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the total received investment for each value of handling fees and commission expenses.",
    "query": "SELECT Income_Statement.Fee_Com_Exp , SUM (Cash_Flow_Statement.Recv_Investment) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Fee_Com_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the cash payments related to investment activities where the cash received from subsidiaries absorbing minority shareholder investments is exactly 16572429050.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Inv_Other FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Subsidiary_Absorb_Minority BETWEEN 16572429050 AND 16572429050"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the securities codes with cash and deposits with central bank less than or equal to 411019000000.0, in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Cash_CB <= 411019000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the values of debt repayment and net increase in borrowing funds from other financial institutions.",
    "query": "SELECT Cash_Flow_Statement.Repay_Debt , Cash_Flow_Statement.Net_Inc_IB_Borrowings FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the records whose securities code contains the substring '600000.SH'.",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600000.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have deferred tax assets equal to 94073000000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Def_IT_Assets = 94073000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the most frequent value of accounts receivable investment?",
    "query": "SELECT Balance_Sheet.Recv_Invest FROM Balance_Sheet GROUP BY Balance_Sheet.Recv_Invest ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all stock names whose net income from handling fees and commissions is less than or equal to 13962000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Net_Inc <= 13962000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return a list of fee and commission income values in the income statement records.",
    "query": "SELECT Income_Statement.Fee_Com_Inc FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all other comprehensive income values where the total operating expenses exceed 10.",
    "query": "SELECT Income_Statement.Oth_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Oth_Compre_Inc HAVING sum(Income_Statement.Oper_Exp) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the non operating expenses and net profit attributable to the owner of the parent company for records with non operating expenses less than 68000000.0.",
    "query": "SELECT Income_Statement.Non_Op_Exp , Income_Statement.Attr_Parent_Net_Profit FROM Income_Statement WHERE Income_Statement.Non_Op_Exp < 68000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the securities codes available in the database.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of three stocks with the highest diluted earnings per share.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Diluted_EPS DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the securities codes of records whose cash paid for investment is less than or equal to 1056100000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Invest <= 1056100000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the count of unique loss on disposal of fixed assets, intangible assets, and other long-term assets for each closing balance of cash equivalents value?",
    "query": "SELECT Cash_Flow_Statement.Cash_Eq_End_Period , COUNT (DISTINCT Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Eq_End_Period"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the total number of records in balance sheet?",
    "query": "SELECT count(*) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average total owner's equity attributable to the parent company for each value of other liabilities.",
    "query": "SELECT avg(Balance_Sheet.Own_Eq_Attr_Parent) , Balance_Sheet.Oth_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Oth_Liab"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the count of records for each value of deferred tax assets, sorted by the number of records for each value?",
    "query": "SELECT Balance_Sheet.Def_IT_Assets , COUNT (*) FROM Balance_Sheet GROUP BY Balance_Sheet.Def_IT_Assets ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of stocks that have different values of received other cash related to investment activities from 503000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Recv_Other_Invest != 503000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest and lowest payable employee compensation value in our records?",
    "query": "SELECT MAX (Balance_Sheet.Emp_Comp_PAY) , MIN (Balance_Sheet.Emp_Comp_PAY) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest interest income?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Int_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the distinct values of convertible corporate bonds maturing within one year, along with the number of records for each value.",
    "query": "SELECT Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y , COUNT(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest and lowest net interest income value among all records?",
    "query": "SELECT MAX (Income_Statement.Net_Int_Inc) , MIN (Income_Statement.Net_Int_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the net income from handling fees and commissions that have at least four records where total comprehensive income attributable to shareholders of the parent company exceeds 13153000000.0.",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc FROM Income_Statement WHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc > 13153000000.0 GROUP BY Income_Statement.Fee_Com_Net_Inc HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the received other cash related to financing activities for records that do not have a value for the impact of exchange rate changes on cash and cash equivalents.",
    "query": "SELECT Cash_Flow_Statement.Recv_Other_Fin FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.FX_Rate_Change_Cash IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the smallest general risk preparation value for each derivative financial assets value.",
    "query": "SELECT MIN (Balance_Sheet.Gen_Risk_Res) , Balance_Sheet.Deriv_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Deriv_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or have a received other cash related to financing activities value of 14299585929.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Cash_Flow_Statement.Recv_Other_Fin = 14299585929.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me all the records that have '600000.SH' as a substring in their securities code.",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600000.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the net cash flow generated from operating activities for records with initial cash equivalents between 372304000000.0 and 63953659000.0.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Op FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Initial_Cash_Equiv BETWEEN 372304000000.0 AND 63953659000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average operating profit, the minimum comprehensive income attributable to minority shareholders, and the minimum interest expenses across all records?",
    "query": "SELECT AVG (Income_Statement.Oper_Profit) , MIN (Income_Statement.Minor_Int_Shareholders_Compre_Inc), MIN (Income_Statement.Int_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all the securities codes from the Basic_Info table.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock name of China Mingsheng Bank or a general risk preparation value of 133002000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Balance_Sheet.Gen_Risk_Res = 133002000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the securities code that appears exactly 9 times.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) = 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the securities code of records that have an operating profit value different from 22470290000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Profit != 22470290000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks that have convertible corporate bonds maturing within one year value not equal to 41587009075.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y != 41587009075"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me all Op_CF_Out_Sub values that have at least 5 records associated with them.",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Out_Sub FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Op_CF_Out_Sub HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top two stocks with the highest deferred tax liabilities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Def_IT_Liab DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out all the cash inflow subtotals from operating activities that have at least four records with investment income from associates and joint ventures above 23860991409.0.",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Inv_Inc_Assoc_JV > 23860991409.0 GROUP BY Cash_Flow_Statement.Op_CF_Sub HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the most frequent value of total owner's equity attributable to the parent company?",
    "query": "SELECT Balance_Sheet.Own_Eq_Attr_Parent FROM Balance_Sheet GROUP BY Balance_Sheet.Own_Eq_Attr_Parent ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the average assets impairment loss, the minimum impact of exchange rate changes on cash, and the minimum closing balance of cash equivalents for all records.",
    "query": "SELECT AVG (Income_Statement.Assets_Imp_Loss) , MIN (Cash_Flow_Statement.FX_Rate_Change_Cash), MIN (Cash_Flow_Statement.Final_Cash_Equiv) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the exchange gains for records that have a total cash received for interest, handling fees, and commissions greater than 10.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Exch_Gain_Inc HAVING sum(Cash_Flow_Statement.Cash_Int_Commission_Collected) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose investment in real estate is less than or equal to 2962032135.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Inv_Real_Estate <= 2962032135.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the deferred tax assets and total owner's equity of the top five records with the highest value of deferred tax assets.",
    "query": "SELECT Balance_Sheet.Def_IT_Assets , Balance_Sheet.Tot_Own_Eq FROM Balance_Sheet ORDER BY Balance_Sheet.Def_IT_Assets DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the top 5 scrapped fixed asset losses with the highest frequency of occurrence.",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Scrap_Loss FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fixed_Asset_Scrap_Loss ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest loss from changes in fair value?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fair_Value_Change_Loss DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock code, depreciation of fixed assets, depletion of oil and gas assets, and depreciation of productive biological assets, and cash received from subsidiaries absorbing minority shareholder investments in all records.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec , Cash_Flow_Statement.Subsidiary_Absorb_Minority FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose financial assets sold for repurchase value is not equal to 54335023000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Sell_Rep_FAs != 54335023000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of securities whose other business income is less than or equal to 1283000000.0 in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Inc <= 1283000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of two companies that have the highest hold-to-maturity investments.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Held_Mat_Invest DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Bank of Jiangsu or have an exchange gain income of exactly 2480000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Income_Statement.Exch_Gain_Inc = 2480000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Which three companies have the highest tax payments?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tax_Pay DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "get me the income tax expenses of records with net income from handling fees and commissions ranging from 2722306000.0 to 13962000000.0.",
    "query": "SELECT Income_Statement.Income_Tax_Exp FROM Income_Statement WHERE Income_Statement.Fee_Com_Net_Inc BETWEEN 2722306000.0 AND 13962000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the investment cash outflow subtotals that have 9 or more records?",
    "query": "SELECT Cash_Flow_Statement.Inv_CF_Out_Sub FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Inv_CF_Out_Sub HAVING COUNT (*) >= 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the total liabilities of records that appear more than once.",
    "query": "SELECT Balance_Sheet.Tot_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the names of the two stocks that have the highest total assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tot_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three stocks with the highest cash received from other operating activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Oth_Oper_Activities DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records in our database have interest income more than 187334000000.0 and investment losses greater than -4910000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Int_Inc > 187334000000.0 AND Cash_Flow_Statement.Investment_Loss > -4910000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each closing balance of cash equivalents value, give the number of distinct net cash flow generated from investment activities and the total number of records in that group.",
    "query": "SELECT Cash_Flow_Statement.Cash_Eq_End_Period , count(DISTINCT Cash_Flow_Statement.Net_CF_Inv) , count(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Eq_End_Period"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average cash paid for interest, handling fees, and commissions across all records?",
    "query": "SELECT MAX (Cash_Flow_Statement.Cash_Pay_Int_Fees_Com) , MIN (Cash_Flow_Statement.Cash_Pay_Int_Fees_Com), AVG (Cash_Flow_Statement.Cash_Pay_Int_Fees_Com) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of cash received from disposal of fixed assets, intangible assets, and other long-term assets, which has the highest frequency of occurrence in our records?",
    "query": "SELECT Cash_Flow_Statement.Cash_Disposal_Assets FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Disposal_Assets ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities codes for the top three records with the highest values of cash received from other investment activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Recv_Other_Invest DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the diluted earnings per share for all records where the net cash received from disposal of fixed assets, intangible assets, and other long-term assets is null.",
    "query": "SELECT Income_Statement.Diluted_EPS FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Disposal_Assets IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock codes of records with owner's equity attributable to the parent company less than or equal to 230864898000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Own_Eq_Attr_Parent <= 230864898000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me any securities code that appears exactly once in our data.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the highest, lowest, and average operating profit across all records.",
    "query": "SELECT MAX (Income_Statement.Oper_Profit) , MIN (Income_Statement.Oper_Profit), AVG (Income_Statement.Oper_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the unique values of minority shareholders' equity from the balance sheet records.",
    "query": "SELECT distinct(Balance_Sheet.Minor_Int_Eq) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code and fixed assets acquired through financing lease for each record, sorted by the reduction in operating receivables in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Oper_Receivables_Decrease DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the other cash payments related to operating activities that have at least four records with net profit attributable to the owner of the parent company above 17020129000.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Op_Other FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Net_Profit > 17020129000.0 GROUP BY Cash_Flow_Statement.Cash_Pay_Op_Other HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the tax and surcharges value of each record, sorted by their income from changes in fair value in descending order.",
    "query": "SELECT Income_Statement.Tax_n_Surs FROM Income_Statement ORDER BY Income_Statement.FV_Change_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the distinct values of cash paid for various taxes and fees in our records.",
    "query": "SELECT distinct(Cash_Flow_Statement.Cash_Pay_Taxes) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the indirect method net cash flow generated from operating activities value that appears the least number of times?",
    "query": "SELECT Cash_Flow_Statement.IM_NCF_Oper_Activities FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.IM_NCF_Oper_Activities ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the values of other and increase in deferred income tax liabilities in the five records with the highest value of other.",
    "query": "SELECT Cash_Flow_Statement.Other , Cash_Flow_Statement.DIT_Liability_Increase FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Other DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the securities codes that appear more than twice in the database.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have non-operating expenses greater than 68000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Non_Op_Exp > 68000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which values of business and management fees and other cash received related to financing activities are in records with business and management fees higher than 8121690000.0?",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps , Cash_Flow_Statement.Recv_Other_Fin FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Gen_n_Admin_Exps > 8121690000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest cash outflows from financing activities?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fin_CF_Out_Sub DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all information about records with a loss on disposal of non current assets less than 0.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Loss_Disposal_Nonc_Assets < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each company name with intangible assets value above 9958000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Intang_Assets > 9958000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities codes of top three stocks with the highest investment losses.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Investment_Loss DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide the sum of subsidiary absorbing minority shareholder investments for each asset impairment provision value?",
    "query": "SELECT Cash_Flow_Statement.Asset_Impairment_Dec , SUM (Cash_Flow_Statement.Subsidiary_Absorb_Minority) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Asset_Impairment_Dec"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have total profit values that are not equal to 26567000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Profit != 26567000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of the top three companies with the highest net increase in cash and cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_CF_Cash_Equiv DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of top three stocks that received the most investment.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Recv_Invest DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the general and administrative expenses in records with other business costs ranging from 857000000.0 to 857000000.0.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Income_Statement WHERE Income_Statement.Oth_Biz_Costs BETWEEN 857000000.0 AND 857000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three companies with the highest amortization of intangible assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Intangible_Asset_Amortization DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the net interest income values that have at least 4 records with total comprehensive income attributable to minority shareholders greater than 808000000.0.",
    "query": "SELECT Income_Statement.Net_Int_Inc FROM Income_Statement WHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc > 808000000.0 GROUP BY Income_Statement.Net_Int_Inc HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or have net increase in customer loans and advances of 265774000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Cash_Flow_Statement.Cust_Loans_Net_Inc = 265774000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of records that have interest income exceeding 75794000000.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Int_Inc > 75794000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock codes in descending alphabetical order for all records where the treasury stock value is less than or equal to 47472168450.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Treas_Stock <= 47472168450 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average of subtotals of cash inflows from financing activities, the minimum value of net cash received from disposal of fixed assets, intangible assets, and other long-term assets, and the minimum value of cash received from investment recovery in all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Fin_CF_In_Sub) , MIN (Cash_Flow_Statement.Cash_Disposal_Assets), MIN (Cash_Flow_Statement.Recv_Investment) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of received other cash related to investment activities for those companies whose non-operating income exceeds 10, grouped by received other cash related to investment activities?",
    "query": "SELECT Cash_Flow_Statement.Recv_Other_Invest FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Recv_Other_Invest HAVING sum(Income_Statement.Non_Op_Rev) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock code, whose net profit from cash flow statement is above 17625964000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Net_Income > 17625964000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum value of other comprehensive income for each record.",
    "query": "SELECT avg(Income_Statement.Oth_Compre_Inc), max(Income_Statement.Oth_Compre_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and the count of different other cash received in financing activities for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Cash_Flow_Statement.Recv_Other_Fin) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code and other information of each record, sorted by the value of cash received from issuing bonds in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Other FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Issue_Bonds DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the number of records and stock names where the minority shareholders' equity is greater than 2978000000.0 for each stock.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Minor_Int_Eq > 2978000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the lending funds and other assets of the records with derivative financial liabilities above 41844000000.0 or below 2449116000.0.",
    "query": "SELECT Balance_Sheet.Lending_Funds , Balance_Sheet.Oth_Assets FROM Balance_Sheet WHERE Balance_Sheet.Deriv_Liab > 41844000000.0 OR Balance_Sheet.Deriv_Liab < 2449116000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average value of cash paid for other investment activities for each distinct value of the \"other\" column.",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_Pay_Inv_Other) , Cash_Flow_Statement.Other FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Other"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with either the stock code 600016.SH or the trading financial liabilities of 8618476149.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Balance_Sheet.Trad_Fin_Liab = 8618476149.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all the names of securities in the records table.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to the stock 600015.SH or have a net increase in customer loans and advances equal to 265774000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Cash_Flow_Statement.Cust_Loans_Net_Inc = 265774000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the name of the stock, the number of distinct financial assets sold for repurchase, and the total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Balance_Sheet.Sell_Rep_FAs) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with net profit more than 12365000000.0 do we have for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Net_Profit > 12365000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, tell me how many different values of net profit attributable to the owner of the parent company do we have in our data.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Attr_Parent_Net_Profit) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the attribute of comprehensive income attributable to shareholders of the parent company, for those records without handling fees and commission expenses.",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement WHERE Income_Statement.Fee_Com_Exp IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have interest expenses equal to 81746000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Int_Exp = 81746000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, count the number of distinct translation difference of foreign currency statements values.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Balance_Sheet.Exch_Diff_Cash) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of stocks and the count of different investment income from associates and joint ventures for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Income_Statement.Inv_Inc_Assoc_JV) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the business and management fees of records that appear at least 12 times.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Income_Statement GROUP BY Income_Statement.Gen_n_Admin_Exps HAVING COUNT (*) >= 12"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records for each stock have intangible assets value surpassing 7467000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Intang_Assets > 7467000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock names and the number of records for each stock, sorted by the number of records in ascending order.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has a total assets value that is not equal to 7641451000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Assets != 7641451000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the diluted earnings per share value of records that only appear once.",
    "query": "SELECT Income_Statement.Diluted_EPS FROM Income_Statement GROUP BY Income_Statement.Diluted_EPS HAVING COUNT (*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have the substring 'China Merchants Bank' in their name of securities?",
    "query": "SELECT DISTINCT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%China Merchants Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the total comprehensive income value that has the least number of records?",
    "query": "SELECT Income_Statement.Tot_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Tot_Compre_Inc ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the value of bonds payable and the number of records associated with each value.",
    "query": "SELECT Balance_Sheet.Bonds_PAY , count(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Bonds_PAY"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the hold-to-maturity investment values that have at least four records with fixed assets exceeding 43055000000.0.",
    "query": "SELECT Balance_Sheet.Held_Mat_Invest FROM Balance_Sheet WHERE Balance_Sheet.Fix_Assets > 43055000000.0 GROUP BY Balance_Sheet.Held_Mat_Invest HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information available in the records.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or a net income from handling fees and commissions equal to 10836000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Income_Statement.Fee_Com_Net_Inc = 10836000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of company names and cash paid to and on behalf of employees in descending order of amortization of intangible assets.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Cash_Pay_Emp FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Intangible_Asset_Amortization DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code of two records with the highest net increase in deposits with central bank and interbank funds.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.CenBank_Interbank_Net_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the cash received from other cash related to operating activities, sorted by fixed assets acquired through financing lease in descending order.",
    "query": "SELECT Cash_Flow_Statement.Cash_Oth_Oper_Activities FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or intangible assets value of 7467000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Balance_Sheet.Intang_Assets = 7467000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the list of stock names in the records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the capital reserves and the number of records associated with each capital reserve value.",
    "query": "SELECT Balance_Sheet.Cap_Reserves , count(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Cap_Reserves"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the non-operating income value that has the least frequency of appearance.",
    "query": "SELECT Income_Statement.Non_Op_Rev FROM Income_Statement GROUP BY Income_Statement.Non_Op_Rev ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the count of records for each stock code where the total comprehensive income attributable to shareholders of the parent company is above 26302000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc > 26302000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash payments for taxes values that have appeared in at least 4 records with net cash flow generated from financing activities more than 36768000000.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Taxes FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_CF_Fin > 36768000000.0 GROUP BY Cash_Flow_Statement.Cash_Pay_Taxes HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each company, show me all the records with financial assets sold for repurchase more than 131663000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Sell_Rep_FAs > 131663000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock codes don't have a total liability of 7014760000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab != 7014760000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, how many different values of comprehensive income attributable to shareholders of the parent company do we have?",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Income_Statement.Attr_Parent_Shareholders_Compre_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the total comprehensive income values in descending order, sorted by fixed assets acquired through financing lease.",
    "query": "SELECT Income_Statement.Tot_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the securities codes that have at least one occurrence.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) >= 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the values of total owner's equity attributable to the parent company, deposits from interbank and other financial institutions, and other assets for all records.",
    "query": "SELECT Balance_Sheet.Own_Eq_Attr_Parent , Balance_Sheet.IB_Dep_Oth_FIs , Balance_Sheet.Oth_Assets FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code and interest income of the records that have at least 5 investment income from associates and joint ventures.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Int_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Income_Statement.Inv_Inc_Assoc_JV HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities codes for all records where the value of lending funds is not equal to 316000000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Lending_Funds != 316000000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average net profit in cash flow statement, the minimum operating profit in income statement and the minimum subtotal of cash inflows from operating activities in cash flow statement across all records?",
    "query": "SELECT AVG (Cash_Flow_Statement.CF_Stmt_Net_Income) , MIN (Income_Statement.Oper_Profit), MIN (Cash_Flow_Statement.Op_CF_Sub) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the subsidiary absorbing minority shareholder investments and handling fees and commission expenses, where the former value is more than 38947858895.",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Absorb_Minority , Income_Statement.Fee_Com_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Subsidiary_Absorb_Minority > 38947858895"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which five companies have the most number of records?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of the two companies with the highest surplus reserves.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Sur_Reserves DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have deferred tax liabilities exceeding 641000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Def_IT_Liab > 641000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have with either a stock code of 600000.SH or cash payments related to financing activities equal to 1646000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Cash_Flow_Statement.Cash_Pay_Fin_Other = 1646000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net profit attributable to the owner of the parent company and the total non-operating revenue for each record.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit , SUM (Income_Statement.Non_Op_Rev) FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Net_Profit"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock codes along with the count of unique values of handling fees and commission expenses for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Fee_Com_Exp) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average investment income for each net increase in customer deposits and interbank deposits value.",
    "query": "SELECT avg(Income_Statement.Inv_Inc) , Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with deferred income tax liabilities increase higher than 47334431484 do we have for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.DIT_Liability_Increase > 47334431484 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the names of stocks whose basic earnings per share is not equal to 0.58.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Basic_EPS != 0.58"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the net cash flow generated from operating activities in the cash flow statement table.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Op FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which five stocks have the highest number of records available?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock codes and the frequency of each stock code in our data.",
    "query": "SELECT Basic_Info.Stk_Code , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the deposit absorption values that have 9 or more records.",
    "query": "SELECT Balance_Sheet.Acc_Deposits FROM Balance_Sheet GROUP BY Balance_Sheet.Acc_Deposits HAVING COUNT (*) >= 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide a list of all records for each stock that have a subtotal of cash inflows from operating activities greater than 401985000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Op_CF_Sub > 401985000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the lending funds and treasury stocks for records where the lending funds are greater than 188526000000.0.",
    "query": "SELECT Balance_Sheet.Lending_Funds , Balance_Sheet.Treas_Stock FROM Balance_Sheet WHERE Balance_Sheet.Lending_Funds > 188526000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the taxes and surcharges and net income from handling fees and commissions for records with net profit attributable to the owner of the parent company above 12114000000.0 or below 23138000000.0.",
    "query": "SELECT Income_Statement.Tax_n_Surs , Income_Statement.Fee_Com_Net_Inc FROM Income_Statement WHERE Income_Statement.Attr_Parent_Net_Profit > 12114000000.0 OR Income_Statement.Attr_Parent_Net_Profit < 23138000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of paid-in capital that appeared more than once in our database?",
    "query": "SELECT Balance_Sheet.Paid_Up_Cap FROM Balance_Sheet GROUP BY Balance_Sheet.Paid_Up_Cap HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information available in the basic info table of the database.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all stock codes whose loss from changes in fair value is less than or equal to -4319000000.0 in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fair_Value_Change_Loss <= -4319000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the investment income of records whose sum of other cash payments related to operating activities is more than 10.",
    "query": "SELECT Income_Statement.Inv_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Inv_Inc HAVING sum(Cash_Flow_Statement.Other) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the borrowing funds from other financial institutions and interest payable for records with undistributed profits greater than or less than 522383000000.0.",
    "query": "SELECT Balance_Sheet.Bor_Funds_Oth_FIs , Balance_Sheet.Int_Pay FROM Balance_Sheet WHERE Balance_Sheet.Undist_Profits > 522383000000.0 OR Balance_Sheet.Undist_Profits < 522383000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code of records with noble metals value equal to or less than 834000000.0 in descending order of their codes.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Prec_Metals <= 834000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the stock codes whose non operating expenses are not 37000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Non_Op_Exp != 37000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the available-for-sale financial assets that appear in 5 or more records.",
    "query": "SELECT Balance_Sheet.Avail_Sale_FAs FROM Balance_Sheet GROUP BY Balance_Sheet.Avail_Sale_FAs HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two companies with the highest lending funds?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Lending_Funds DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the operating expenses of all records, sorted in descending order based on net increase in customer loans and advances.",
    "query": "SELECT Income_Statement.Oper_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cust_Loans_Net_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the securities codes of all records with lending funds less than or equal to 49776000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Lending_Funds <= 49776000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Mingsheng Bank or have a cash paid for distributing dividends, profits, or paying interest value of 2122903000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Cash_Flow_Statement.Distribute_Dividends_Profits = 2122903000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, display the count of records that have noble metal value exceeding 47640791737.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Prec_Metals > 47640791737.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code of all companies whose estimated liabilities are less than or equal to 2408443000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Est_Liab <= 2408443000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with either the name of \"Bank of Jiangsu\" or net increase in customer deposits and interbank deposits equal to 185841000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits = 185841000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fixed assets that have at least four records where trading financial liabilities exceed 14920000000.0.",
    "query": "SELECT Balance_Sheet.Fix_Assets FROM Balance_Sheet WHERE Balance_Sheet.Trad_Fin_Liab > 14920000000.0 GROUP BY Balance_Sheet.Fix_Assets HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the available-for-sale financial assets and taxes and fees payable for the top 5 records with the highest tax payable.",
    "query": "SELECT Balance_Sheet.Tax_Pay , Balance_Sheet.Avail_Sale_FAs FROM Balance_Sheet ORDER BY Balance_Sheet.Tax_Pay DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two securities codes with the highest total owner's equity.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tot_Own_Eq DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the net increase in cash and cash equivalents values, where the corresponding operating income is higher than 178460000000.0 and have at least four records.",
    "query": "SELECT Cash_Flow_Statement.IM_NCF_Cash_Eq FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oper_Rev > 178460000000.0 GROUP BY Cash_Flow_Statement.IM_NCF_Cash_Eq HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the count of each stock's name along with their name.",
    "query": "SELECT Basic_Info.Stk_Name , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or have minority shareholders' equity of 7437337000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Balance_Sheet.Minor_Int_Eq = 7437337000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the trading financial liabilities and cash and deposits with central bank values for records with trading financial liabilities less than 8618476149.0.",
    "query": "SELECT Balance_Sheet.Trad_Fin_Liab , Balance_Sheet.Cash_CB FROM Balance_Sheet WHERE Balance_Sheet.Trad_Fin_Liab < 8618476149.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out how many different available-for-sale financial assets we have for each stock name.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Balance_Sheet.Avail_Sale_FAs) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600036.SH or an expense at handling fees and commission equal to 434915000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Income_Statement.Fee_Com_Exp = 434915000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the cash received from other financing activities values that have at least 4 records where total comprehensive income attributable to shareholders of the parent company is larger than 26302000000.0?",
    "query": "SELECT Cash_Flow_Statement.Recv_Other_Fin FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc > 26302000000.0 GROUP BY Cash_Flow_Statement.Recv_Other_Fin HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the operating profit of all records that do not have a value for cash paid for interest, handling fees, and commissions?",
    "query": "SELECT Income_Statement.Oper_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Int_Fees_Com IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the total deposit absorption for each treasury stock.",
    "query": "SELECT Balance_Sheet.Treas_Stock , SUM (Balance_Sheet.Acc_Deposits) FROM Balance_Sheet GROUP BY Balance_Sheet.Treas_Stock"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of top three companies with the highest net increase in customer deposits and interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average investment income for each income tax expense value.",
    "query": "SELECT avg(Cash_Flow_Statement.Investment_Income) , Income_Statement.Income_Tax_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Income_Tax_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent net profit values in the cash flow statement, sorted by their frequency in ascending order?",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Net_Income FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.CF_Stmt_Net_Income ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, show all records whose cash inflows from investment activities are greater than 217980000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inv_CF_In_Sub > 217980000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have the net cash flow generated from investment activities more than -62141000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Inv > -62141000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the Stk_Code, the count of total profit values, and the total number of records for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Income_Statement.Tot_Profit) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks that have different debt repayment than 530375000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Repay_Debt != 530375000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each initial cash equivalent value, find out its corresponding total operating profit.",
    "query": "SELECT Cash_Flow_Statement.Initial_Cash_Equiv , SUM (Income_Statement.Oper_Profit) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Initial_Cash_Equiv"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of two companies with the highest net cash flow generated from investment activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_CF_Inv DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of records whose other liabilities value is not 50840000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Oth_Liab != 50840000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities have a count of exactly 9?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) = 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a lending funds value of either 393759000000.0 or 49776000000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Lending_Funds = 393759000000.0 OR Balance_Sheet.Lending_Funds = 49776000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the highest net increase in customer loans and advances.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cust_Loans_Net_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me a list of stocks and their respective number of records where the closing balance of cash equivalents exceeds 585047000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Final_Cash_Equiv > 585047000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out how many records have net profit in cash flow statement greater than 76437000000.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Net_Income > 76437000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the securities codes whose other assets is smaller than or equal to 58781000000.0, in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Oth_Assets <= 58781000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the securities codes of the top two stocks with the highest surplus reserves.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Sur_Reserves DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the hold-to-maturity investment values along with the number of records they appear in, sorted in ascending order of the record count.",
    "query": "SELECT Balance_Sheet.Held_Mat_Invest , COUNT (*) FROM Balance_Sheet GROUP BY Balance_Sheet.Held_Mat_Invest ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks whose financial assets sold for repurchase value is no more than 83045000000.0 in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Sell_Rep_FAs <= 83045000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the long term equity investment and translation difference of foreign currency statements for records with less than 46083375627.0 long term equity investment.",
    "query": "SELECT Balance_Sheet.LT_Eq_Invest , Balance_Sheet.Exch_Diff_Cash FROM Balance_Sheet WHERE Balance_Sheet.LT_Eq_Invest < 46083375627.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which company has the highest number of records in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or has a net profit of 23615000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Income_Statement.Net_Profit = 23615000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of FX Rate Change Cash and Subsidiary Absorb Minority in records where FX Rate Change Cash is greater than 1646000000.0?",
    "query": "SELECT Cash_Flow_Statement.FX_Rate_Change_Cash , Cash_Flow_Statement.Subsidiary_Absorb_Minority FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.FX_Rate_Change_Cash > 1646000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values of net increase in borrowing funds from other financial institutions do we have in our records?",
    "query": "SELECT count(DISTINCT Cash_Flow_Statement.Net_Inc_IB_Borrowings) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the largest subtotal of cash inflows from investment activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inv_CF_In_Sub DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the income tax expenses and cash received for interest, handling fees, and commissions of the top five records with the highest income tax expenses.",
    "query": "SELECT Income_Statement.Income_Tax_Exp , Cash_Flow_Statement.Cash_Int_Commission_Collected FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Income_Tax_Exp DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the stock codes of the top three records with the highest subtotal of cash inflows from financing activities?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fin_CF_In_Sub DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of stocks that have received other cash related to financing activities different from 5773000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Recv_Other_Fin != 5773000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the other business income and handling fees and commission expenses of the top five records with the highest other business income.",
    "query": "SELECT Income_Statement.Oth_Biz_Inc , Income_Statement.Fee_Com_Exp FROM Income_Statement ORDER BY Income_Statement.Oth_Biz_Inc DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest subtotal of cash outflows from operating activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Op_CF_Out_Sub DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average impact of exchange rate changes on cash and cash equivalents, the minimum non-operating income, and the minimum cash outflows from investment activities for all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.FX_Rate_Change_Cash) , MIN (Income_Statement.Non_Op_Rev), MIN (Cash_Flow_Statement.Inv_CF_Out_Sub) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average purchase of resale financial assets for each total owner's equity attributable to the parent company.",
    "query": "SELECT avg(Balance_Sheet.Buyback_FAs) , Balance_Sheet.Own_Eq_Attr_Parent FROM Balance_Sheet GROUP BY Balance_Sheet.Own_Eq_Attr_Parent"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock name has the highest frequency in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum payable employee compensation in our database.",
    "query": "SELECT avg(Balance_Sheet.Emp_Comp_PAY), max(Balance_Sheet.Emp_Comp_PAY) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the total profit values that have at least four records with fair value change loss greater than -7930000000.0.",
    "query": "SELECT Income_Statement.Tot_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fair_Value_Change_Loss > -7930000000.0 GROUP BY Income_Statement.Tot_Profit HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the stock codes whose other assets are less than or equal to 58781000000.0, and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Oth_Assets <= 58781000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all the stock names from the records table.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock names and non-operating revenue of all records, sorted by their income tax expenses in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Non_Op_Rev FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Income_Tax_Exp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes of records whose value of other in cash flow statement is not 41995235271.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Other != 41995235271"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the other comprehensive income values and their respective frequencies in the database.",
    "query": "SELECT Income_Statement.Oth_Compre_Inc , count(*) FROM Income_Statement GROUP BY Income_Statement.Oth_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the stock code and non-operating revenue of each record, sorted in descending order of investment income.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Non_Op_Rev FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Inv_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities with the highest business and management fees?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Gen_n_Admin_Exps DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock code of records whose total assets are not equal to 7641451000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Assets != 7641451000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the name of stocks whose total liabilities are not equal to 9753923000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab != 9753923000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose diluted earnings per share is not 2.93.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Diluted_EPS != 2.93"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the highest and lowest values of exchange gains in our records?",
    "query": "SELECT MAX (Income_Statement.Exch_Gain_Inc) , MIN (Income_Statement.Exch_Gain_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the operating revenue for records that have more than 4 occurrences?",
    "query": "SELECT Income_Statement.Oper_Rev FROM Income_Statement GROUP BY Income_Statement.Oper_Rev HAVING COUNT (*) > 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which tax and fees payable value only appeared once?",
    "query": "SELECT Balance_Sheet.Tax_Pay FROM Balance_Sheet GROUP BY Balance_Sheet.Tax_Pay HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks that have diluted earnings per share different from 32452670465.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Diluted_EPS != 32452670465.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose other business income differs from 2447000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Inc != 2447000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the cash equivalents opening balance and cash paid to employees of the top five records with the highest opening balance of cash equivalents.",
    "query": "SELECT Cash_Flow_Statement.Cash_Eq_Begin_Period , Cash_Flow_Statement.Cash_Pay_Emp FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cash_Eq_Begin_Period DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net profit attributable to the owner of the parent company and net cash flow generated from cash and cash equivalents for the top five records with the highest net profit attributable to the owner of the parent company.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit , Cash_Flow_Statement.Net_CF_Cash_Equiv FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Net_Profit DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of stock names and financial assets sold for repurchase in descending order of interest payable.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Sell_Rep_FAs FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Int_Pay DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of different non-operating income values for each stock name.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Income_Statement.Non_Op_Rev) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details about the record with the highest income from changes in fair value.",
    "query": "SELECT * FROM Income_Statement ORDER BY Income_Statement.FV_Change_Inc DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have a different net increase in customer loans and advances from 326411000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cust_Loans_Net_Inc != 326411000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the investment income and other business income of the top 5 records with the highest investment income.",
    "query": "SELECT Income_Statement.Inv_Inc , Income_Statement.Oth_Biz_Inc FROM Income_Statement ORDER BY Income_Statement.Inv_Inc DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of records that have different total comprehensive income attributable to shareholders of the parent company from 25343000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc != 25343000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the operating cash outflow subtotal and taxes paid for the top 5 records with the highest taxes paid.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Taxes , Cash_Flow_Statement.Op_CF_Out_Sub FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cash_Pay_Taxes DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have loans and advances exceeding 4322267000000.0 and derivative financial assets surpassing 40635000000.0?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Loans_Adv > 4322267000000.0 AND Balance_Sheet.Deriv_Assets > 40635000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which companies have five or more records in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the highest and lowest long term equity investment values in our data.",
    "query": "SELECT MAX (Balance_Sheet.LT_Eq_Invest) , MIN (Balance_Sheet.LT_Eq_Invest) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock names and the reduction in operating receivables for all records, sorted by the descending order of net cash received from disposal of fixed assets, intangible assets, and other long-term assets.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Oper_Receivables_Decrease FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Disposal_Assets DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two securities codes with the highest expenses at handling fees and commission.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which values of other comprehensive income appear at least 9 times?",
    "query": "SELECT Income_Statement.Oth_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Oth_Compre_Inc HAVING COUNT (*) >= 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock name and the count of unique translation difference of foreign currency statements values for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Balance_Sheet.Exch_Diff_Cash) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top 5 total comprehensive income values, sorted by their frequency?",
    "query": "SELECT Income_Statement.Tot_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Tot_Compre_Inc ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has a net increase in cash and cash equivalents not equal to -15933000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Cash_Equiv != -15933000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the distinct values in the \"Other\" column of cash flow statement.",
    "query": "SELECT distinct(Cash_Flow_Statement.Other) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the stock code and non-operating revenue of each record, sorted in descending order by diluted earnings per share.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Non_Op_Rev FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Diluted_EPS DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock names and deferred tax assets of all records.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Def_IT_Assets FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have each value of cash payments related to investment activities, sorted by the number of records for each value?",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Inv_Other , COUNT (*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Inv_Other ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum value of deferred tax liabilities for all records.",
    "query": "SELECT avg(Balance_Sheet.Def_IT_Liab), max(Balance_Sheet.Def_IT_Liab) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have other liabilities equal to either 19902328000.0 or 165644000000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Oth_Liab = 19902328000.0 OR Balance_Sheet.Oth_Liab = 165644000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks whose total owner's equity is 307617000000.0 or less, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Own_Eq <= 307617000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either the stock code 600015.SH or expenses at handling fees and commission of 2377000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Income_Statement.Fee_Com_Exp = 2377000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the total liabilities values that have at least four records with total assets above 8932519000000.0.",
    "query": "SELECT Balance_Sheet.Tot_Liab FROM Balance_Sheet WHERE Balance_Sheet.Tot_Assets > 8932519000000.0 GROUP BY Balance_Sheet.Tot_Liab HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code and net increase in borrowings from the central bank for each record.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Net_Inc_Borrowings_CB FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the names of all stocks where the net profit in the cash flow statement is 23615000000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Net_Income <= 23615000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all cash and deposits with central bank values that occurred less than twice in the data.",
    "query": "SELECT Balance_Sheet.Cash_CB FROM Balance_Sheet GROUP BY Balance_Sheet.Cash_CB HAVING COUNT (*) < 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the investment income value that appears exactly 12 times.",
    "query": "SELECT Income_Statement.Inv_Inc FROM Income_Statement GROUP BY Income_Statement.Inv_Inc HAVING COUNT (*) = 12"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest other business income?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Oth_Biz_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the five most frequent net cash flow generated from operating activities values.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Op FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Op ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the details of records where non-operating expenses are negative.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Non_Op_Exp < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have taxes and surcharges value of exactly 534000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Tax_n_Surs = 534000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average taxes and surcharges for each investment income value.",
    "query": "SELECT avg(Income_Statement.Tax_n_Surs) , Income_Statement.Inv_Inc FROM Income_Statement GROUP BY Income_Statement.Inv_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the financial assets sold for repurchase values that appeared exactly once.",
    "query": "SELECT Balance_Sheet.Sell_Rep_FAs FROM Balance_Sheet GROUP BY Balance_Sheet.Sell_Rep_FAs HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the count of records and their corresponding stock names, where the bonds payable is greater than 265819000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Bonds_PAY > 265819000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the values of cash paid for distributing dividends, profits or paying interest and fixed assets acquired through financing lease for the records whose cash paid for distributing dividends, profits or paying interest is less than 15470000000.0.",
    "query": "SELECT Cash_Flow_Statement.Distribute_Dividends_Profits , Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Distribute_Dividends_Profits < 15470000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock name and the subtotal of cash inflows from investment activities for each record.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Inv_CF_In_Sub FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the different operating revenues and the number of records for each operating revenue value.",
    "query": "SELECT Income_Statement.Oper_Rev , COUNT(*) FROM Income_Statement GROUP BY Income_Statement.Oper_Rev"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the subsidiary absorbing minority shareholder investments and income from changes in fair value of the top 5 records with the largest value of subsidiary absorbing minority shareholder investments.",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Absorb_Minority , Income_Statement.FV_Change_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Subsidiary_Absorb_Minority DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the tax payable and total owner's equity attributable to the parent company for the top 5 records with the highest tax payable value.",
    "query": "SELECT Balance_Sheet.Tax_Pay , Balance_Sheet.Own_Eq_Attr_Parent FROM Balance_Sheet ORDER BY Balance_Sheet.Tax_Pay DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600000.SH or an income from changes in fair value equal to 1814000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Income_Statement.FV_Change_Inc = 1814000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the subtotal of cash inflows from operating activities that appears more than once.",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Sub FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Op_CF_Sub HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the different values of net cash flow generated from investment activities along with the number of records for each value.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Inv , COUNT(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Inv"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the fees and commission expenses for those who have income from changes in fair value greater than 10, grouped by fees and commission expenses?",
    "query": "SELECT Income_Statement.Fee_Com_Exp FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Exp HAVING sum(Income_Statement.FV_Change_Inc) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or an operating profit of 90879000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Income_Statement.Oper_Profit = 90879000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock names have total comprehensive income attributable to shareholders of the parent company less than or equal to 18362456000.0, sorted in descending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc <= 18362456000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average fee and commission income, the minimum other comprehensive income, and the minimum net profit attributable to the owner of the parent company across all records.",
    "query": "SELECT AVG (Income_Statement.Fee_Com_Inc) , MIN (Income_Statement.Oth_Compre_Inc), MIN (Income_Statement.Attr_Parent_Net_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average loss on disposal of non-current assets for each value of loss on disposal of fixed assets, intangible assets, and other long-term assets.",
    "query": "SELECT avg(Income_Statement.Loss_Disposal_Nonc_Assets) , Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the net profit attributable to the owner of the parent company and handling fees and commission expenses for records with operating expenses above 16372581000.0 or below 31273000000.0.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit , Income_Statement.Fee_Com_Exp FROM Income_Statement WHERE Income_Statement.Oper_Exp > 16372581000.0 OR Income_Statement.Oper_Exp < 31273000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the borrowing from the Central Bank and undistributed profits for records whose bonds payable is either greater than 628199000000.0 or less than 1272371000000.0.",
    "query": "SELECT Balance_Sheet.Bor_CB , Balance_Sheet.Undist_Profits FROM Balance_Sheet WHERE Balance_Sheet.Bonds_PAY > 628199000000.0 OR Balance_Sheet.Bonds_PAY < 1272371000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks where investment income is not equal to 13757000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Inv_Inc != 13757000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of securities whose increase in operating payables is not equal to 321269969000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Oper_Payables_Increase != 321269969000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which Cash_Begin_Period and Debt_Converted_Capital values are present in records where Cash_Begin_Period is greater than 128305000000.0?",
    "query": "SELECT Cash_Flow_Statement.Cash_Begin_Period , Cash_Flow_Statement.Debt_Converted_Capital FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Begin_Period > 128305000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities codes and cash outflows from financing activities, sorted by the net increase in borrowings from the central bank in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Fin_CF_Out_Sub FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_Inc_Borrowings_CB DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the five most frequent values of total liabilities and owner's equity in our records?",
    "query": "SELECT Balance_Sheet.Tot_Liab_Own_Eq FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab_Own_Eq ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes whose total liabilities and owner's equity are less than or equal to 8932519000000.0, in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab_Own_Eq <= 8932519000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each company name, show the number of records whose net profit attributable to the owner of the parent company is more than 23777000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Net_Profit > 23777000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the name of the company that contains the phrase 'Shanghai Pudong Development Bank'.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%Shanghai Pudong Development Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top three stocks with the highest closing balance of cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Final_Cash_Equiv DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, provide the stock code, the number of different values of loss from changes in fair value, and the total number of records for that stock.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Cash_Flow_Statement.Fair_Value_Change_Loss) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the securities codes in the records table.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me all the handling fees and commission expenses that have more than or equal to 4 records with investment income from associates and joint ventures greater than 23860991409.0.",
    "query": "SELECT Income_Statement.Fee_Com_Exp FROM Income_Statement WHERE Income_Statement.Inv_Inc_Assoc_JV > 23860991409.0 GROUP BY Income_Statement.Fee_Com_Exp HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the assets impairment loss in the records dataset that appears at least 12 times.",
    "query": "SELECT Income_Statement.Assets_Imp_Loss FROM Income_Statement GROUP BY Income_Statement.Assets_Imp_Loss HAVING COUNT (*) >= 12"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock name occurs the most frequently in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code and payable employee compensation of each record, sorted by total liabilities and owner's equity in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Emp_Comp_PAY FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tot_Liab_Own_Eq DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock codes of the two records with the highest cash paid for interest, handling fees, and commissions.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Int_Fees_Com DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two securities codes of the highest exchange gains in income statement.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Exch_Gain_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the eight least frequent values of financial assets sold for repurchase, and return them.",
    "query": "SELECT Balance_Sheet.Sell_Rep_FAs FROM Balance_Sheet GROUP BY Balance_Sheet.Sell_Rep_FAs ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities code has the highest occurrence in our data?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have derivative financial liabilities higher than 2449116000.0 for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Deriv_Liab > 2449116000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the available-for-sale financial assets values that occur more than twice.",
    "query": "SELECT Balance_Sheet.Avail_Sale_FAs FROM Balance_Sheet GROUP BY Balance_Sheet.Avail_Sale_FAs HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the net cash flow generated from operating activities value of the record that has the least frequency?",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Cash_Equiv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Cash_Equiv ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values of net increase in borrowing funds from other financial institutions do we have?",
    "query": "SELECT count(DISTINCT Cash_Flow_Statement.Net_Inc_IB_Borrowings) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the two companies with the highest loss on disposal of non current assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Loss_Disposal_Nonc_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of cash received from other operating activities and investment income in all records.",
    "query": "SELECT Cash_Flow_Statement.Cash_Oth_Oper_Activities , Income_Statement.Inv_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the financial assets sold for repurchase values that have at least 5 records.",
    "query": "SELECT Balance_Sheet.Sell_Rep_FAs FROM Balance_Sheet GROUP BY Balance_Sheet.Sell_Rep_FAs HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes of records that have other assets value different from 31365000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Oth_Assets != 31365000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the number of records and the corresponding stock names where the bonds payable value exceeds 265819000000.0 for each stock.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Bonds_PAY > 265819000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the other comprehensive income of all records whose increase in operating payables falls between 470726000000.0 and 252407000000.0.",
    "query": "SELECT Income_Statement.Oth_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Oper_Payables_Increase BETWEEN 470726000000.0 AND 252407000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the largest due from interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.IB_Deposits DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent total profit values, sorted by their frequency in ascending order?",
    "query": "SELECT Income_Statement.Tot_Profit FROM Income_Statement GROUP BY Income_Statement.Tot_Profit ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the income tax expenses and opening balance of cash equivalents for records where income tax expenses exceed 775000000.0.",
    "query": "SELECT Income_Statement.Income_Tax_Exp , Cash_Flow_Statement.Cash_Eq_Begin_Period FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Income_Tax_Exp > 775000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the decrease in inventory for records where the net profit attributable to the owner of the parent company is null.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Net_Profit IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the least frequent stock code in our data, sorted by their frequency in ascending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the Stk_Name and the value of loans and advances in descending order of payable employee compensation.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Loans_Adv FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Emp_Comp_PAY DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have the stock code containing the substring '600036.SH'?",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600036.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net increase in deposits with central bank and interbank funds for records where there is no value in the impact of exchange rate changes on cash and cash equivalents.",
    "query": "SELECT Cash_Flow_Statement.CenBank_Interbank_Net_Inc FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.FX_Rate_Change_Cash IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of issuing bonds in each record, and the total opening balance of cash equivalents for each value of issuing bonds?",
    "query": "SELECT Cash_Flow_Statement.Issue_Bonds , SUM (Cash_Flow_Statement.Initial_Cash_Equiv) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Issue_Bonds"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest basic earnings per share.",
    "query": "SELECT * FROM Income_Statement ORDER BY Income_Statement.Basic_EPS DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the value of minority interest and loss from the income statement, for all records whose asset impairment provision falls between 732000000.0 and 3334010640.0.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Asset_Impairment_Dec BETWEEN 732000000.0 AND 3334010640.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all cash received for interest, handling fees, and commissions values that have at least four records with diluted earnings per share above 0.7.",
    "query": "SELECT Cash_Flow_Statement.Cash_Int_Commission_Collected FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Diluted_EPS > 0.7 GROUP BY Cash_Flow_Statement.Cash_Int_Commission_Collected HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the trading financial assets of records whose translation difference of foreign currency statements lies between 17679402107 and 8090552536.",
    "query": "SELECT Balance_Sheet.Trad_FAs FROM Balance_Sheet WHERE Balance_Sheet.Exch_Diff_Cash BETWEEN 17679402107 AND 8090552536"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average purchase of resale financial assets value across all records?",
    "query": "SELECT MAX (Balance_Sheet.Buyback_FAs) , MIN (Balance_Sheet.Buyback_FAs), AVG (Balance_Sheet.Buyback_FAs) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the stock codes of the two highest deferred tax asset values.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Def_IT_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks and their \"Other\" values in the cash flow statement.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Other FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the three securities with the highest business and management fees.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Gen_n_Admin_Exps DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all long term equity investments that appear less than 12 times in the records.",
    "query": "SELECT Balance_Sheet.LT_Eq_Invest FROM Balance_Sheet GROUP BY Balance_Sheet.LT_Eq_Invest HAVING COUNT (*) < 12"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the two stocks with the highest net increase in cash and cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_CF_Cash_Equiv DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, give me all the records whose minority interest value exceeds 685000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Inc_Loss > 685000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have employee compensation more than 28532000000.0 and general risk preparation above 48747000000.0?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Emp_Comp_PAY > 28532000000.0 AND Balance_Sheet.Gen_Risk_Res > 48747000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each company name, show the count of records that have a total comprehensive income above 26693000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Compre_Inc > 26693000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average value of noble metal, the smallest fixed assets and the smallest derivative financial assets in the entire dataset?",
    "query": "SELECT AVG (Balance_Sheet.Prec_Metals) , MIN (Balance_Sheet.Fix_Assets), MIN (Balance_Sheet.Deriv_Assets) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the smallest total profit for each non operating expenses value.",
    "query": "SELECT MIN (Income_Statement.Tot_Profit) , Income_Statement.Non_Op_Exp FROM Income_Statement GROUP BY Income_Statement.Non_Op_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or have lending funds equal to 49776000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Balance_Sheet.Lending_Funds = 49776000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the borrowing amounts from the Central Bank that have at least 5 records?",
    "query": "SELECT Balance_Sheet.Bor_CB FROM Balance_Sheet GROUP BY Balance_Sheet.Bor_CB HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock, whose borrowing from central bank value is above 195593933000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Bor_CB > 195593933000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest non-operating expenses.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Non_Op_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of stocks with different translation difference of foreign currency statements from 8090552536.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Exch_Diff_Cash != 8090552536"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Huaxia Bank or have a total profit of 16410000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Income_Statement.Tot_Profit = 16410000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the securities codes of top two records with the highest cash received from absorbing investments.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Absorb_Investment DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which company has the most records in our database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the total comprehensive income attributable to shareholders of the parent company for each total comprehensive income attributable to minority shareholders value.",
    "query": "SELECT Income_Statement.Minor_Int_Shareholders_Compre_Inc , SUM (Income_Statement.Attr_Parent_Shareholders_Compre_Inc) FROM Income_Statement GROUP BY Income_Statement.Minor_Int_Shareholders_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the minimum total liabilities for each estimated liabilities value?",
    "query": "SELECT MIN (Balance_Sheet.Tot_Liab) , Balance_Sheet.Est_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Est_Liab"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the distinct value of net increase in deposits with central bank and interbank funds in our data.",
    "query": "SELECT distinct(Cash_Flow_Statement.CenBank_Interbank_Net_Inc) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top two stocks with the highest cash outflows from investment activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inv_CF_Out_Sub DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks whose cash collected for interest, handling fees, and commissions is not equal to 118670000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Int_Commission_Collected != 118670000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest total comprehensive income attributable to minority shareholders?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the number of distinct values of income from changes in fair value, along with the total number of records, for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Income_Statement.FV_Change_Inc) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Bank of Jiangsu or have interbank and other financial institutions deposits of 277850238000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Balance_Sheet.IB_Dep_Oth_FIs = 277850238000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the intangible asset amortization for all records, and find the total comprehensive income for each intangible asset amortization value.",
    "query": "SELECT Cash_Flow_Statement.Intangible_Asset_Amortization , SUM (Income_Statement.Tot_Compre_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Intangible_Asset_Amortization"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the top three securities code, in terms of available-for-sale financial assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Avail_Sale_FAs DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are related to China Merchants Bank or have other liabilities equal to 19902328000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Balance_Sheet.Oth_Liab = 19902328000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have investment income greater than 6656253775 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Recv_Invest > 6656253775 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the basic earnings per share of records that appear more than once.",
    "query": "SELECT Income_Statement.Basic_EPS FROM Income_Statement GROUP BY Income_Statement.Basic_EPS HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each record, give me the securities code, deposits from interbank and other financial institutions, and estimated liabilities.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.IB_Dep_Oth_FIs , Balance_Sheet.Est_Liab FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the total comprehensive income values that appear in more than 5 records.",
    "query": "SELECT Income_Statement.Tot_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Tot_Compre_Inc HAVING COUNT (*) > 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the financing cash outflow subtotal for each record that has a total of other business costs greater than 10.",
    "query": "SELECT Cash_Flow_Statement.Fin_CF_Out_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Fin_CF_Out_Sub HAVING sum(Income_Statement.Oth_Biz_Costs) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all values of capital reserves from the balance sheet table.",
    "query": "SELECT Balance_Sheet.Cap_Reserves FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the two stock codes with the highest non-operating expenses.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Non_Op_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the trading financial assets for each record that has a sum of minority shareholders' equity greater than 10?",
    "query": "SELECT Balance_Sheet.Trad_FAs FROM Balance_Sheet GROUP BY Balance_Sheet.Trad_FAs HAVING sum(Balance_Sheet.Minor_Int_Eq) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the indirect method net increase in cash and cash equivalents for records with a sum of received other investments greater than 10.",
    "query": "SELECT Cash_Flow_Statement.IM_NCF_Cash_Eq FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.IM_NCF_Cash_Eq HAVING sum(Cash_Flow_Statement.Recv_Other_Invest) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the top five securities codes with the highest frequency in our data.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest investment income?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Inv_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three securities have the highest non-operating income?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Non_Op_Rev DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average cash paid for other financing activities, the minimum amount received from other financing activities, and the minimum debt converted to capital across all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Cash_Pay_Fin_Other) , MIN (Cash_Flow_Statement.Recv_Other_Fin), MIN (Cash_Flow_Statement.Debt_Converted_Capital) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of the top three companies with the highest cash paid for interest, handling fees, and commissions.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Int_Fees_Com DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stocks that have income tax expenses exceeding 2952000000.0, along with the number of records for each stock.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Income_Tax_Exp > 2952000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, list all records that have investment income from associates and joint ventures above 23860991409.0, along with the count of such records.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Inv_Inc_Assoc_JV > 23860991409.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each total profit value? please sort the result in ascending order.",
    "query": "SELECT Income_Statement.Tot_Profit , COUNT (*) FROM Income_Statement GROUP BY Income_Statement.Tot_Profit ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please provide me with all the details of the record that has the highest value for deferred tax liability.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Def_IT_Liab DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the net increase in cash and cash equivalents value that has the highest frequency in our data?",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Cash_Equiv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Cash_Equiv ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash outflows from investment activities and losses on disposal of fixed assets, intangible assets, and other long-term assets for records with cash outflows from investment activities less than 1071490000000.0.",
    "query": "SELECT Cash_Flow_Statement.Inv_CF_Out_Sub , Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Inv_CF_Out_Sub < 1071490000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the two securities with the highest value of loss on disposal of non current assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Loss_Disposal_Nonc_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the stocks whose net profit is not equal to 76437000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Net_Profit != 76437000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code of records whose financial assets sold for repurchase value is not equal to 131663000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Sell_Rep_FAs != 131663000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return each stock code along with the number of records, sorted in ascending order of the frequency of the stock code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have cash flow statement net income greater than 76437000000.0 for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Net_Income > 76437000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either cash paid for investment of 1004883902000.0 or 833348000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Invest = 1004883902000.0 OR Cash_Flow_Statement.Cash_Pay_Invest = 833348000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the asset impairment provision values for records with dividend and profit distribution between 15470000000.0 and 4821000000.0.",
    "query": "SELECT Cash_Flow_Statement.Asset_Impairment_Dec FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Distribute_Dividends_Profits BETWEEN 15470000000.0 AND 4821000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the financial expenses of all records that do not have a value for operating expenses.",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Fin_Expenses FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oper_Exp IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the securities code of the two largest due from interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.IB_Deposits DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the two companies with the highest value of other assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Oth_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the general and administrative expenses and loss on disposal of non current assets values of the top 5 records with the highest loss on disposal of non current assets.",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets , Income_Statement.Gen_n_Admin_Exps FROM Income_Statement ORDER BY Income_Statement.Loss_Disposal_Nonc_Assets DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have a different value of net increase in customer loans and advances from 265774000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cust_Loans_Net_Inc != 265774000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the net increase in customer deposits and interbank deposits for records that do not have a value for cash outflows from financing activities?",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Fin_CF_Out_Sub IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average non-operating revenue, the minimum asset impairment loss, and the minimum business and management fees of all records?",
    "query": "SELECT AVG (Income_Statement.Non_Op_Rev) , MIN (Income_Statement.Assets_Imp_Loss), MIN (Income_Statement.Gen_n_Admin_Exps) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top two securities with the highest available-for-sale financial assets?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Avail_Sale_FAs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the list of available-for-sale financial assets in the balance sheet records.",
    "query": "SELECT Balance_Sheet.Avail_Sale_FAs FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks whose received investment does not equal to 797720000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Recv_Investment != 797720000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top three securities with the highest values of cash received from other investment activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Recv_Other_Invest DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the securities codes that have at least 5 records in the database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an asset impairment provision of exactly 3918000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Asset_Impairment_Dec = 3918000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net cash flow generated from financing activities that appeared more than twice.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Fin FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Fin HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the securities code of the top three records with the highest interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.IB_Deposits DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose depreciation of fixed assets, depletion of oil and gas assets, and depreciation of productive biological assets is not equal to 4137000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec != 4137000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600919.SH or an investment loss of -11281000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Cash_Flow_Statement.Investment_Loss = -11281000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of stocks whose net increase in borrowings from the central bank is 35172000000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_Borrowings_CB <= 35172000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for Bank of Jiangsu?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"Bank of Jiangsu\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a general risk preparation value of 48747000000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Gen_Risk_Res = 48747000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the fixed asset depreciation and amortization value for the record with the highest frequency?",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with a stock name of Bank of Jiangsu or cash paid for taxes equal to 10461000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Cash_Flow_Statement.Cash_Pay_Taxes = 10461000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the income tax expenses that have at least 5 records.",
    "query": "SELECT Income_Statement.Income_Tax_Exp FROM Income_Statement GROUP BY Income_Statement.Income_Tax_Exp HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the smallest handling fees and commission expenses for each financial expense in cash flow statement.",
    "query": "SELECT MIN (Income_Statement.Fee_Com_Exp) , Cash_Flow_Statement.CF_Stmt_Fin_Expenses FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.CF_Stmt_Fin_Expenses"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the inventory decrease and net cash flow generated from operating activities for the top 5 records with the highest inventory decrease value.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease , Cash_Flow_Statement.IM_NCF_Oper_Activities FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Inventory_Decrease DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information available about the records.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600036.SH or surplus reserves equal to 94985000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Balance_Sheet.Sur_Reserves = 94985000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the impairment loss on assets for records with total comprehensive income between 25873000000.0 and 13404000000.0.",
    "query": "SELECT Income_Statement.Assets_Imp_Loss FROM Income_Statement WHERE Income_Statement.Tot_Compre_Inc BETWEEN 25873000000.0 AND 13404000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the diluted earnings per share that is reported in more than 9 records.",
    "query": "SELECT Income_Statement.Diluted_EPS FROM Income_Statement GROUP BY Income_Statement.Diluted_EPS HAVING COUNT (*) > 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average net cash flow generated from cash equivalents for all records?",
    "query": "SELECT MAX (Cash_Flow_Statement.Net_CF_Cash_Equiv) , MIN (Cash_Flow_Statement.Net_CF_Cash_Equiv), AVG (Cash_Flow_Statement.Net_CF_Cash_Equiv) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the fixed assets acquired through financing lease values that appeared exactly 7 times?",
    "query": "SELECT Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets HAVING COUNT (*) = 7"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes of records with employee compensation payable value that is not equal to 28532000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Emp_Comp_PAY != 28532000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the asset impairment provision and interest expenses for records with asset impairment provision smaller than 3334010640.0.",
    "query": "SELECT Cash_Flow_Statement.Asset_Impairment_Dec , Income_Statement.Int_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Asset_Impairment_Dec < 3334010640.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, count the number of distinct business and management fees values.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Income_Statement.Gen_n_Admin_Exps) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average opening balance of cash for each asset impairment provision value.",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_Begin_Period) , Cash_Flow_Statement.Asset_Impairment_Dec FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Asset_Impairment_Dec"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has only one record in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each total comprehensive income value, how many distinct loss on disposal of non current assets are there?",
    "query": "SELECT Income_Statement.Tot_Compre_Inc , COUNT (DISTINCT Income_Statement.Loss_Disposal_Nonc_Assets) FROM Income_Statement GROUP BY Income_Statement.Tot_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many records of each stock have available-for-sale financial assets value larger than 3468896914 and list them.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Avail_Sale_FAs > 3468896914 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a loss in minority interest greater than 251000000.0 for each company?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Inc_Loss > 251000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to the stock 600036.SH or have operating expenses equal to 46748000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Income_Statement.Oper_Exp = 46748000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock name of Shanghai Pudong Development Bank or a total comprehensive income attributable to shareholders of the parent company equal to 18362456000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Income_Statement.Attr_Parent_Shareholders_Compre_Inc = 18362456000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the deferred tax assets and total assets of records whose capital reserves are either above 60737000000.0 or below 81762000000.0.",
    "query": "SELECT Balance_Sheet.Def_IT_Assets , Balance_Sheet.Tot_Assets FROM Balance_Sheet WHERE Balance_Sheet.Cap_Reserves > 60737000000.0 OR Balance_Sheet.Cap_Reserves < 81762000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the tax payable and undistributed profits of the top 5 records with the highest undistributed profits.",
    "query": "SELECT Balance_Sheet.Undist_Profits , Balance_Sheet.Tax_Pay FROM Balance_Sheet ORDER BY Balance_Sheet.Undist_Profits DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me the stock codes and amortization of intangible assets, sorted by the impact of exchange rate changes on cash and cash equivalents in descending order?",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Intangible_Asset_Amortization FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.FX_Rate_Change_Cash DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top three stocks with the highest other business income.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oth_Biz_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock codes of the two records with the largest opening balance of cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Eq_Begin_Period DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a basic earnings per share lower than 1980?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Basic_EPS < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have each value of total comprehensive income attributable to minority shareholders, sorted by the number of records for each value?",
    "query": "SELECT Income_Statement.Minor_Int_Shareholders_Compre_Inc , COUNT (*) FROM Income_Statement GROUP BY Income_Statement.Minor_Int_Shareholders_Compre_Inc ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the stock name of the record that has the lowest frequency of appearance?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the foreign exchange rate change in cash for all records, and the total net cash flow generated from operating activities for each of them.",
    "query": "SELECT Cash_Flow_Statement.FX_Rate_Change_Cash , SUM (Cash_Flow_Statement.Net_CF_Op) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.FX_Rate_Change_Cash"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the absorb investment value from cash flow statement where the amortization of long-term deferred expenses is between 632000000.0 and 26443266996.0.",
    "query": "SELECT Cash_Flow_Statement.Absorb_Investment FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Longterm_Amortization BETWEEN 632000000.0 AND 26443266996.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or an interest expense of 78338000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Income_Statement.Int_Exp = 78338000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the interest income values that appeared more than once?",
    "query": "SELECT Income_Statement.Int_Inc FROM Income_Statement GROUP BY Income_Statement.Int_Inc HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of minority interest with the highest frequency of occurrence?",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss FROM Income_Statement GROUP BY Income_Statement.Minor_Int_Inc_Loss ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three stocks with the highest income tax expenses.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Income_Tax_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display any basic earnings per share value that appeared only once.",
    "query": "SELECT Income_Statement.Basic_EPS FROM Income_Statement GROUP BY Income_Statement.Basic_EPS HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code, net profit, and non-operating revenue of all the records.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Net_Profit , Income_Statement.Non_Op_Rev FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the different values of fixed assets in our records, sorted by their frequency in ascending order.",
    "query": "SELECT Balance_Sheet.Fix_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Fix_Assets ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which value of loss on disposal of non current assets is the most frequent?",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets FROM Income_Statement GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the eight least frequent securities codes in ascending order of their frequency.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the minimum value of other business income for each total comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT MIN (Income_Statement.Oth_Biz_Inc) , Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities codes of all records whose opening balance of cash does not equal to 372304000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Begin_Period != 372304000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the name of each stock, the number of different fixed assets, and the total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Balance_Sheet.Fix_Assets) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information available in the database about the records.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the top three stock codes with the highest closing balance of cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Final_Cash_Equiv DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the minority shareholders' equity value and the number of records associated with each value.",
    "query": "SELECT Balance_Sheet.Minor_Int_Eq , count(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Minor_Int_Eq"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the total profit of records where cash flow statement - net profit is null.",
    "query": "SELECT Income_Statement.Tot_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Net_Income IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the total owner's equity attributable to the parent company for each treasury stock value.",
    "query": "SELECT Balance_Sheet.Treas_Stock , SUM (Balance_Sheet.Own_Eq_Attr_Parent) FROM Balance_Sheet GROUP BY Balance_Sheet.Treas_Stock"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks that have total comprehensive income different from 19001184000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Compre_Inc != 19001184000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock code and subtotal of cash inflows from financing activities of all records, sorted by decreasing cash paid for taxes.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Fin_CF_In_Sub FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Taxes DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest value of undistributed profits.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Undist_Profits DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have surplus reserves greater than 55276000000.0 and general risk preparation greater than 48747000000.0?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Sur_Reserves > 55276000000.0 AND Balance_Sheet.Gen_Risk_Res > 48747000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of stocks whose total owner's equity is not equal to 721080000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Own_Eq != 721080000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of stocks and their total assets.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Tot_Assets FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code and opening balance of cash equivalents, sorted by the loss from changes in fair value in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Initial_Cash_Equiv FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fair_Value_Change_Loss DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock's name is not related to investment real estate value at 1227000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Inv_Real_Estate != 1227000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities with the highest investment income?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Inv_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the maximum, minimum, and average noble metal value across all records.",
    "query": "SELECT MAX (Balance_Sheet.Prec_Metals) , MIN (Balance_Sheet.Prec_Metals), AVG (Balance_Sheet.Prec_Metals) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have long-term amortization greater than 2028050912.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Longterm_Amortization > 2028050912.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest and lowest income from changes in fair value across all records?",
    "query": "SELECT MAX (Income_Statement.FV_Change_Inc) , MIN (Income_Statement.FV_Change_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the two stock codes with the highest net cash flow generated from operating activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.IM_NCF_Oper_Activities DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me the Stk_Code and net profit attributable to the owner of the parent company, sorted by interest expenses in descending order?",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Attr_Parent_Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Int_Exp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the highest and lowest total owner's equity values in our data.",
    "query": "SELECT MAX (Balance_Sheet.Tot_Own_Eq) , MIN (Balance_Sheet.Tot_Own_Eq) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock code has the least frequency of occurrence in our data?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of stock names and income tax expenses of all records in the descending order of interest expenses.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Income_Tax_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Int_Exp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of the stocks whose trading financial liabilities are less than or equal to 20506000000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Trad_Fin_Liab <= 20506000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the distinct securities names from our data.",
    "query": "SELECT distinct(Basic_Info.Stk_Name) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top 5 cash paid for taxes and their corresponding handling fees and commission expenses values.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Taxes , Income_Statement.Fee_Com_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Taxes DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each company whose derivative financial assets are more than 9492000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Deriv_Assets > 9492000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "fetch all the unique securities codes from our database.",
    "query": "SELECT distinct(Basic_Info.Stk_Code) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the minor interest income (or loss) values in descending order of business and management fees.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss FROM Income_Statement ORDER BY Income_Statement.Gen_n_Admin_Exps DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three securities with the highest total owner's equity.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tot_Own_Eq DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the dividend or profit distribution value that has the most number of occurrences?",
    "query": "SELECT Cash_Flow_Statement.Distribute_Dividends_Profits FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Distribute_Dividends_Profits ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the highest occurrence in the records?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the loss on disposal of fixed assets value for records with capital converted from debt between 4589071433 and 7528101683.",
    "query": "SELECT Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Debt_Converted_Capital BETWEEN 4589071433 AND 7528101683"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest business and management fees.",
    "query": "SELECT * FROM Income_Statement ORDER BY Income_Statement.Gen_n_Admin_Exps DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the surplus reserves and total assets of all records.",
    "query": "SELECT Balance_Sheet.Sur_Reserves , Balance_Sheet.Tot_Assets FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the two companies with the highest total owner's equity.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tot_Own_Eq DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all stock codes where investment income from associates and joint ventures is less than or equal to 31428654111.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Inv_Inc_Assoc_JV <= 31428654111.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has a value of other liabilities different from 50840000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Oth_Liab != 50840000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the paid-in capital and borrowing funds of records whose surplus reserves are either above 188929000000.0 or below 94985000000.0?",
    "query": "SELECT Balance_Sheet.Paid_Up_Cap , Balance_Sheet.Bor_Funds_Oth_FIs FROM Balance_Sheet WHERE Balance_Sheet.Sur_Reserves > 188929000000.0 OR Balance_Sheet.Sur_Reserves < 94985000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the general and administrative expenses and total comprehensive income attributable to minority shareholders for records with general and administrative expenses less than 51877000000.0.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps , Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Income_Statement WHERE Income_Statement.Gen_n_Admin_Exps < 51877000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records does each stock have, given that their total owner's equity is above 238302235000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Own_Eq > 238302235000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest and lowest reduction in operating receivables among all the records?",
    "query": "SELECT MAX (Cash_Flow_Statement.Oper_Receivables_Decrease) , MIN (Cash_Flow_Statement.Oper_Receivables_Decrease) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a stock code of 600015.SH or an investment in real estate equal to 9240005991.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Balance_Sheet.Inv_Real_Estate = 9240005991.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the securities code and the reduction in operating receivables of all records, sorted by other cash payments related to investment activities in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Oper_Receivables_Decrease FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Inv_Other DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the stock name of Bank of Jiangsu or other comprehensive income equal to 1375220000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Income_Statement.Oth_Compre_Inc = 1375220000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Huaxia Bank or have a net profit equal to 17625964000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Income_Statement.Net_Profit = 17625964000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have loans and advances exceeding 4866904000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Loans_Adv > 4866904000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the derivative financial liabilities values that appear in 4 or more records.",
    "query": "SELECT Balance_Sheet.Deriv_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Deriv_Liab HAVING COUNT (*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes of the two companies with the largest decrease in inventory.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inventory_Decrease DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with undistributed profits more than 69967463000.0 does each company have?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Undist_Profits > 69967463000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest total liabilities.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Tot_Liab DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest value of convertible corporate bonds maturing within one year.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me the stock code and decrease in deferred income tax assets for each record, sorted by the amount of debt repayment in descending order?",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.DIT_Asset_Reduction FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Repay_Debt DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return all columns in the income statement records.",
    "query": "SELECT * FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have operating receivables decrease not equal to -245794000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Oper_Receivables_Decrease != -245794000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the stock codes from income statement where diluted earnings per share are less than or equal to 0.95, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Diluted_EPS <= 0.95 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the convertible bonds maturing within one year and their investment income, but only for those whose cash paid for investment is either above 316981000000.0 or below 833348000000.0.",
    "query": "SELECT Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y , Income_Statement.Inv_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Invest > 316981000000.0 OR Cash_Flow_Statement.Cash_Pay_Invest < 833348000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock code with assets impairment loss greater than 230000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Assets_Imp_Loss > 230000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of the top three records with the highest value of received other cash related to financing activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Recv_Other_Fin DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes that appear exactly once in the database.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the highest and lowest values of exchange gains across all records?",
    "query": "SELECT MAX (Income_Statement.Exch_Gain_Inc) , MIN (Income_Statement.Exch_Gain_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have operating expenses exceeding 64652000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oper_Exp > 64652000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the interbank deposits and investment real estate of the top 5 records with the highest interbank deposits value.",
    "query": "SELECT Balance_Sheet.IB_Deposits , Balance_Sheet.Inv_Real_Estate FROM Balance_Sheet ORDER BY Balance_Sheet.IB_Deposits DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of two securities with the highest net cash flow generated from operating activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.IM_NCF_Oper_Activities DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are either about China Mingsheng Bank or have investment income equal to 12403000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Income_Statement.Inv_Inc = 12403000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which company has the most number of records in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or have a subtotal of cash outflows from operating activities equal to 353499000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Cash_Flow_Statement.Op_CF_Out_Sub = 353499000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest net profit attributable to the owner of the parent company?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Net_Profit DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code for all records whose closing balance of cash equivalents is less than or equal to 21163428610.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Eq_End_Period <= 21163428610.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the accounts receivable investments values that have been recorded in at least four instances and with interbank deposits exceeding 44028805000.0.",
    "query": "SELECT Balance_Sheet.Recv_Invest FROM Balance_Sheet WHERE Balance_Sheet.IB_Deposits > 44028805000.0 GROUP BY Balance_Sheet.Recv_Invest HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have estimated liabilities before the year 1980?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Est_Liab < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out how many records and different company names have other comprehensive income greater than 1801000000.0, along with the name of stocks.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oth_Compre_Inc > 1801000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the comprehensive income attributable to shareholders of the parent company for records with comprehensive income attributable to minority shareholders between 808000000.0 and 808000000.0.",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement WHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc BETWEEN 808000000.0 AND 808000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the cash and deposits with central bank for all records that do not have a value for noble metal.",
    "query": "SELECT Balance_Sheet.Cash_CB FROM Balance_Sheet WHERE Balance_Sheet.Prec_Metals IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the taxes and surcharges and handling fees and commission expenses of records that have 5 or more cash equivalents closing balance?",
    "query": "SELECT Income_Statement.Tax_n_Surs , Income_Statement.Fee_Com_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cash_Eq_End_Period HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three securities have the highest interest income?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Int_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all other liabilities values that have at least four records with undistributed profits greater than 69967463000.0.",
    "query": "SELECT Balance_Sheet.Oth_Liab FROM Balance_Sheet WHERE Balance_Sheet.Undist_Profits > 69967463000.0 GROUP BY Balance_Sheet.Oth_Liab HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of records for each increase in deferred income tax liabilities, and sort the result in ascending order.",
    "query": "SELECT Cash_Flow_Statement.DIT_Liability_Increase , COUNT (*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.DIT_Liability_Increase ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values of net interest income are there in the list of records?",
    "query": "SELECT count(DISTINCT Income_Statement.Net_Int_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the least number of records in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me all the values of cash received from absorbing investments that have more than or equal to 4 records with convertible corporate bonds maturing within one year exceeding 11824985585.",
    "query": "SELECT Cash_Flow_Statement.Absorb_Investment FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y > 11824985585 GROUP BY Cash_Flow_Statement.Absorb_Investment HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average total assets for each other liability value.",
    "query": "SELECT avg(Balance_Sheet.Tot_Assets) , Balance_Sheet.Oth_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Oth_Liab"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values of cash paid for distributing dividends, profits, or paying interest do we have in our data?",
    "query": "SELECT count(DISTINCT Cash_Flow_Statement.Distribute_Dividends_Profits) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me the names of stocks and their corresponding values of amortization of intangible assets?",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Intangible_Asset_Amortization FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code of records whose due from interbank deposits is not equal to 147145000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.IB_Deposits != 147145000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the treasury stock values in descending order of total owner's equity.",
    "query": "SELECT Balance_Sheet.Treas_Stock FROM Balance_Sheet ORDER BY Balance_Sheet.Tot_Own_Eq DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest value of minority shareholders' equity.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Minor_Int_Eq DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have a minority shareholders' equity value different from 2978000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Minor_Int_Eq != 2978000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks that appear in more than six records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) > 6"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock codes of records where the value of hold-to-maturity investments is less than or equal to 40149388338, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Held_Mat_Invest <= 40149388338 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top two companies with the highest issuance of loans and advances.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Loans_Adv DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of each stock and the count of unique cash outflows from financing activities values associated with each stock.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Cash_Flow_Statement.Fin_CF_Out_Sub) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities codes that have more than 2 occurrences in our data.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have other business income more than 5676000000.0 and what are their corresponding other cash payments related to financing activities?",
    "query": "SELECT Income_Statement.Oth_Biz_Inc , Cash_Flow_Statement.Cash_Pay_Fin_Other FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Inc > 5676000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock code that has total owner's equity above 985913000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Own_Eq > 985913000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of securities codes and opening balance of cash equivalents in descending order of other cash received related to operating activities.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Initial_Cash_Equiv FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Oth_Oper_Activities DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the smallest net income from handling fees and commissions for each closing balance of cash equivalents.",
    "query": "SELECT MIN (Income_Statement.Fee_Com_Net_Inc) , Cash_Flow_Statement.Cash_Eq_End_Period FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cash_Eq_End_Period"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find me the three companies with the highest value of other assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Oth_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top three securities with the highest net interest income.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Net_Int_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of the top two securities with the highest noble metal values.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Prec_Metals DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code and interest receivable of all the records.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Int_Receiv FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the information available in the income statement.",
    "query": "SELECT * FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two stock codes with the largest decrease in inventory?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inventory_Decrease DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest cash received from absorbing investments?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Absorb_Investment DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of stocks whose other cash payments related to financing activities are not equal to 35243683155.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Fin_Other != 35243683155.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the unique diluted earnings per share values in the income statement.",
    "query": "SELECT distinct(Income_Statement.Diluted_EPS) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest net cash flow generated from investment activities.",
    "query": "SELECT * FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Net_CF_Inv DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the impairment loss of assets and the cash inflow from investment activities for records where the impairment loss of assets is greater than 732000000.0.",
    "query": "SELECT Income_Statement.Assets_Imp_Loss , Cash_Flow_Statement.Inv_CF_In_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Assets_Imp_Loss > 732000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, show me the stock code, the number of distinct non operating income, and the total number of records for that stock.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Income_Statement.Non_Op_Rev) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the fixed assets acquired through financing lease and sum of issue bonds for each fixed asset acquisition.",
    "query": "SELECT Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets , SUM (Cash_Flow_Statement.Issue_Bonds) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which company has the most number of members in our database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the highest, lowest and average value of minority shareholders' equity in our data.",
    "query": "SELECT MAX (Balance_Sheet.Minor_Int_Eq) , MIN (Balance_Sheet.Minor_Int_Eq), AVG (Balance_Sheet.Minor_Int_Eq) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have dividends and profits distributed before 1980?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Distribute_Dividends_Profits < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the loss on disposal of non current assets in descending order of net increase in borrowings from the central bank.",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_Inc_Borrowings_CB DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display any securities code that appears exactly once.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the operating profit of records where the net interest income is null.",
    "query": "SELECT Income_Statement.Oper_Profit FROM Income_Statement WHERE Income_Statement.Net_Int_Inc IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average noble metal value for each hold-to-maturity investment value.",
    "query": "SELECT avg(Balance_Sheet.Prec_Metals) , Balance_Sheet.Held_Mat_Invest FROM Balance_Sheet GROUP BY Balance_Sheet.Held_Mat_Invest"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the issuance of loans and advances values that appeared more than twice.",
    "query": "SELECT Balance_Sheet.Loans_Adv FROM Balance_Sheet GROUP BY Balance_Sheet.Loans_Adv HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the interest expenses of records whose basic earnings per share is within the range of 0.46 and 1.09.",
    "query": "SELECT Income_Statement.Int_Exp FROM Income_Statement WHERE Income_Statement.Basic_EPS BETWEEN 0.46 AND 1.09"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the trading financial liabilities sorted by other liabilities in descending order.",
    "query": "SELECT Balance_Sheet.Trad_Fin_Liab FROM Balance_Sheet ORDER BY Balance_Sheet.Oth_Liab DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock name and subtotal of cash inflows from financing activities for records that have at least 5 cash payments related to investment activities.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Fin_CF_In_Sub FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cash_Pay_Inv_Other HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average basic earnings per share for each net increase in deposits with central bank and interbank funds value.",
    "query": "SELECT avg(Income_Statement.Basic_EPS) , Cash_Flow_Statement.CenBank_Interbank_Net_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.CenBank_Interbank_Net_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have capital reserves exceeding 32203742000.0 and owner's equity attributable to the parent company exceeding 977126000000.0?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Cap_Reserves > 32203742000.0 AND Balance_Sheet.Own_Eq_Attr_Parent > 977126000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there in cash flow statement?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "fetch all records with unique securities codes.",
    "query": "SELECT distinct(Basic_Info.Stk_Code) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have financial cash inflow subtotal greater than 612774000000.0 and non-operating expenses exceeding 37000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fin_CF_In_Sub > 612774000000.0 AND Income_Statement.Non_Op_Exp > 37000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which fixed asset scrap loss value has appeared in 8 or more records?",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Scrap_Loss FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fixed_Asset_Scrap_Loss HAVING COUNT (*) >= 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of stocks that have more than two records?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest total owner's equity?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tot_Own_Eq DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of top three stocks with the highest total owner's equity.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tot_Own_Eq DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the two companies with the highest operating expenses.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the deposit absorption value and fixed assets value for each record whose deposit absorption is more than 4300243000000.0.",
    "query": "SELECT Balance_Sheet.Acc_Deposits , Balance_Sheet.Fix_Assets FROM Balance_Sheet WHERE Balance_Sheet.Acc_Deposits > 4300243000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all stock codes for records whose cash received from subsidiaries absorbing minority shareholder investments is less than or equal to 38947858895, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Subsidiary_Absorb_Minority <= 38947858895 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have dividend and profit distribution larger than 4821000000.0, and what is the value of net profit attributable to the owner of the parent company and dividend and profit distribution for these records?",
    "query": "SELECT Cash_Flow_Statement.Distribute_Dividends_Profits , Income_Statement.Attr_Parent_Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Distribute_Dividends_Profits > 4821000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of the top three records with the highest assets impairment loss.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Assets_Imp_Loss DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "get me all the records with unique interest income values.",
    "query": "SELECT distinct(Income_Statement.Int_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have in the balance sheet table?",
    "query": "SELECT count(*) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Huaxia Bank or have borrowing funds from other financial institutions of exactly 340630000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Balance_Sheet.Bor_Funds_Oth_FIs = 340630000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of the top three companies with the highest total comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code(s) that have exactly 2 records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) = 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide a list of stock codes where the value of \"other\" is less than or equal to 41995235271, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Other <= 41995235271 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top five records with the highest investment income, and what are their corresponding total owner's equity values?",
    "query": "SELECT Balance_Sheet.Recv_Invest , Balance_Sheet.Tot_Own_Eq FROM Balance_Sheet ORDER BY Balance_Sheet.Recv_Invest DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average debt converted to capital, the minimum fixed assets acquired through financing lease, and the minimum taxes and surcharges for all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Debt_Converted_Capital) , MIN (Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets), MIN (Income_Statement.Tax_n_Surs) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which investment income value has the fewest number of records?",
    "query": "SELECT Cash_Flow_Statement.Investment_Income FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Investment_Income ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent values of total comprehensive income attributable to minority shareholders, sorted by their frequency in ascending order?",
    "query": "SELECT Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Minor_Int_Shareholders_Compre_Inc ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net interest income and exchange gains for records with net interest income less than 27177219000.0.",
    "query": "SELECT Income_Statement.Net_Int_Inc , Income_Statement.Exch_Gain_Inc FROM Income_Statement WHERE Income_Statement.Net_Int_Inc < 27177219000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest value of other cash received related to financing activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Recv_Other_Fin DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have inventory decrease of 22413323249 or 18319165654?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Inventory_Decrease = 22413323249 OR Cash_Flow_Statement.Inventory_Decrease = 18319165654"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock codes and the count of unique decrease in deferred income tax assets for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Cash_Flow_Statement.DIT_Asset_Reduction) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top 3 stock codes with the highest losses from disposal of fixed assets, intangible assets, and other long-term assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks that contain the phrase 'China Mingsheng Bank' in their names.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%China Mingsheng Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of income from changes in fair value that have at least 5 records?",
    "query": "SELECT Income_Statement.FV_Change_Inc FROM Income_Statement GROUP BY Income_Statement.FV_Change_Inc HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average non-operating expenses for each value of exchange gains in income statement.",
    "query": "SELECT avg(Income_Statement.Non_Op_Exp) , Income_Statement.Exch_Gain_Inc FROM Income_Statement GROUP BY Income_Statement.Exch_Gain_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all the details where net interest income is negative.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Net_Int_Inc < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with stock code 600000.SH or initial cash equivalents of 567198000000.0 do we have in our database?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Cash_Flow_Statement.Initial_Cash_Equiv = 567198000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code that appears exactly once in our data.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which companies have different asset impairment provision value from 230000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Asset_Impairment_Dec != 230000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, display the number of unique values in the column of dividends and profits paid by subsidiaries to minority shareholders.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Cash_Flow_Statement.Subsidiary_Pay_Minority) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have closing balance of cash equivalents less than 1980?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Final_Cash_Equiv < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the subsidiary payments to minority shareholders for each records, and the sum of net profit attributable to the owner of the parent company for each of them.",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Pay_Minority , SUM (Income_Statement.Attr_Parent_Net_Profit) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Subsidiary_Pay_Minority"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks that appear more than twice in our records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and operating expenses of all records.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Oper_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which companies have exactly 4 records in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) = 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me all the stock codes that contain the word '600000.SH'.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600000.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average income from changes in fair value, the minimum diluted earnings per share, and the minimum total profit for all records.",
    "query": "SELECT AVG (Income_Statement.FV_Change_Inc) , MIN (Income_Statement.Diluted_EPS), MIN (Income_Statement.Tot_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the interest payable value that has the least number of records?",
    "query": "SELECT Balance_Sheet.Int_Pay FROM Balance_Sheet GROUP BY Balance_Sheet.Int_Pay ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different other business costs do we have for each stock code?",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Oth_Biz_Costs) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code and cash received from absorbing investments of all records, sorted by their fixed asset scrapping loss in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Absorb_Investment FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fixed_Asset_Scrap_Loss DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the cash equivalents opening balance and total comprehensive income attributable to shareholders of the parent company for records where the opening balance of cash equivalents is higher than 551989000000.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_Eq_Begin_Period , Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Eq_Begin_Period > 551989000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the cash received for interest, handling fees, and commissions of all records, and the total exchange gains by each?",
    "query": "SELECT Cash_Flow_Statement.Cash_Int_Commission_Collected , SUM (Income_Statement.Exch_Gain_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cash_Int_Commission_Collected"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the operating expenses and their corresponding total diluted earnings per share.",
    "query": "SELECT Income_Statement.Oper_Exp , SUM (Income_Statement.Diluted_EPS) FROM Income_Statement GROUP BY Income_Statement.Oper_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code and total profit of all records, sorted by other comprehensive income in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Tot_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oth_Compre_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose operating revenue is not equal to 71539000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Rev != 71539000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the highest frequency in our data?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records in our data are affiliated with China Merchants Bank or have a translation difference of foreign currency statements equal to 17679402107?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Balance_Sheet.Exch_Diff_Cash = 17679402107"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of all securities that have a reduction in operating receivables that is not equal to -434400000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Oper_Receivables_Decrease != -434400000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the securities code of the top three records with the highest outflows from investment activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inv_CF_Out_Sub DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock name and opening balance of cash equivalents for each record, sorted by the reduction in operating receivables in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Cash_Eq_Begin_Period FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Oper_Receivables_Decrease DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities codes of all records whose interest income is not equal to 75794000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Int_Inc != 75794000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest long term equity investment?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.LT_Eq_Invest DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have cash paid for the purchase and construction of fixed assets exceeding 1273001000.0 for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Assets > 1273001000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three companies with the highest investment in real estate.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Inv_Real_Estate DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the subsidiary pay to minority shareholders for all records where net increase in borrowings from the central bank is null.",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Pay_Minority FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_Inc_Borrowings_CB IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the distribution of dividends and profits and received other investments of the records with operating cash outflows above 172792000000.0 or below 353499000000.0?",
    "query": "SELECT Cash_Flow_Statement.Distribute_Dividends_Profits , Cash_Flow_Statement.Recv_Other_Invest FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Op_CF_Out_Sub > 172792000000.0 OR Cash_Flow_Statement.Op_CF_Out_Sub < 353499000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which income from changes in fair value value appeared more than twice?",
    "query": "SELECT Income_Statement.FV_Change_Inc FROM Income_Statement GROUP BY Income_Statement.FV_Change_Inc HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the net income from handling fees and commissions for records that do not have an operating revenue value?",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc FROM Income_Statement WHERE Income_Statement.Oper_Rev IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks where operating expenses are less than or equal to 87581000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Exp <= 87581000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the eight least frequent values of cash payments related to investment activities.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Inv_Other FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Inv_Other ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Huaxia Bank or have a derivative financial liabilities value of 2449116000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Balance_Sheet.Deriv_Liab = 2449116000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please display the cash payments related to investment activities and other cash received related to investment activities for the top five records with the highest cash payments related to investment activities.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Inv_Other , Cash_Flow_Statement.Recv_Other_Invest FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cash_Pay_Inv_Other DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all values in the Cash_Pay_Op_Other column of the Cash_Flow_Statement table.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Op_Other FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes of the three stocks with the highest exchange gains in their income statement records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Exch_Gain_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the total number of records in our database?",
    "query": "SELECT count(*) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the interbank deposits and derivative financial assets values for records with IB deposits less than 114630000000.0.",
    "query": "SELECT Balance_Sheet.IB_Deposits , Balance_Sheet.Deriv_Assets FROM Balance_Sheet WHERE Balance_Sheet.IB_Deposits < 114630000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average value of minority interest, the minimum value of diluted earnings per share, and the minimum value of income from changes in fair value across all records.",
    "query": "SELECT AVG (Income_Statement.Minor_Int_Inc_Loss) , MIN (Income_Statement.Diluted_EPS), MIN (Income_Statement.FV_Change_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the deferred tax assets of records with investment in real estate ranging from 9240005991.0 to 1227000000.0.",
    "query": "SELECT Balance_Sheet.Def_IT_Assets FROM Balance_Sheet WHERE Balance_Sheet.Inv_Real_Estate BETWEEN 9240005991.0 AND 1227000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have cash paid to and on behalf of employees not equal to 31302000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Emp != 31302000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have the substring '600000.SH' in their securities code?",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600000.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks that have a net profit attributable to the owner of the parent company different from 17020129000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Net_Profit != 17020129000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Bank of Jiangsu or have total comprehensive income attributable to shareholders of the parent company equal to 18362456000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Income_Statement.Attr_Parent_Shareholders_Compre_Inc = 18362456000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has assets impairment loss value other than 13527799084.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Assets_Imp_Loss != 13527799084.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest exchange gains?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Exch_Gain_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of stocks whose capital reserve is not equal to 65435000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Cap_Reserves != 65435000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a value of received other cash related to financing activities that exceeds 45550964132.0 for each stock code?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Recv_Other_Fin > 45550964132.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the company names that have more than 2 records in the database.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the maximum, minimum, and average expenses at handling fees and commissions across all records.",
    "query": "SELECT MAX (Income_Statement.Fee_Com_Exp) , MIN (Income_Statement.Fee_Com_Exp), AVG (Income_Statement.Fee_Com_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have handling fees and commission expenses that are not equal to 2377000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Exp != 2377000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the name of stocks and the reduction in operating receivables for each record, sorted by the closing balance of cash equivalents in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Oper_Receivables_Decrease FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Eq_End_Period DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the bonds payable that have a total of deposits from interbank and other financial institutions greater than 10.",
    "query": "SELECT Balance_Sheet.Bonds_PAY FROM Balance_Sheet GROUP BY Balance_Sheet.Bonds_PAY HAVING sum(Balance_Sheet.IB_Dep_Oth_FIs) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock names in descending alphabetical order whose general risk preparation is less than or equal to 90673000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Gen_Risk_Res <= 90673000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the details of the record with the highest decrease in deferred income tax assets.",
    "query": "SELECT * FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.DIT_Asset_Reduction DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code of all records with assets impairment loss less than or equal to 230000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Assets_Imp_Loss <= 230000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code and general risk preparation of each record.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Gen_Risk_Res FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the total profit and investment income from associates and joint ventures, where other business income is either above 1376000000.0 or below 2447000000.0.",
    "query": "SELECT Income_Statement.Tot_Profit , Income_Statement.Inv_Inc_Assoc_JV FROM Income_Statement WHERE Income_Statement.Oth_Biz_Inc > 1376000000.0 OR Income_Statement.Oth_Biz_Inc < 2447000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all stock codes in descending order, whose treasury stock is smaller than or equal to 47472168450.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Treas_Stock <= 47472168450 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "I want to know the investment income value, along with the number of records that has assets impairment loss and the total number of records for each investment income value.",
    "query": "SELECT Income_Statement.Inv_Inc , count(DISTINCT Income_Statement.Assets_Imp_Loss) , count(*) FROM Income_Statement GROUP BY Income_Statement.Inv_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the income tax expenses and the total net profit in cash flow statement for each record.",
    "query": "SELECT Income_Statement.Income_Tax_Exp , SUM (Cash_Flow_Statement.CF_Stmt_Net_Income) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Income_Tax_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock name and investment income of each record, sorted by net interest income in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Inv_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Net_Int_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock code and net cash received from disposal of fixed assets, intangible assets, and other long-term assets, sorted by long-term amortization in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Cash_Disposal_Assets FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Longterm_Amortization DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose financial assets sold for repurchase are less than or equal to 54335023000.0, sorted in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Sell_Rep_FAs <= 54335023000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all the securities codes from the table Basic_Info.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the net increase in borrowing funds from other financial institutions and cash paid to and on behalf of employees for records whose diluted earnings per share is either greater than 32452670465.0 or less than 0.95.",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_IB_Borrowings , Cash_Flow_Statement.Cash_Pay_Emp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Diluted_EPS > 32452670465.0 OR Income_Statement.Diluted_EPS < 0.95"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the least frequent securities code in our records, sorted by their frequency?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records for each stock have a loss on disposal of non current assets exceeding 14489125932?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Loss_Disposal_Nonc_Assets > 14489125932 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks that appear only once in the data.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent investment income values, sorted by their frequency in ascending order?",
    "query": "SELECT Income_Statement.Inv_Inc FROM Income_Statement GROUP BY Income_Statement.Inv_Inc ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please provide me the stock names and interest income for all records, sorted by decreasing other comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Int_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Oth_Compre_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all information about records where other business income is negative.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Oth_Biz_Inc < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the smallest value of cash inflows from investment activities for each net cash flow generated from operating activities.",
    "query": "SELECT MIN (Cash_Flow_Statement.Inv_CF_In_Sub) , Cash_Flow_Statement.IM_NCF_Oper_Activities FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.IM_NCF_Oper_Activities"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the value of deferred tax liability that appears most frequently.",
    "query": "SELECT Balance_Sheet.Def_IT_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Def_IT_Liab ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the number of records and different company names for each cash received from disposal of fixed assets, intangible assets, and other long-term assets value, along with the company name itself.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.Cash_Disposal_Assets) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code and operating expenses of all records, sorted by net interest income in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Oper_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Net_Int_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which values of trading financial liabilities appear in five or more records?",
    "query": "SELECT Balance_Sheet.Trad_Fin_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Trad_Fin_Liab HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many unique values of income from changes in fair value exist in our data?",
    "query": "SELECT count(DISTINCT Income_Statement.FV_Change_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have operating receivables decrease more than -87024000000.0 and operating expenses more than 16372581000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Oper_Receivables_Decrease > -87024000000.0 AND Income_Statement.Oper_Exp > 16372581000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fair value change loss and opening balance of cash equivalents for each record.",
    "query": "SELECT Cash_Flow_Statement.Fair_Value_Change_Loss , Cash_Flow_Statement.Cash_Eq_Begin_Period FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of stocks whose tax and fee payable is not 20503000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tax_Pay != 20503000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average cash outflows from financing activities for each value of other cash payments related to operating activities.",
    "query": "SELECT avg(Cash_Flow_Statement.Fin_CF_Out_Sub) , Cash_Flow_Statement.Cash_Pay_Op_Other FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Op_Other"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the foreign exchange rate change on cash in each income tax expense value, where the foreign exchange rate change on cash is greater than 1646000000.0?",
    "query": "SELECT Cash_Flow_Statement.FX_Rate_Change_Cash , Income_Statement.Income_Tax_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.FX_Rate_Change_Cash > 1646000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a loss on scrapping of fixed assets less than 1980?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Fixed_Asset_Scrap_Loss < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which undistributed profits value has the least number of records?",
    "query": "SELECT Balance_Sheet.Undist_Profits FROM Balance_Sheet GROUP BY Balance_Sheet.Undist_Profits ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top 5 other liabilities values that appear most frequently in our records?",
    "query": "SELECT Balance_Sheet.Oth_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Oth_Liab ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a stock code of 600016.SH or a value of 605835000.0 for minority interest?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Income_Statement.Minor_Int_Inc_Loss = 605835000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the derivative financial assets of records with null fixed assets.",
    "query": "SELECT Balance_Sheet.Deriv_Assets FROM Balance_Sheet WHERE Balance_Sheet.Fix_Assets IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all values of basic earnings per share from the income statement table.",
    "query": "SELECT Income_Statement.Basic_EPS FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code and total comprehensive income attributable to shareholders of the parent company, sorted by exchange gains in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Exch_Gain_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code, the number of different cash payments related to investment activities, and the total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Cash_Flow_Statement.Cash_Pay_Inv_Other) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the convertible corporate bonds maturing within one year for those whose other cash payments related to financing activities exceed 10, grouped by the value of convertible corporate bonds maturing within one year?",
    "query": "SELECT Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y HAVING sum(Cash_Flow_Statement.Cash_Pay_Fin_Other) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the exchange gains and basic earnings per share for records where exchange gains are more than 459000000.0.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc , Income_Statement.Basic_EPS FROM Income_Statement WHERE Income_Statement.Exch_Gain_Inc > 459000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "get me the amortization of intangible assets for records whose interest income falls between 62213781000.0 and 75794000000.0.",
    "query": "SELECT Cash_Flow_Statement.Intangible_Asset_Amortization FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Int_Inc BETWEEN 62213781000.0 AND 75794000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the fee and commission net income sorted by cash equivalents closing balance in descending order.",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Eq_End_Period DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code of records where the value of hold-to-maturity investment is not 46283995696.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Held_Mat_Invest != 46283995696"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the fixed asset depreciation and amortization values of the records that appear exactly twice?",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec HAVING COUNT (*) = 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me a list of stock names and investment income, sorted by borrowing from the Central Bank in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Recv_Invest FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Bor_CB DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the interest expenses that occur at least 8 times.",
    "query": "SELECT Income_Statement.Int_Exp FROM Income_Statement GROUP BY Income_Statement.Int_Exp HAVING COUNT (*) >= 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an operating profit equal to 90879000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Oper_Profit = 90879000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list out the names of stocks whose cash received for interest, handling fees, and commissions are less than or equal to 66973000000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Int_Commission_Collected <= 66973000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of companies whose total assets differ from 4098550000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Assets != 4098550000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net cash flow generated from investment activities that have a total cash payment for other investment activities greater than 10.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Inv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Inv HAVING sum(Cash_Flow_Statement.Cash_Pay_Inv_Other) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of cash at the beginning of the period and other cash payments related to operating activities where the cash at the beginning of the period is greater than 15209000000.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_Begin_Period , Cash_Flow_Statement.Cash_Pay_Op_Other FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Begin_Period > 15209000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the same value of debt converted to capital as 4589071433?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Debt_Converted_Capital = 4589071433"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list out the stock codes of records whose opening balance of cash equivalents is not equal to 551989000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Eq_Begin_Period != 551989000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the handling fees and commission expenses and other business costs where the business and management fees are either greater than 13287000000.0 or less than 51877000000.0.",
    "query": "SELECT Income_Statement.Fee_Com_Exp , Income_Statement.Oth_Biz_Costs FROM Income_Statement WHERE Income_Statement.Gen_n_Admin_Exps > 13287000000.0 OR Income_Statement.Gen_n_Admin_Exps < 51877000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either 10878000000.0 or 95779000000.0 as their other cash payments related to operating activities?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Op_Other = 10878000000.0 OR Cash_Flow_Statement.Cash_Pay_Op_Other = 95779000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code, debt repayment and indirect method net cash flow generated from operating activities of the records.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Repay_Debt , Cash_Flow_Statement.IM_NCF_Oper_Activities FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me the stock code, net income from handling fees and commissions, and exchange gains for all records?",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Fee_Com_Net_Inc , Income_Statement.Exch_Gain_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have a stock name that contains 'China Merchants Bank'?",
    "query": "SELECT DISTINCT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%China Merchants Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the operating expenses value that only appears in one record.",
    "query": "SELECT Income_Statement.Oper_Exp FROM Income_Statement GROUP BY Income_Statement.Oper_Exp HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest investment income.",
    "query": "SELECT * FROM Income_Statement ORDER BY Income_Statement.Inv_Inc DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values do we have in the net profit attributable to the owner of the parent company?",
    "query": "SELECT count(DISTINCT Income_Statement.Attr_Parent_Net_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock name, the number of different cash outflow subtotals, and the total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.Fin_CF_Out_Sub) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the different values of operating profit and the number of records for each value.",
    "query": "SELECT Income_Statement.Oper_Profit , COUNT(*) FROM Income_Statement GROUP BY Income_Statement.Oper_Profit"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top two stocks with the highest net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Net_Profit DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, show me the number of records that have net income from handling fees and commissions above 3667000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Net_Inc > 3667000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks and their corresponding issuance of loans and advances values, sorted by decreasing surplus reserves.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Loans_Adv FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Sur_Reserves DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock names and the operating profits for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Oper_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the cash payment for other investment activities value that appears exactly 7 times?",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Inv_Other FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Inv_Other HAVING COUNT (*) = 7"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the different total liabilities and the count of records for each total liability value.",
    "query": "SELECT Balance_Sheet.Tot_Liab , COUNT(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top 5 securities codes with the highest number of records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code of the top three records with the highest trading financial liabilities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Trad_Fin_Liab DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "fetch all the records that have unique values of asset impairment provision.",
    "query": "SELECT distinct(Cash_Flow_Statement.Asset_Impairment_Dec) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of the securities that only appear once in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average loss on disposal of non current assets for each non operating income value.",
    "query": "SELECT avg(Income_Statement.Loss_Disposal_Nonc_Assets) , Income_Statement.Non_Op_Rev FROM Income_Statement GROUP BY Income_Statement.Non_Op_Rev"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight smallest values of closing balance of cash equivalents in our data, sorted by their frequency?",
    "query": "SELECT Cash_Flow_Statement.Final_Cash_Equiv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Final_Cash_Equiv ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of investment income and operating profit in records where investment income is greater than 5883075000.0?",
    "query": "SELECT Income_Statement.Inv_Inc , Income_Statement.Oper_Profit FROM Income_Statement WHERE Income_Statement.Inv_Inc > 5883075000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of the two records with the highest received other cash related to financing activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Recv_Other_Fin DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the diluted earnings per share value that appears most frequently?",
    "query": "SELECT Income_Statement.Diluted_EPS FROM Income_Statement GROUP BY Income_Statement.Diluted_EPS ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and cash paid to employees for records with at least 5 different opening balances of cash.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Cash_Pay_Emp FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cash_Begin_Period HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out how many records do we have for each stock name, whose cash and deposits with central bank value is more than 354899000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Cash_CB > 354899000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of the two records with the highest cash paid for the purchase and construction of fixed assets, intangible assets, and other long-term assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there for Bank of Jiangsu or with lending funds equal to 49776000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Balance_Sheet.Lending_Funds = 49776000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average net increase in borrowings from the central bank for each operating profit value.",
    "query": "SELECT avg(Cash_Flow_Statement.Net_Inc_Borrowings_CB) , Income_Statement.Oper_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Oper_Profit"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of top three securities with the highest net increase in customer loans and advances.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cust_Loans_Net_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the values of total comprehensive income attributable to minority shareholders and minority interest for the top five records with the highest total comprehensive income attributable to minority shareholders.",
    "query": "SELECT Income_Statement.Minor_Int_Shareholders_Compre_Inc , Income_Statement.Minor_Int_Inc_Loss FROM Income_Statement ORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose cash and deposits with central bank less than or equal to 590855000000.0 in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Cash_CB <= 590855000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a total profit greater than 26567000000.0 and a total comprehensive income greater than 13404000000.0?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Tot_Profit > 26567000000.0 AND Income_Statement.Tot_Compre_Inc > 13404000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have financial expenses greater than 37954432750 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Fin_Expenses > 37954432750 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the fair value change income of the category with the highest frequency in our data?",
    "query": "SELECT Income_Statement.FV_Change_Inc FROM Income_Statement GROUP BY Income_Statement.FV_Change_Inc ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an outflow from investment activities equal to 1071490000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Inv_CF_Out_Sub = 1071490000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock names have basic earnings per share less than or equal to 0.58, sorted in descending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Basic_EPS <= 0.58 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the details in income statement records.",
    "query": "SELECT * FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the maximum, minimum, and average depreciation of fixed assets, depletion of oil and gas assets, and depreciation of productive biological assets across all records.",
    "query": "SELECT MAX (Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec) , MIN (Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec), AVG (Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show the stock names and reduction in operating receivables for all records, sorted by subtotal of cash inflows from operating activities in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Oper_Receivables_Decrease FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Op_CF_Sub DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the operating expenses and cash paid for taxes of the top five records with the highest operating expenses.",
    "query": "SELECT Income_Statement.Oper_Exp , Cash_Flow_Statement.Cash_Pay_Taxes FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Oper_Exp DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have deferred tax assets equal to 16367490000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Def_IT_Assets = 16367490000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have distinct values in the column Cust_Loans_Net_Inc?",
    "query": "SELECT count(DISTINCT Cash_Flow_Statement.Cust_Loans_Net_Inc) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the financial expenses value that appears more than 12 times.",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Fin_Expenses FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.CF_Stmt_Fin_Expenses HAVING COUNT (*) > 12"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the total number of records in the Balance_Sheet table?",
    "query": "SELECT count(*) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the least frequent value of deposit absorption in our data?",
    "query": "SELECT Balance_Sheet.Acc_Deposits FROM Balance_Sheet GROUP BY Balance_Sheet.Acc_Deposits ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the count of records for each assets impairment loss value, sorted in ascending order of count?",
    "query": "SELECT Income_Statement.Assets_Imp_Loss , COUNT (*) FROM Income_Statement GROUP BY Income_Statement.Assets_Imp_Loss ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three securities have the highest net increase in cash and cash equivalents according to the indirect method?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.IM_NCF_Cash_Eq DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top two stocks with the highest other business costs.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oth_Biz_Costs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an investment absorption greater than 25642143174 for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Absorb_Investment > 25642143174 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the owner's equity attributable to the parent company for all records where the capital reserve is null.",
    "query": "SELECT Balance_Sheet.Own_Eq_Attr_Parent FROM Balance_Sheet WHERE Balance_Sheet.Cap_Reserves IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of the top three records with the highest cash paid for taxes.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Taxes DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "get me the non-operating expenses of records with net increase in cash and cash equivalents between -88278000000.0 and 66167000000.0.",
    "query": "SELECT Income_Statement.Non_Op_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.IM_NCF_Cash_Eq BETWEEN -88278000000.0 AND 66167000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or have comprehensive income attributable to shareholders of the parent company equal to 25343000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Income_Statement.Attr_Parent_Shareholders_Compre_Inc = 25343000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different interest payable values are there for each stock name?",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Balance_Sheet.Int_Pay) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the number of records and the name of each stock that has diluted earnings per share above 32452670465.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Diluted_EPS > 32452670465.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have cash payments related to operating activities not equal to 10878000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Op_Other != 10878000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have net increase in cash and cash equivalents greater than 22704805000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.IM_NCF_Cash_Eq > 22704805000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the fee and commission income of records whose other cash payments related to operating activities lie between 19680000000.0 and 19680000000.0.",
    "query": "SELECT Income_Statement.Fee_Com_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Op_Other BETWEEN 19680000000.0 AND 19680000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Mingsheng Bank or have a net interest income of 27177219000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Income_Statement.Net_Int_Inc = 27177219000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of all records that have loans and advances not equal to 4322267000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Loans_Adv != 4322267000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent assets impairment loss values, sorted by their frequency in ascending order?",
    "query": "SELECT Income_Statement.Assets_Imp_Loss FROM Income_Statement GROUP BY Income_Statement.Assets_Imp_Loss ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities code have 10 or more records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) >= 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of stocks that have more than 8 records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) > 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum non-operating revenue for each record.",
    "query": "SELECT avg(Income_Statement.Non_Op_Rev), max(Income_Statement.Non_Op_Rev) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the operating cash flow outflow subtotal that has at least 4 records with dividend and profit distribution larger than 2122903000.0.",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Out_Sub FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Distribute_Dividends_Profits > 2122903000.0 GROUP BY Cash_Flow_Statement.Op_CF_Out_Sub HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock codes do not have an investment income of 8976000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Inv_Inc != 8976000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the taxes paid in cash, where the total dividends and profits paid by subsidiaries to minority shareholders are greater than 10.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Taxes FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Taxes HAVING sum(Cash_Flow_Statement.Subsidiary_Pay_Minority) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the FX rate change cash and fixed asset scrap loss for records whose FX rate change cash is less than 1646000000.0",
    "query": "SELECT Cash_Flow_Statement.FX_Rate_Change_Cash , Cash_Flow_Statement.Fixed_Asset_Scrap_Loss FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.FX_Rate_Change_Cash < 1646000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the records whose securities code contains the substring '600016.SH'.",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600016.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the average and maximum values of cash received from subsidiaries absorbing minority shareholder investments in each record.",
    "query": "SELECT avg(Cash_Flow_Statement.Subsidiary_Absorb_Minority), max(Cash_Flow_Statement.Subsidiary_Absorb_Minority) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the deferred income tax liabilities of all records with missing values in other cash related to operating activities.",
    "query": "SELECT Cash_Flow_Statement.DIT_Liability_Increase FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Oth_Oper_Activities IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks whose non operating expenses are not equal to 37000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Non_Op_Exp != 37000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Bank of Jiangsu or have a borrowing from the central bank of 137465000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Balance_Sheet.Bor_CB = 137465000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of stocks where the net profit attributable to the owner of the parent company is 75752000000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Net_Profit <= 75752000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the bonds payable value from Balance_Sheet, sorted in descending order based on general risk preparation.",
    "query": "SELECT Balance_Sheet.Bonds_PAY FROM Balance_Sheet ORDER BY Balance_Sheet.Gen_Risk_Res DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest value of 'other' in cash flow statement and income statement.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Other DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the two securities with the highest income tax expenses.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Income_Tax_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out how many records do we have for each stock code, where their net interest income is greater than 34151000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Net_Int_Inc > 34151000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information available in the basic info table.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the asset impairment provision value for each record where total comprehensive income is not available.",
    "query": "SELECT Cash_Flow_Statement.Asset_Impairment_Dec FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Tot_Compre_Inc IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the subtotal of cash outflows from operating activities and the total net interest income for each of them.",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Out_Sub , SUM (Income_Statement.Net_Int_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Op_CF_Out_Sub"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the number of records and different lending funds we have for each company name.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Balance_Sheet.Lending_Funds) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum values of derivative financial assets for all records.",
    "query": "SELECT avg(Balance_Sheet.Deriv_Assets), max(Balance_Sheet.Deriv_Assets) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all exchange gains with at least four records that have net income from handling fees and commissions above 10836000000.0.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc FROM Income_Statement WHERE Income_Statement.Fee_Com_Net_Inc > 10836000000.0 GROUP BY Income_Statement.Exch_Gain_Inc HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks in descending order where the other business costs is less than or equal to 2985000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Costs <= 2985000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the stock names whose cash paid for the purchase and construction of fixed assets, intangible assets, and other long-term assets is no more than 3392000000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Assets <= 3392000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the securities codes that have net profit attributable to the owner of the parent company less than or equal to 75752000000.0, sorted in descending order?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Net_Profit <= 75752000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the average closing balance of cash equivalents for each value of exchange gains.",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_Eq_End_Period) , Income_Statement.Exch_Gain_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Exch_Gain_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the non-operating expenses of records with basic earnings per share ranging from 1.09 to 0.46.",
    "query": "SELECT Income_Statement.Non_Op_Exp FROM Income_Statement WHERE Income_Statement.Basic_EPS BETWEEN 1.09 AND 0.46"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records does each company have that has a total liabilities and owner's equity value greater than 7641451000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab_Own_Eq > 7641451000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or have an interest income of exactly 187334000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Income_Statement.Int_Inc = 187334000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest net increase in deposits with central bank and interbank funds.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.CenBank_Interbank_Net_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all non-operating revenue and other cash payments related to operating activities for the records whose non-operating revenue is less than 26000000.0.",
    "query": "SELECT Income_Statement.Non_Op_Rev , Cash_Flow_Statement.Cash_Pay_Op_Other FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Non_Op_Rev < 26000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please tell me the names of the top three stocks with the highest closing balance of cash and cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Eq_End_Period DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the distinct securities codes from the records.",
    "query": "SELECT distinct(Basic_Info.Stk_Code) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks that have at least 12 records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) >= 12"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with a stock code of 600000.SH or an investment in real estate of 2962032135.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Balance_Sheet.Inv_Real_Estate = 2962032135.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which total comprehensive income values have at least 9 records?",
    "query": "SELECT Income_Statement.Tot_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Tot_Compre_Inc HAVING COUNT (*) >= 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the derivative financial assets in descending order of payable employee compensation.",
    "query": "SELECT Balance_Sheet.Deriv_Assets FROM Balance_Sheet ORDER BY Balance_Sheet.Emp_Comp_PAY DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the investment income from associates and joint ventures for records where there is no cash received from absorbing investments.",
    "query": "SELECT Income_Statement.Inv_Inc_Assoc_JV FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Absorb_Investment IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the names of the top three securities with the largest derivative financial assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Deriv_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash paid for the purchase and construction of fixed assets, intangible assets, and other long-term assets, sorted by the subtotal of cash inflows from financing activities in descending order.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Assets FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Fin_CF_In_Sub DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top three stocks with the highest other comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Oth_Compre_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the cash received from other investment activities for records with total comprehensive income between 78238000000.0 and 26693000000.0.",
    "query": "SELECT Cash_Flow_Statement.Recv_Other_Invest FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Tot_Compre_Inc BETWEEN 78238000000.0 AND 26693000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list out the stock names where the increase in operating payables is less than or equal to 470726000000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Oper_Payables_Increase <= 470726000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks whose operating revenue is less than or equal to 47642000000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oper_Rev <= 47642000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the opening balances of cash equivalents that have a total closing balance greater than 10.",
    "query": "SELECT Cash_Flow_Statement.Cash_Eq_Begin_Period FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Eq_Begin_Period HAVING sum(Cash_Flow_Statement.Final_Cash_Equiv) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the highest income from changes in fair value.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.FV_Change_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the investment losses and the total cash received from subsidiaries absorbing minority shareholder investments for each value of investment losses.",
    "query": "SELECT Cash_Flow_Statement.Investment_Loss , SUM (Cash_Flow_Statement.Subsidiary_Absorb_Minority) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Investment_Loss"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, show me the stock name, the number of different other comprehensive income values, and the total number of records for that stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Income_Statement.Oth_Compre_Inc) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the two securities with the highest fee and commission income.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net cash flow generated from investment activities that appeared more than twice.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Inv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Inv HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of stocks which have different cash outflows from investment activities than 335731000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inv_CF_Out_Sub != 335731000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the net profit attributable to the owner of the parent company in the records.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the surplus reserves whose total deferred tax liabilities are greater than 10.",
    "query": "SELECT Balance_Sheet.Sur_Reserves FROM Balance_Sheet GROUP BY Balance_Sheet.Sur_Reserves HAVING sum(Balance_Sheet.Def_IT_Liab) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest dividend distributions and profits.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Distribute_Dividends_Profits DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent operating expenses, sorted by their frequency in ascending order?",
    "query": "SELECT Income_Statement.Oper_Exp FROM Income_Statement GROUP BY Income_Statement.Oper_Exp ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities codes of records that have fixed assets equal to or less than 42004000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Fix_Assets <= 42004000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities have 6 or more records in our database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) >= 6"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the financial cash inflows subtotal and total comprehensive income for records whose financial cash inflows subtotal is greater than 100645000000.0.",
    "query": "SELECT Cash_Flow_Statement.Fin_CF_In_Sub , Income_Statement.Tot_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fin_CF_In_Sub > 100645000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code of records that have a different net income from handling fees and commissions than 2722306000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Net_Inc != 2722306000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of interest payable for the records that appear exactly 11 times?",
    "query": "SELECT Balance_Sheet.Int_Pay FROM Balance_Sheet GROUP BY Balance_Sheet.Int_Pay HAVING COUNT (*) = 11"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the name of stocks whose deposits from interbank and other financial institutions is less than or equal to 783188000000.0, in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.IB_Dep_Oth_FIs <= 783188000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have long term equity investments value that is not equal to 46083375627.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.LT_Eq_Invest != 46083375627.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average depreciation of fixed assets, the minimum net cash flow from investment activities, and the minimum value of other cash payments related to all records?",
    "query": "SELECT AVG (Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec) , MIN (Cash_Flow_Statement.Net_CF_Inv), MIN (Cash_Flow_Statement.Other) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the name of the stock that appears the most frequently?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please provide me the stock names and the income from changes in fair value for each record.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.FV_Change_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of top three companies that have the largest loss on disposal of fixed assets, intangible assets, and other long-term assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there for stock 600919.SH or for which the value of other liabilities is 21950000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Balance_Sheet.Oth_Liab = 21950000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have exchange gains income more than -106000000.0 and net increase in customer deposits and interbank deposits more than 185841000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Exch_Gain_Inc > -106000000.0 AND Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits > 185841000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest interest payable.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Int_Pay DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the three securities with the highest amount of cash paid for distributing dividends, profits, or paying interest.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Distribute_Dividends_Profits DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the security codes of all records whose other liabilities value is not equal to 165644000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Oth_Liab != 165644000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the name of stocks and their trading financial liabilities, sorted by borrowing from the Central Bank in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Trad_Fin_Liab FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Bor_CB DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average general risk preparation for each treasury stock value.",
    "query": "SELECT avg(Balance_Sheet.Gen_Risk_Res) , Balance_Sheet.Treas_Stock FROM Balance_Sheet GROUP BY Balance_Sheet.Treas_Stock"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or have operating expenses equal to 46748000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Income_Statement.Oper_Exp = 46748000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the increase in deferred income tax liabilities for records that have at least 9 occurrences.",
    "query": "SELECT Cash_Flow_Statement.DIT_Liability_Increase FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.DIT_Liability_Increase HAVING COUNT (*) >= 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code of the stocks that have at least 9 records in the database.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) >= 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the values of financial assets sold for repurchase and total owner's equity for records with fixed assets either above 43055000000.0 or below 43055000000.0.",
    "query": "SELECT Balance_Sheet.Sell_Rep_FAs , Balance_Sheet.Tot_Own_Eq FROM Balance_Sheet WHERE Balance_Sheet.Fix_Assets > 43055000000.0 OR Balance_Sheet.Fix_Assets < 43055000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the interest expenses for records whose total dividends and profits paid by subsidiaries to minority shareholders exceed 10.",
    "query": "SELECT Income_Statement.Int_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Int_Exp HAVING sum(Cash_Flow_Statement.Subsidiary_Pay_Minority) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have with handling fees and commission expenses over 3558000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Exp > 3558000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks that have investment losses different from -4910000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Investment_Loss != -4910000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of absorbing investment with the highest frequency in our records?",
    "query": "SELECT Cash_Flow_Statement.Absorb_Investment FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Absorb_Investment ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have trading financial liabilities greater than 8618476149.0 and deposit absorption greater than 8098272000000.0?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Trad_Fin_Liab > 8618476149.0 AND Balance_Sheet.Acc_Deposits > 8098272000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the two securities with the largest asset impairment loss values.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Assets_Imp_Loss DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three securities have the highest value of cash received from other financing activities?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Recv_Other_Fin DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the highest exchange gains in income statement.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Exch_Gain_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the depreciation of fixed assets, depletion of oil and gas assets, and depreciation of productive biological assets for records with null net increase in cash and cash equivalents.",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_CF_Cash_Equiv IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two securities with the highest non-operating revenue.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Non_Op_Rev DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the stock codes of the top two investments income from associates and joint ventures.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Inv_Inc_Assoc_JV DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top three companies with the highest cash outflows from operating activities?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Op_CF_Out_Sub DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there in balance sheet?",
    "query": "SELECT count(*) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have total liabilities greater than 7014760000000.0 for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab > 7014760000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the stock names in our data where the taxes and fees payable is 17577000000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tax_Pay <= 17577000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top two securities in terms of cash and deposits with central bank.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Cash_CB DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the names of the top three securities with the highest value of financial assets sold for repurchase.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Sell_Rep_FAs DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fee and commission net income and net interest income for records with fee and commission net income less than 2722306000.0.",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc , Income_Statement.Net_Int_Inc FROM Income_Statement WHERE Income_Statement.Fee_Com_Net_Inc < 2722306000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the net cash flow generated from investment activities of the records that have exactly 9 occurrences?",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Inv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Inv HAVING COUNT (*) = 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please provide me with the names of two securities that have the highest opening balance of cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Initial_Cash_Equiv DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fee and commission income, and the increase in operating payables for records with fee and commission income less than 3157221000.0.",
    "query": "SELECT Income_Statement.Fee_Com_Inc , Cash_Flow_Statement.Oper_Payables_Increase FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Inc < 3157221000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code of all records with absorb investment less than or equal to 19646535200, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Absorb_Investment <= 19646535200 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the distinct values of non-operating expenses in our data.",
    "query": "SELECT distinct(Income_Statement.Non_Op_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the list of cash outflows from investment activities in the cash flow statement.",
    "query": "SELECT Cash_Flow_Statement.Inv_CF_Out_Sub FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the sum of basic earnings per share for each value of cash impact from exchange rate changes.",
    "query": "SELECT Cash_Flow_Statement.FX_Rate_Change_Cash , SUM (Income_Statement.Basic_EPS) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.FX_Rate_Change_Cash"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the average cash outflows from financing activities, the minimum cash paid for investment, and the minimum cash inflows from operating activities for all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Fin_CF_Out_Sub) , MIN (Cash_Flow_Statement.Cash_Pay_Invest), MIN (Cash_Flow_Statement.Op_CF_Sub) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock name of Bank of Jiangsu or an investment loss of exactly -4910000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Cash_Flow_Statement.Investment_Loss = -4910000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many different investment losses are associated with each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Cash_Flow_Statement.Investment_Loss) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average interest receivable for each lending fund value.",
    "query": "SELECT avg(Balance_Sheet.Int_Receiv) , Balance_Sheet.Lending_Funds FROM Balance_Sheet GROUP BY Balance_Sheet.Lending_Funds"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of the top two companies with the highest decrease in inventory.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inventory_Decrease DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the smallest value of other cash payment related to non-current assets disposal for each loss on disposal of non-current assets.",
    "query": "SELECT MIN (Cash_Flow_Statement.Other) , Income_Statement.Loss_Disposal_Nonc_Assets FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of other business income for records whose net cash flow generated from financing activities is between 36768000000.0 and -41417000000.0?",
    "query": "SELECT Income_Statement.Oth_Biz_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Fin BETWEEN 36768000000.0 AND -41417000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest net increase in borrowing funds from other financial institutions?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_Inc_IB_Borrowings DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the net profit attributable to the owner of the parent company and total profit values in the income statement.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit , Income_Statement.Tot_Profit FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or have convertible corporate bonds maturing within one year equal to 44478183762?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y = 44478183762"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities codes have at least four records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the subsidiary pay to minority shareholders and cash paid to employees of the top 5 records with the highest subsidiary pay to minority shareholders value.",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Pay_Minority , Cash_Flow_Statement.Cash_Pay_Emp FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Subsidiary_Pay_Minority DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each net increase in borrowing funds from other financial institutions, find the smallest net profit attributable to the owner of the parent company.",
    "query": "SELECT MIN (Income_Statement.Attr_Parent_Net_Profit) , Cash_Flow_Statement.Net_Inc_IB_Borrowings FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Net_Inc_IB_Borrowings"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the debt converted to capital and net cash flow generated from financing activities of those whose net income from handling fees and commissions is above or below 2722306000.0.",
    "query": "SELECT Cash_Flow_Statement.Debt_Converted_Capital , Cash_Flow_Statement.Net_CF_Fin FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Net_Inc > 2722306000.0 OR Income_Statement.Fee_Com_Net_Inc < 2722306000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the securities code and available-for-sale financial assets of all records.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Avail_Sale_FAs FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the number of distinct estimated liabilities, as well as the total count of records, for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Balance_Sheet.Est_Liab) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all details of the record with the highest operating expenses.",
    "query": "SELECT * FROM Income_Statement ORDER BY Income_Statement.Oper_Exp DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes that have more than 14 occurrences in the database.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) > 14"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the fee and commission income for each record that does not have a net profit value?",
    "query": "SELECT Income_Statement.Fee_Com_Inc FROM Income_Statement WHERE Income_Statement.Net_Profit IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the securities code and interest receivable of all records, sorted by tax payable in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Int_Receiv FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tax_Pay DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has a net increase in borrowings from the central bank value not equal to 8252626000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_Borrowings_CB != 8252626000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the interest payable values that appear more than 5 times.",
    "query": "SELECT Balance_Sheet.Int_Pay FROM Balance_Sheet GROUP BY Balance_Sheet.Int_Pay HAVING COUNT (*) > 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest closing balance of cash equivalents?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Eq_End_Period DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest handling fees and commission expenses.",
    "query": "SELECT * FROM Income_Statement ORDER BY Income_Statement.Fee_Com_Exp DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each company have cash paid for interest, handling fees, and commissions greater than 26806028000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Int_Fees_Com > 26806028000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "fetch the closing balance of cash equivalents in descending order of cash paid for debt repayment.",
    "query": "SELECT Cash_Flow_Statement.Final_Cash_Equiv FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Repay_Debt DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all trading financial assets whose total liabilities and owner's equity is larger than 10.",
    "query": "SELECT Balance_Sheet.Trad_FAs FROM Balance_Sheet GROUP BY Balance_Sheet.Trad_FAs HAVING sum(Balance_Sheet.Tot_Liab_Own_Eq) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest expenses at handling fees and commission?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display absorb investment and the number of distinct operating revenues for each absorb investment value.",
    "query": "SELECT Cash_Flow_Statement.Absorb_Investment , COUNT (DISTINCT Income_Statement.Oper_Rev) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Absorb_Investment"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock name, non-operating expenses, and income tax expenses of all the records.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Non_Op_Exp , Income_Statement.Income_Tax_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the derivative financial liabilities values that appear more than once.",
    "query": "SELECT Balance_Sheet.Deriv_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Deriv_Liab HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top three companies with the highest paid-in capital.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Paid_Up_Cap DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net interest income and loss on disposal of non current assets values, where investment income from associates and joint ventures is either greater than 43028778631.0 or smaller than 23860991409.0.",
    "query": "SELECT Income_Statement.Net_Int_Inc , Income_Statement.Loss_Disposal_Nonc_Assets FROM Income_Statement WHERE Income_Statement.Inv_Inc_Assoc_JV > 43028778631.0 OR Income_Statement.Inv_Inc_Assoc_JV < 23860991409.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the minimum value of total owner's equity for each fixed asset value.",
    "query": "SELECT MIN (Balance_Sheet.Tot_Own_Eq) , Balance_Sheet.Fix_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Fix_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks that have a different value for minority interest than 251000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Inc_Loss != 251000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the securities codes of the top two records with the highest lending funds.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Lending_Funds DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest estimated liabilities?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Est_Liab DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of records for each stock code that has non-operating revenue above 6261000.0, and list them.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Non_Op_Rev > 6261000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the investment income and total comprehensive income for records with asset impairment provision greater than 49000000.0 or less than 3918000000.0.",
    "query": "SELECT Income_Statement.Inv_Inc , Income_Statement.Tot_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Asset_Impairment_Dec > 49000000.0 OR Cash_Flow_Statement.Asset_Impairment_Dec < 3918000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of stocks whose cash received for interest, handling fees, and commissions is 118670000000.0 or less, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Int_Commission_Collected <= 118670000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve other business costs for records that do not have a value for fee and commission income.",
    "query": "SELECT Income_Statement.Oth_Biz_Costs FROM Income_Statement WHERE Income_Statement.Fee_Com_Inc IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details about the record with the highest value of other cash payments related to financing activities.",
    "query": "SELECT * FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cash_Pay_Fin_Other DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have undistributed profits less than 1980?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Undist_Profits < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an interest income exceeding 187334000000.0 and an assets impairment loss exceeding 13527799084.0?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Int_Inc > 187334000000.0 AND Income_Statement.Assets_Imp_Loss > 13527799084.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which hold-to-maturity investment value has the highest number of records associated with it?",
    "query": "SELECT Balance_Sheet.Held_Mat_Invest FROM Balance_Sheet GROUP BY Balance_Sheet.Held_Mat_Invest ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a stock code of 600000.SH or a diluted earnings per share of 2.93?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Income_Statement.Diluted_EPS = 2.93"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the total comprehensive income attributable to shareholders of the parent company and the received other cash related to financing activities for records whose other comprehensive income is either greater than 2258000000.0 or less than 2721000000.0.",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc , Cash_Flow_Statement.Recv_Other_Fin FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oth_Compre_Inc > 2258000000.0 OR Income_Statement.Oth_Compre_Inc < 2721000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock name has the highest frequency of occurrence in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a stock code of 600015.SH or a noble metal value of 834000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Balance_Sheet.Prec_Metals = 834000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest cash payments related to operating activities?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Op_Other DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the total liabilities and owner's equity and surplus reserves of records whose borrowing funds from other financial institutions is above 147014529000.0 or below 250981000000.0.",
    "query": "SELECT Balance_Sheet.Tot_Liab_Own_Eq , Balance_Sheet.Sur_Reserves FROM Balance_Sheet WHERE Balance_Sheet.Bor_Funds_Oth_FIs > 147014529000.0 OR Balance_Sheet.Bor_Funds_Oth_FIs < 250981000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each value of other business costs, show the value itself, the number of records that have repay debt, and the total number of records that have that value of other business costs.",
    "query": "SELECT Income_Statement.Oth_Biz_Costs , count(DISTINCT Cash_Flow_Statement.Repay_Debt) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Oth_Biz_Costs"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three companies in terms of translation difference of foreign currency statements.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Exch_Diff_Cash DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest total profit?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Tot_Profit DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose total comprehensive income attributable to minority shareholders is less than or equal to 251000000.0, in descending order of their names.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc <= 251000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the eight least frequent securities codes, sorted by their frequency in ascending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have the stock code containing '600919.SH'?",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600919.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have a translation difference of foreign currency statements greater than 8090552536?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Exch_Diff_Cash > 8090552536 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of two stocks with the highest fixed assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Fix_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the smallest cash payment for other investment activities in each subtotal of cash inflows from operating activities?",
    "query": "SELECT MIN (Cash_Flow_Statement.Cash_Pay_Inv_Other) , Cash_Flow_Statement.Op_CF_Sub FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Op_CF_Sub"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average increase in deferred income tax liabilities, the minimum value of fixed assets acquired through financing lease, and the minimum value of cash paid for interest, handling fees, and commissions across all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.DIT_Liability_Increase) , MIN (Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets), MIN (Cash_Flow_Statement.Cash_Pay_Int_Fees_Com) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities codes of records whose other business costs are not equal to 539000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Costs != 539000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the largest noble metal values.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Prec_Metals DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock code have received other cash related to financing activities more than 2283732796.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Recv_Other_Fin > 2283732796.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average cash received for interest, handling fees, and commissions for each expense on handling fees and commission?",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_Int_Commission_Collected) , Income_Statement.Fee_Com_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Fee_Com_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of stocks that have a total profit value different from 26567000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Profit != 26567000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the top 5 most frequently occurring stock names in our records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum cash paid for the purchase and construction of fixed assets, intangible assets, and other long-term assets for each record.",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_Pay_Assets), max(Cash_Flow_Statement.Cash_Pay_Assets) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the total owner's equity values that appear more than once along with their frequencies.",
    "query": "SELECT Balance_Sheet.Tot_Own_Eq FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Own_Eq HAVING COUNT (*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks and their corresponding total liabilities.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Tot_Liab FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest dividends and profits paid by subsidiaries to minority shareholders?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Subsidiary_Pay_Minority DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of records that have interest income different from 133080000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Int_Inc != 133080000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all subtotal of cash inflows from operating activities, whose total indirect method net cash flow generated from operating activities surpasses 10.",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Sub FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Op_CF_Sub HAVING sum(Cash_Flow_Statement.IM_NCF_Oper_Activities) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the details available in the cash flow statement records.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the different accounts receivable investment values and the count of records for each value.",
    "query": "SELECT Balance_Sheet.Recv_Invest , COUNT(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Recv_Invest"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the surplus reserves and their corresponding frequency of appearance.",
    "query": "SELECT Balance_Sheet.Sur_Reserves , count(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Sur_Reserves"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the investment income of each record, and the total interest expenses for each.",
    "query": "SELECT Cash_Flow_Statement.Investment_Income , SUM (Income_Statement.Int_Exp) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Investment_Income"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the top three companies with the highest investment income from associates and joint ventures.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Inv_Inc_Assoc_JV DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock code and net profit attributable to the owner of the parent company, sorted by comprehensive income attributable to shareholders of the parent company in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Attr_Parent_Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the three securities with the most net increase in customer loans and advances.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cust_Loans_Net_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the number of records and the stock names, where the net increase in customer loans and advances is greater than 265774000000.0 for each stock.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cust_Loans_Net_Inc > 265774000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock codes have other business costs not equal to 2985000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Costs != 2985000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which five securities have the highest frequency of occurrence in the data?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest and lowest net increase in borrowings from the central bank among all records?",
    "query": "SELECT MAX (Cash_Flow_Statement.Net_Inc_Borrowings_CB) , MIN (Cash_Flow_Statement.Net_Inc_Borrowings_CB) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the net interest income of the records that appear more than 6 times?",
    "query": "SELECT Income_Statement.Net_Int_Inc FROM Income_Statement GROUP BY Income_Statement.Net_Int_Inc HAVING COUNT (*) > 6"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fee and commission net income of each record, sorted in descending order by cash paid for assets.",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Assets DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum cash inflows from investment activities for all records in the cash flow statement.",
    "query": "SELECT avg(Cash_Flow_Statement.Inv_CF_In_Sub), max(Cash_Flow_Statement.Inv_CF_In_Sub) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of stocks whose comprehensive income attributable to minority shareholders is not equal to 391000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc != 391000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the two companies with the highest investment losses.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Investment_Loss DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the values of \"other\" in cash flow statement that appear less than 5 times.",
    "query": "SELECT Cash_Flow_Statement.Other FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Other HAVING COUNT (*) < 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock codes of records that have a different value for cash received from subsidiaries absorbing minority shareholder investments than 38947858895.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Subsidiary_Absorb_Minority != 38947858895"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the values of minority interest shareholders' comprehensive income and increase in deferred income tax liabilities for the top five records with the highest value of minority interest shareholders' comprehensive income.",
    "query": "SELECT Income_Statement.Minor_Int_Shareholders_Compre_Inc , Cash_Flow_Statement.DIT_Liability_Increase FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code of records whose undistributed profits value is not equal to 69967463000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Undist_Profits != 69967463000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all records that have '600016.SH' as a substring in their securities code.",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600016.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average cash received from subsidiaries absorbing minority shareholder investments for each non-operating income value.",
    "query": "SELECT avg(Cash_Flow_Statement.Subsidiary_Absorb_Minority) , Income_Statement.Non_Op_Rev FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Non_Op_Rev"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the information available in balance sheet records.",
    "query": "SELECT * FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there for each cash received for interest, handling fees, and commissions value?",
    "query": "SELECT Cash_Flow_Statement.Cash_Int_Commission_Collected , COUNT (*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Int_Commission_Collected ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information in the income statement where the total profit is negative.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Tot_Profit < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have lending funds exceeding 316000000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Lending_Funds > 316000000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the information of records with negative net cash flow generated from operating activities.",
    "query": "SELECT * FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.IM_NCF_Oper_Activities < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "could you please provide me with the stock code and non-operating revenue of records, sorted by their total profit in descending order?",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Non_Op_Rev FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Tot_Profit DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the investment real estate values that have at least five records.",
    "query": "SELECT Balance_Sheet.Inv_Real_Estate FROM Balance_Sheet GROUP BY Balance_Sheet.Inv_Real_Estate HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the number of records for each stock code along with the stock code itself.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the stock name, the number of different trading financial liabilities, and the total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Balance_Sheet.Trad_Fin_Liab) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provides me with all the stock names and the corresponding debt repayment values.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Repay_Debt FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values of net income from handling fees and commissions are there in our records?",
    "query": "SELECT count(DISTINCT Income_Statement.Fee_Com_Net_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, give me the code itself, the count of distinct net profit values, and the total count of records for that stock.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Income_Statement.Net_Profit) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which company has the highest number of records in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the total liabilities of records where the value of held-to-maturity investments is null.",
    "query": "SELECT Balance_Sheet.Tot_Liab FROM Balance_Sheet WHERE Balance_Sheet.Held_Mat_Invest IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average net profit attributable to the owner of the parent company, the minimum non-operating expenses, and the minimum handling fees and commission expenses for all records.",
    "query": "SELECT AVG (Income_Statement.Attr_Parent_Net_Profit) , MIN (Income_Statement.Non_Op_Exp), MIN (Income_Statement.Fee_Com_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent values of loss on disposal of non-current assets, sorted by their frequency in ascending order?",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets FROM Income_Statement GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the eight least frequent interest income values, sorted by their frequency in ascending order.",
    "query": "SELECT Income_Statement.Int_Inc FROM Income_Statement GROUP BY Income_Statement.Int_Inc ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600919.SH or trading financial assets equal to 740222000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Balance_Sheet.Trad_FAs = 740222000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code and paid-in capital of all records, sorted by fixed assets in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Paid_Up_Cap FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Fix_Assets DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock codes of the top two records with the highest net interest income.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Net_Int_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks and their corresponding intangible assets.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Intang_Assets FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the loans and advances values of records whose undistributed profits are between 268624000000.0 and 199479000000.0.",
    "query": "SELECT Balance_Sheet.Loans_Adv FROM Balance_Sheet WHERE Balance_Sheet.Undist_Profits BETWEEN 268624000000.0 AND 199479000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all values of cash received for interest, handling fees, and commissions from cash flow statement records.",
    "query": "SELECT Cash_Flow_Statement.Cash_Int_Commission_Collected FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the treasury stock value for those whose other assets sum up to more than 10, grouped by treasury stock.",
    "query": "SELECT Balance_Sheet.Treas_Stock FROM Balance_Sheet GROUP BY Balance_Sheet.Treas_Stock HAVING sum(Balance_Sheet.Oth_Assets) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum opening balance of cash for all records.",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_Begin_Period), max(Cash_Flow_Statement.Cash_Begin_Period) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return all columns in basic info table.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the income tax expenses values that appear more than twice in our data.",
    "query": "SELECT Income_Statement.Income_Tax_Exp FROM Income_Statement GROUP BY Income_Statement.Income_Tax_Exp HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the securities codes that have at least 13 occurrences.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) >= 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities codes of records that have a different net increase in deposits with central bank and interbank funds from 49220712331.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CenBank_Interbank_Net_Inc != 49220712331.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two securities codes with the highest interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.IB_Deposits DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the same value of payable employee compensation as 28532000000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Emp_Comp_PAY = 28532000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average deposit absorption of each investment real estate value.",
    "query": "SELECT avg(Balance_Sheet.Acc_Deposits) , Balance_Sheet.Inv_Real_Estate FROM Balance_Sheet GROUP BY Balance_Sheet.Inv_Real_Estate"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a net interest income of 60428000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Net_Int_Inc = 60428000000.0 OR Income_Statement.Net_Int_Inc = 60428000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the stock codes of the two records with the highest total comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock names and minority shareholders' equity, sorted by hold-to-maturity investment in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Minor_Int_Eq FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Held_Mat_Invest DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each company name, give me all records that have business and management fees above 21136000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Gen_n_Admin_Exps > 21136000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the number of records and name of stocks, for each stock that has issued bonds exceeding 364317625000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Issue_Bonds > 364317625000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the deposit absorption values of records whose long-term equity investment falls between 2795000000.0 and 26296000000.0.",
    "query": "SELECT Balance_Sheet.Acc_Deposits FROM Balance_Sheet WHERE Balance_Sheet.LT_Eq_Invest BETWEEN 2795000000.0 AND 26296000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest opening balance of cash?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Begin_Period DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a borrowing from the Central Bank equal to 158182000000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Bor_CB = 158182000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the most trading financial liabilities?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Trad_Fin_Liab DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the total assets value of the record that has the highest frequency in our data?",
    "query": "SELECT Balance_Sheet.Tot_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Assets ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the investment income from associates and joint ventures for all records that have a null value in financial expenses of the cash flow statement.",
    "query": "SELECT Income_Statement.Inv_Inc_Assoc_JV FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Fin_Expenses IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either Stk_Code 600015.SH or operating revenue of 38842871000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Income_Statement.Oper_Rev = 38842871000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each interest expense value, show the value itself, the number of income tax expense values, and the total number of records with that interest expense value.",
    "query": "SELECT Income_Statement.Int_Exp , count(DISTINCT Income_Statement.Income_Tax_Exp) , count(*) FROM Income_Statement GROUP BY Income_Statement.Int_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of the two stocks with the highest decrease in inventory.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inventory_Decrease DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock code whose long term equity investment exceeds 26296000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.LT_Eq_Invest > 26296000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose intangible assets are 5739000000.0 or less, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Intang_Assets <= 5739000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the securities code for all records with a decrease in inventory less than or equal to 32207893333, sorted in descending alphabetical order of securities code.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inventory_Decrease <= 32207893333 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the employee compensation payable and total owner's equity of records whose cash and deposits with central bank are either above 411019000000.0 or below 590855000000.0.",
    "query": "SELECT Balance_Sheet.Emp_Comp_PAY , Balance_Sheet.Tot_Own_Eq FROM Balance_Sheet WHERE Balance_Sheet.Cash_CB > 411019000000.0 OR Balance_Sheet.Cash_CB < 590855000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the different values of cash received from investment recovery and the count of records for each value.",
    "query": "SELECT Cash_Flow_Statement.Recv_Investment , COUNT(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Recv_Investment"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there for China Mingsheng Bank?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"China Mingsheng Bank\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records exist for each stock code that has a cash and deposits with central bank value above 590855000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Cash_CB > 590855000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me operating revenue and net increase in cash and cash equivalents for records with operating revenue less than 71539000000.0.",
    "query": "SELECT Income_Statement.Oper_Rev , Cash_Flow_Statement.Net_CF_Cash_Equiv FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oper_Rev < 71539000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the fixed assets acquired through financing lease that appeared more than once.",
    "query": "SELECT Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the Stk_Name, the number of different employee compensation pay values, and the total number of records for each Stk_Name.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Balance_Sheet.Emp_Comp_PAY) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average value of other business income, the minimum value of cash paid to and on behalf of employees, and the minimum value of business and management fees across all records.",
    "query": "SELECT AVG (Income_Statement.Oth_Biz_Inc) , MIN (Cash_Flow_Statement.Cash_Pay_Emp), MIN (Income_Statement.Gen_n_Admin_Exps) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes of the top three records with the highest values of minority interest.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Minor_Int_Inc_Loss DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the descending order list of securities with interest income less than or equal to 150294000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Int_Inc <= 150294000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out how many records of each stock have diluted earnings per share above 0.7.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Diluted_EPS > 0.7 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, find out how many records have cash outflows from investment activities greater than 836740000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inv_CF_Out_Sub > 836740000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have '600000.SH' as a part of their securities code?",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600000.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent payable employee compensation values, sorted by their frequency in ascending order?",
    "query": "SELECT Balance_Sheet.Emp_Comp_PAY FROM Balance_Sheet GROUP BY Balance_Sheet.Emp_Comp_PAY ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the cash paid to and on behalf of employees and income tax expenses for the top 5 records with the highest income tax expenses.",
    "query": "SELECT Income_Statement.Income_Tax_Exp , Cash_Flow_Statement.Cash_Pay_Emp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Income_Tax_Exp DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the indirect method net cash flow generated from operating activities value that has the most number of records.",
    "query": "SELECT Cash_Flow_Statement.IM_NCF_Oper_Activities FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.IM_NCF_Oper_Activities ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information in income statement where interest expenses are less than zero.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Int_Exp < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest net interest income in our records?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Net_Int_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have treasury stock value greater than 14922247591 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Treas_Stock > 14922247591 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Mingsheng Bank or have a deposit absorption of exactly 1883587791000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Balance_Sheet.Acc_Deposits = 1883587791000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of top three stocks with the highest taxes and surcharges.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Tax_n_Surs DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all interest income values whose total increase in operating payables is greater than 10.",
    "query": "SELECT Income_Statement.Int_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Int_Inc HAVING sum(Cash_Flow_Statement.Oper_Payables_Increase) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes whose issuance of loans and advances are less than or equal to 4866904000000.0 in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Loans_Adv <= 4866904000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the values of net profit in cash flow statement.",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Net_Income FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of stocks that have different general risk preparation value from 48747000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Gen_Risk_Res != 48747000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest cash paid to and on behalf of employees?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Emp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the operating profit and increase in operating payables for those records whose cash received for interest, handling fees, and commissions is either greater than 142928000000.0 or less than 198669000000.0.",
    "query": "SELECT Income_Statement.Oper_Profit , Cash_Flow_Statement.Oper_Payables_Increase FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Int_Commission_Collected > 142928000000.0 OR Cash_Flow_Statement.Cash_Int_Commission_Collected < 198669000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of stocks that have more than one occurrence in the database.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "get me cash flow statement's financial expenses in descending order by taxes and surcharges.",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Fin_Expenses FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Tax_n_Surs DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the non-operating expenses value that appears the most frequently?",
    "query": "SELECT Income_Statement.Non_Op_Exp FROM Income_Statement GROUP BY Income_Statement.Non_Op_Exp ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600036.SH or an operating revenue of 71539000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Income_Statement.Oper_Rev = 71539000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of stocks whose net increase in cash and cash equivalents is not -88278000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.IM_NCF_Cash_Eq != -88278000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the information available on each record.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the net profit of records with exchange gains between 459000000.0 and -106000000.0.",
    "query": "SELECT Income_Statement.Net_Profit FROM Income_Statement WHERE Income_Statement.Exch_Gain_Inc BETWEEN 459000000.0 AND -106000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return intangible assets and lending funds for records where intangible assets exceed 548886000.0.",
    "query": "SELECT Balance_Sheet.Intang_Assets , Balance_Sheet.Lending_Funds FROM Balance_Sheet WHERE Balance_Sheet.Intang_Assets > 548886000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which instances of other comprehensive income and total comprehensive income have values larger than 1375220000.0 in the records?",
    "query": "SELECT Income_Statement.Oth_Compre_Inc , Income_Statement.Tot_Compre_Inc FROM Income_Statement WHERE Income_Statement.Oth_Compre_Inc > 1375220000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the long term equity investment and the total translation difference of foreign currency statements for each record.",
    "query": "SELECT Balance_Sheet.LT_Eq_Invest , SUM (Balance_Sheet.Exch_Diff_Cash) FROM Balance_Sheet GROUP BY Balance_Sheet.LT_Eq_Invest"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the details of records with negative other cash payments related to operating activities.",
    "query": "SELECT * FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Op_Other < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of stocks whose minority interest is 195000000.0 or below, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Inc_Loss <= 195000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which interest payable value has the highest frequency in our data?",
    "query": "SELECT Balance_Sheet.Int_Pay FROM Balance_Sheet GROUP BY Balance_Sheet.Int_Pay ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of financial assets sold for repurchase and interest payable for records with hold-to-maturity investments greater than 10549957517 or less than 40149388338.",
    "query": "SELECT Balance_Sheet.Sell_Rep_FAs , Balance_Sheet.Int_Pay FROM Balance_Sheet WHERE Balance_Sheet.Held_Mat_Invest > 10549957517 OR Balance_Sheet.Held_Mat_Invest < 40149388338"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have the securities code containing '600036.SH'?",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600036.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the operating profit, non-operating revenue, and net increase in deposits with central bank and interbank funds for all records.",
    "query": "SELECT Income_Statement.Oper_Profit , Income_Statement.Non_Op_Rev , Cash_Flow_Statement.CenBank_Interbank_Net_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of distinct reduction in operating receivables for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Cash_Flow_Statement.Oper_Receivables_Decrease) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have taxes and surcharges exceeding 1510000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tax_n_Surs > 1510000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or have a loss on disposal of fixed assets, intangible assets, and other long-term assets equal to -6000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec = -6000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the total derivative financial liabilities for each value of total liabilities and owner's equity in the balance sheet.",
    "query": "SELECT Balance_Sheet.Tot_Liab_Own_Eq , SUM (Balance_Sheet.Deriv_Liab) FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab_Own_Eq"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the reductions in operating receivables with at least four records having cash equivalents closing balance above 48502997113.0.",
    "query": "SELECT Cash_Flow_Statement.Oper_Receivables_Decrease FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Eq_End_Period > 48502997113.0 GROUP BY Cash_Flow_Statement.Oper_Receivables_Decrease HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average opening balance of cash equivalents, the minimum net profit in cash flow statement, and the minimum opening balance of cash equivalents across all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Cash_Eq_Begin_Period) , MIN (Cash_Flow_Statement.CF_Stmt_Net_Income), MIN (Cash_Flow_Statement.Initial_Cash_Equiv) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the maximum, minimum, and average non-operating expenses for all records.",
    "query": "SELECT MAX (Income_Statement.Non_Op_Exp) , MIN (Income_Statement.Non_Op_Exp), AVG (Income_Statement.Non_Op_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and the count of distinct non-operating revenue for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Non_Op_Rev) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the operating profit values that have at least four records with cash inflows from investment activities greater than 931722450000.0.",
    "query": "SELECT Income_Statement.Oper_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inv_CF_In_Sub > 931722450000.0 GROUP BY Income_Statement.Oper_Profit HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a total comprehensive income attributable to minority shareholders equal to 638728000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc = 638728000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the highest, lowest and average values of total profit across all records?",
    "query": "SELECT MAX (Income_Statement.Tot_Profit) , MIN (Income_Statement.Tot_Profit), AVG (Income_Statement.Tot_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the names of the top three stocks with the highest other cash payments related to operating activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Op_Other DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all interest income values that have more than 4 records with an opening balance of cash equivalents greater than 13928011023.0.",
    "query": "SELECT Income_Statement.Int_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Eq_Begin_Period > 13928011023.0 GROUP BY Income_Statement.Int_Inc HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average and maximum estimated liabilities for each record?",
    "query": "SELECT avg(Balance_Sheet.Est_Liab), max(Balance_Sheet.Est_Liab) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks that appear less than 5 times.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) < 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the name of the stock that has the highest number of records?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top three stocks with the highest income tax expenses.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Income_Tax_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks that contains the phrase 'China Merchants Bank'.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%China Merchants Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose total profit is less than or equal to 16410000000.0, in descending order of their names.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Profit <= 16410000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have operating profit exceeding 24791000000.0 and cash received from subsidiaries absorbing minority shareholder investments surpassing 33549263837?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oper_Profit > 24791000000.0 AND Cash_Flow_Statement.Subsidiary_Absorb_Minority > 33549263837"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the different values of loss on disposal of non current assets, along with the count of records for each value.",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets , COUNT(*) FROM Income_Statement GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the name of stocks that contain the phrase 'China Mingsheng Bank' in their names.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%China Mingsheng Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of all stocks whose cash received from investment recovery is not equal to 797720000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Recv_Investment != 797720000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the total comprehensive income of the record that has the lowest frequency of occurrence.",
    "query": "SELECT Income_Statement.Tot_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Tot_Compre_Inc ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock name of Huaxia Bank or a total comprehensive income attributable to minority shareholders of 391000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Income_Statement.Minor_Int_Shareholders_Compre_Inc = 391000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the other business costs of records, sorted by their net interest income in descending order.",
    "query": "SELECT Income_Statement.Oth_Biz_Costs FROM Income_Statement ORDER BY Income_Statement.Net_Int_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net increase in customer loans and advances along with the number of distinct fee and commission expenses for each net increase in customer loans and advances.",
    "query": "SELECT Cash_Flow_Statement.Cust_Loans_Net_Inc , COUNT (DISTINCT Income_Statement.Fee_Com_Exp) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cust_Loans_Net_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which compensation payable to employees value have 9 or more occurrences?",
    "query": "SELECT Balance_Sheet.Emp_Comp_PAY FROM Balance_Sheet GROUP BY Balance_Sheet.Emp_Comp_PAY HAVING COUNT (*) >= 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the security codes of the top three records with the highest operating expenses.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the value of minority interest and the total exchange gains in each record.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss , SUM (Income_Statement.Exch_Gain_Inc) FROM Income_Statement GROUP BY Income_Statement.Minor_Int_Inc_Loss"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the net cash flow generated from investment activities and the subtotal of cash inflows from investment activities for records with at least 5 interest expenses.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Inv , Cash_Flow_Statement.Inv_CF_In_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Int_Exp HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the maximum, minimum and average total assets across all records?",
    "query": "SELECT MAX (Balance_Sheet.Tot_Assets) , MIN (Balance_Sheet.Tot_Assets), AVG (Balance_Sheet.Tot_Assets) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the fee and commission expenses and the subtotal of cash inflows from financing activities of records whose loss on disposal of fixed assets, intangible assets, and other long-term assets are either above -1000000.0 or below 28000000.0.",
    "query": "SELECT Income_Statement.Fee_Com_Exp , Cash_Flow_Statement.Fin_CF_In_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec > -1000000.0 OR Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec < 28000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code and bonds payable of all records, sorted by deferred tax assets in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Bonds_PAY FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Def_IT_Assets DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the net increase in customer deposits and interbank deposits for records with investment income between 49199000000.0 and 20864000000.0.",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Investment_Income BETWEEN 49199000000.0 AND 20864000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of stocks whose undistributed profits are not equal to 115670000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Undist_Profits != 115670000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the minimum closing balance of cash equivalents for each diluted earnings per share value.",
    "query": "SELECT MIN (Cash_Flow_Statement.Final_Cash_Equiv) , Income_Statement.Diluted_EPS FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Diluted_EPS"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me three stock codes with the highest decrease in inventory.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inventory_Decrease DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the lowest business and management fees value for each other cash payments related to investment activities value?",
    "query": "SELECT MIN (Income_Statement.Gen_n_Admin_Exps) , Cash_Flow_Statement.Cash_Pay_Inv_Other FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cash_Pay_Inv_Other"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest diluted earnings per share?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Diluted_EPS DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the non-operating revenue value with the lowest frequency in our records?",
    "query": "SELECT Income_Statement.Non_Op_Rev FROM Income_Statement GROUP BY Income_Statement.Non_Op_Rev ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or have a net increase in cash and cash equivalents equal to 22704805000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Cash_Flow_Statement.IM_NCF_Cash_Eq = 22704805000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the minimum closing balance of cash for each operating expense.",
    "query": "SELECT MIN (Cash_Flow_Statement.Cash_End_Period) , Income_Statement.Oper_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Oper_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me all stock codes that contain the word '600016.SH'.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600016.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the cash received from absorbing investments where the operating expenses are more than 87581000000.0, and at least 4 records exist for each cash received value.",
    "query": "SELECT Cash_Flow_Statement.Absorb_Investment FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oper_Exp > 87581000000.0 GROUP BY Cash_Flow_Statement.Absorb_Investment HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have cash outflows from financing activities greater than 393612997000.0 and income from exchange gains greater than -3155000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fin_CF_Out_Sub > 393612997000.0 AND Income_Statement.Exch_Gain_Inc > -3155000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average convertible corporate bonds maturing within one year for each value of other business costs.",
    "query": "SELECT avg(Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y) , Income_Statement.Oth_Biz_Costs FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Oth_Biz_Costs"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks that appear exactly once in our data.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have income from changes in fair value equal to either 1814000000.0 or 4319000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.FV_Change_Inc = 1814000000.0 OR Income_Statement.FV_Change_Inc = 4319000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the number of records and distinct net increase in customer deposits and interbank deposits for each stock, along with their stock names.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the tax and surcharges value for records with non-operating revenue between 78000000.0 and 78000000.0.",
    "query": "SELECT Income_Statement.Tax_n_Surs FROM Income_Statement WHERE Income_Statement.Non_Op_Rev BETWEEN 78000000.0 AND 78000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the stock name, the count of income tax expenses, and the total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Income_Statement.Income_Tax_Exp) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have investment income from associates and joint ventures exceeding 138000000.0 and losses on disposal of non current assets exceeding 22986325737?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Inv_Inc_Assoc_JV > 138000000.0 AND Income_Statement.Loss_Disposal_Nonc_Assets > 22986325737"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of all records where the total profit is not equal to 16410000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Profit != 16410000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "2978 SLAVE: 178 =",
    "query": "SELECT Balance_Sheet.Deriv_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Deriv_Liab ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the inventory decrease and the subtotal of cash outflows from financing activities for the top 5 records with the highest inventory decrease value.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease , Cash_Flow_Statement.Fin_CF_Out_Sub FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Inventory_Decrease DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose subtotal of cash inflows from financing activities is less than or equal to 70000000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fin_CF_In_Sub <= 70000000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the minimum net increase in deposits with central bank and interbank funds for each net increase in customer loans and advances.",
    "query": "SELECT MIN (Cash_Flow_Statement.CenBank_Interbank_Net_Inc) , Cash_Flow_Statement.Cust_Loans_Net_Inc FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cust_Loans_Net_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes and received other cash related to financing activities for records with at least 5 net income according to cash flow statement.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Recv_Other_Fin FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.CF_Stmt_Net_Income HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest income tax expenses?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Income_Tax_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the stock codes that appear more than once in our data.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with a stock code of 600016.SH or an exchange gain income of 24366000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Income_Statement.Exch_Gain_Inc = 24366000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of top three companies with the highest subtotal of cash inflows from operating activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Op_CF_Sub DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three securities with the highest noble metal values.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Prec_Metals DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the stock names in the records where the operating revenue is less than or equal to 91230000000.0, sorted in descending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Rev <= 91230000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of asset impairment provision that appears more than twice?",
    "query": "SELECT Cash_Flow_Statement.Asset_Impairment_Dec FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Asset_Impairment_Dec HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the net increase in customer loans and advances from cash flow statements, sorted in descending order based on the loss from changes in fair value.",
    "query": "SELECT Cash_Flow_Statement.Cust_Loans_Net_Inc FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Fair_Value_Change_Loss DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of minority interest income(loss) and minority shareholders' comprehensive income for those records whose other comprehensive income is above 1039000000.0 or below 2721000000.0?",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss , Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Income_Statement WHERE Income_Statement.Oth_Compre_Inc > 1039000000.0 OR Income_Statement.Oth_Compre_Inc < 2721000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have net increase in cash and cash equivalents greater than 17849000000.0 and loss on disposal of non current assets higher than 22986325737?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Cash_Equiv > 17849000000.0 AND Income_Statement.Loss_Disposal_Nonc_Assets > 22986325737"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the smallest net cash received from disposal of fixed assets, intangible assets, and other long-term assets for each income from changes in fair value value.",
    "query": "SELECT MIN (Cash_Flow_Statement.Cash_Disposal_Assets) , Income_Statement.FV_Change_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.FV_Change_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the total profit values that appear less than 11 times.",
    "query": "SELECT Income_Statement.Tot_Profit FROM Income_Statement GROUP BY Income_Statement.Tot_Profit HAVING COUNT (*) < 11"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the long-term amortization and basic earnings per share for records with long-term amortization less than 476000000.0.",
    "query": "SELECT Cash_Flow_Statement.Longterm_Amortization , Income_Statement.Basic_EPS FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Longterm_Amortization < 476000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the other assets value for records that appear more than 14 times.",
    "query": "SELECT Balance_Sheet.Oth_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Oth_Assets HAVING COUNT (*) > 14"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for those whose net profit attributable to the owner of the parent company exceeds 10, tell me the values of other cash related to operating activities and group them by the value itself.",
    "query": "SELECT Cash_Flow_Statement.Other FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Other HAVING sum(Income_Statement.Attr_Parent_Net_Profit) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the operating revenue and cash received from subsidiaries absorbing minority shareholder investments for the top five records with the highest operating revenue.",
    "query": "SELECT Income_Statement.Oper_Rev , Cash_Flow_Statement.Subsidiary_Absorb_Minority FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Oper_Rev DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the total assets values whose corresponding total lending funds sum is over 10.",
    "query": "SELECT Balance_Sheet.Tot_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Assets HAVING sum(Balance_Sheet.Lending_Funds) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have handling fees and commission expenses exceeding 3558000000.0 and interest expenses greater than 78338000000.0?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Fee_Com_Exp > 3558000000.0 AND Income_Statement.Int_Exp > 78338000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a cash payment for other financing activities equal to either 1822000000.0 or 35243683155.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Fin_Other = 1822000000.0 OR Cash_Flow_Statement.Cash_Pay_Fin_Other = 35243683155.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the cash payments to employees that have at least 4 records with fixed assets acquired through financing lease larger than 33810400228?",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Emp FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets > 33810400228 GROUP BY Cash_Flow_Statement.Cash_Pay_Emp HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code that only appeared once.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the stock codes of records whose net cash flow generated from investment activities is not equal to -116907000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Inv != -116907000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to stock 600015.SH or have an interest income of exactly 187334000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Income_Statement.Int_Inc = 187334000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the treasury stock value of the record with the least frequency of treasury stock value.",
    "query": "SELECT Balance_Sheet.Treas_Stock FROM Balance_Sheet GROUP BY Balance_Sheet.Treas_Stock ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the comprehensive income attributable to shareholders of the parent company and the income tax expenses for records with comprehensive income less than 77430000000.0.",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc , Income_Statement.Income_Tax_Exp FROM Income_Statement WHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc < 77430000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all securities codes in the records table.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all opening balances of cash and their corresponding total loss on scrapping of fixed assets.",
    "query": "SELECT Cash_Flow_Statement.Cash_Begin_Period , SUM (Cash_Flow_Statement.Fixed_Asset_Scrap_Loss) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Begin_Period"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different available-for-sale financial assets values are there for each other liabilities value?",
    "query": "SELECT Balance_Sheet.Oth_Liab , COUNT (DISTINCT Balance_Sheet.Avail_Sale_FAs) FROM Balance_Sheet GROUP BY Balance_Sheet.Oth_Liab"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of the two stocks with the highest fee and commission income.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the operating revenue and interest income for records with operating revenue above 47642000000.0.",
    "query": "SELECT Income_Statement.Oper_Rev , Income_Statement.Int_Inc FROM Income_Statement WHERE Income_Statement.Oper_Rev > 47642000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the stock code of 600016.SH or the net increase in customer loans and advances value of 326411000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Cash_Flow_Statement.Cust_Loans_Net_Inc = 326411000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the smallest fixed asset depreciation amortization value for each basic earnings per share.",
    "query": "SELECT MIN (Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec) , Income_Statement.Basic_EPS FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Basic_EPS"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock code and the count of records for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of total liabilities and owner's equity in the record with the least occurrence?",
    "query": "SELECT Balance_Sheet.Tot_Liab_Own_Eq FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab_Own_Eq ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of top three stocks with the highest income tax expenses.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Income_Tax_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the non-operating income values that appear more than once.",
    "query": "SELECT Income_Statement.Non_Op_Rev FROM Income_Statement GROUP BY Income_Statement.Non_Op_Rev HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have other cash received related to operating activities greater than 3824000000.0 for each stock code?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Oth_Oper_Activities > 3824000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock whose other cash related to operating activities exceeds 3824000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Oth_Oper_Activities > 3824000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return all columns in the basic_info table of the database.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the financial outflow subtotal and the count of records with that subtotal, sorted by the count in ascending order.",
    "query": "SELECT Cash_Flow_Statement.Fin_CF_Out_Sub , COUNT (*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fin_CF_Out_Sub ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock codes whose loss on disposal of non current assets is less than or equal to 18147985194 in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Loss_Disposal_Nonc_Assets <= 18147985194 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information about records where the value of lending funds is negative.",
    "query": "SELECT * FROM Balance_Sheet WHERE Balance_Sheet.Lending_Funds < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an outflow of cash from investment activities with the value of 1071490000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Inv_CF_Out_Sub = 1071490000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three securities have the highest total liabilities and owner's equity?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tot_Liab_Own_Eq DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of loss on disposal of non current assets and other business income for records whose cash outflows from investment activities are either above 955356000000.0 or below 955356000000.0?",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets , Income_Statement.Oth_Biz_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inv_CF_Out_Sub > 955356000000.0 OR Cash_Flow_Statement.Inv_CF_Out_Sub < 955356000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the asset impairment provision and long-term amortization values for records with asset impairment provision less than 230000000.0.",
    "query": "SELECT Cash_Flow_Statement.Asset_Impairment_Dec , Cash_Flow_Statement.Longterm_Amortization FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Asset_Impairment_Dec < 230000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of loss on disposal of non current assets that appears more than 13 times?",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets FROM Income_Statement GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets HAVING COUNT (*) > 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different trading financial liabilities value do we have in our records?",
    "query": "SELECT count(DISTINCT Balance_Sheet.Trad_Fin_Liab) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the indirect method net cash flow generated from operating activities of records where total comprehensive income is null.",
    "query": "SELECT Cash_Flow_Statement.IM_NCF_Oper_Activities FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Tot_Compre_Inc IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the different values of held-to-maturity investments along with the number of records for each value.",
    "query": "SELECT Balance_Sheet.Held_Mat_Invest , COUNT(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Held_Mat_Invest"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a stock name of Bank of Jiangsu or a deferred tax liability of 242000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Balance_Sheet.Def_IT_Liab = 242000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the investment income from associates and joint ventures for all records where the total comprehensive income attributable to minority shareholders is null.",
    "query": "SELECT Income_Statement.Inv_Inc_Assoc_JV FROM Income_Statement WHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of bonds payable and derivative financial liabilities for the top 5 records with the highest derivative financial liabilities?",
    "query": "SELECT Balance_Sheet.Deriv_Liab , Balance_Sheet.Bonds_PAY FROM Balance_Sheet ORDER BY Balance_Sheet.Deriv_Liab DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the employee compensation payable and intangible assets for records where the employee compensation payable is greater than 7367000000.0.",
    "query": "SELECT Balance_Sheet.Emp_Comp_PAY , Balance_Sheet.Intang_Assets FROM Balance_Sheet WHERE Balance_Sheet.Emp_Comp_PAY > 7367000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code along with the count of unique interest expenses for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Int_Exp) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all information for records with a negative value of paid-in capital.",
    "query": "SELECT * FROM Balance_Sheet WHERE Balance_Sheet.Paid_Up_Cap < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities codes of the two records with the highest subtotal of cash inflows from investment activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inv_CF_In_Sub DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks whose other cash related to operating activities is 3824000000.0 or less, ordered in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Oth_Oper_Activities <= 3824000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a net cash flow generated from investment activities greater than -74434453000.0 and a basic earnings per share greater than 2.93?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Inv > -74434453000.0 AND Income_Statement.Basic_EPS > 2.93"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the highest long-term amortization values.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Longterm_Amortization DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks whose investment income is either 43118614269 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Recv_Invest <= 43118614269 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the most common value of fee and commission income in the income statement?",
    "query": "SELECT Income_Statement.Fee_Com_Inc FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Inc ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of all records that have different values of asset impairment provision from 3918000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Asset_Impairment_Dec != 3918000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code and net increase in customer deposits and interbank deposits for each record, sorted by the subtotal of cash inflows from operating activities in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Op_CF_Sub DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks and their undistributed profits, sorted by the surplus reserves in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Undist_Profits FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Sur_Reserves DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code and the opening balance of cash equivalents for all records.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Cash_Eq_Begin_Period FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me a list of all stocks along with the number of records where borrowing from the Central Bank is above 137465000000.0 for each stock.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Bor_CB > 137465000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock names and the count of distinct values of other comprehensive income for each stock name.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Income_Statement.Oth_Compre_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock code with the least number of records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the general and administrative expenses of records where the loss on disposal of fixed assets, intangible assets, and other long-term assets is between 28000000.0 and -83000000.0.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec BETWEEN 28000000.0 AND -83000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the count of records for each stock name, sorted in ascending order by count.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the interbank deposits and interest receivable values for records with less than 117813000000.0 interbank deposits.",
    "query": "SELECT Balance_Sheet.IB_Deposits , Balance_Sheet.Int_Receiv FROM Balance_Sheet WHERE Balance_Sheet.IB_Deposits < 117813000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the most common value of deferred tax assets?",
    "query": "SELECT Balance_Sheet.Def_IT_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Def_IT_Assets ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all information about records with negative operating profit.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Oper_Profit < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest cash received from investment?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Recv_Investment DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the average and maximum net profit attributable to the owner of the parent company for each record.",
    "query": "SELECT avg(Income_Statement.Attr_Parent_Net_Profit), max(Income_Statement.Attr_Parent_Net_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records for each securities code have deposits from interbank and other financial institutions more than 1426046000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.IB_Dep_Oth_FIs > 1426046000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three stocks with the largest loss on scrapping of fixed assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fixed_Asset_Scrap_Loss DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600919.SH or an intangible assets value of 1759000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Balance_Sheet.Intang_Assets = 1759000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest issuance of loans and advances?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Loans_Adv DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of the two companies with the highest net profit.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Net_Profit DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the interbank and other financial institutions deposits with the least number of records?",
    "query": "SELECT Balance_Sheet.IB_Dep_Oth_FIs FROM Balance_Sheet GROUP BY Balance_Sheet.IB_Dep_Oth_FIs ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of the two stocks with the highest total comprehensive income attributable to shareholders of the parent company?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code, borrowing from the Central Bank, and intangible assets of each record.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Bor_CB , Balance_Sheet.Intang_Assets FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records in each stock have income from changes in fair value more than 2462319000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.FV_Change_Inc > 2462319000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have different cash received from other investment activities than 19931846953.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Recv_Other_Invest != 19931846953.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the count of records and their corresponding stock names, where the asset impairment provision exceeds 3918000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Asset_Impairment_Dec > 3918000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all intangible asset amortization values that have at least four records with operating profit above 22470290000.0.",
    "query": "SELECT Cash_Flow_Statement.Intangible_Asset_Amortization FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oper_Profit > 22470290000.0 GROUP BY Cash_Flow_Statement.Intangible_Asset_Amortization HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average diluted earnings per share for each asset impairment provision value.",
    "query": "SELECT avg(Income_Statement.Diluted_EPS) , Cash_Flow_Statement.Asset_Impairment_Dec FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Asset_Impairment_Dec"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Tell me the initial balance of cash equivalents for each record whose total handling fees and commission expenses exceed 10.",
    "query": "SELECT Cash_Flow_Statement.Initial_Cash_Equiv FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Initial_Cash_Equiv HAVING sum(Income_Statement.Fee_Com_Exp) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the inventory decrease and cash paid for investment for the records with inventory decrease less than 39056216337.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease , Cash_Flow_Statement.Cash_Pay_Invest FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Inventory_Decrease < 39056216337"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the highest, lowest and average net increase in cash and cash equivalents across all records.",
    "query": "SELECT MAX (Cash_Flow_Statement.IM_NCF_Cash_Eq) , MIN (Cash_Flow_Statement.IM_NCF_Cash_Eq), AVG (Cash_Flow_Statement.IM_NCF_Cash_Eq) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for \"China Merchants Bank\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"China Merchants Bank\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of stocks with investment income less than or equal to 15807087000.0, sorted in descending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Investment_Income <= 15807087000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the count of records for each stock name? please display the result in ascending order.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the average other comprehensive income, minimum operating expenses and minimum total comprehensive income across all records.",
    "query": "SELECT AVG (Income_Statement.Oth_Compre_Inc) , MIN (Income_Statement.Oper_Exp), MIN (Income_Statement.Tot_Compre_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the information available in balance sheet records.",
    "query": "SELECT * FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the maximum, minimum, and average value of intangible assets in all records?",
    "query": "SELECT MAX (Balance_Sheet.Intang_Assets) , MIN (Balance_Sheet.Intang_Assets), AVG (Balance_Sheet.Intang_Assets) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of all companies where the total liabilities is 3056280475000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab <= 3056280475000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the non operating expenses of records whose net increase in deposits with central bank and interbank funds is between 5929841125.0 and 49220712331.0.",
    "query": "SELECT Income_Statement.Non_Op_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CenBank_Interbank_Net_Inc BETWEEN 5929841125.0 AND 49220712331.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which security code appears the most in our records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show the names of stocks whose net increase in borrowing funds from other financial institutions is less than or equal to 3623846164, and sort them in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_IB_Borrowings <= 3623846164 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the name of each stock, the number of different net cash flow generated from operating activities they have, and the total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.Net_CF_Op) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the number of records and the company names for each stock that has convertible corporate bonds maturing within one year value greater than 44478183762.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y > 44478183762 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the values of interbank and other financial institutions deposits, total owner's equity, and minority shareholders' equity for each record.",
    "query": "SELECT Balance_Sheet.IB_Dep_Oth_FIs , Balance_Sheet.Tot_Own_Eq , Balance_Sheet.Minor_Int_Eq FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me a list of all stocks and the number of records for each stock where the indirect method net increase in cash and cash equivalents is greater than -88278000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.IM_NCF_Cash_Eq > -88278000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the values of cash outflows from financing activities and cash outflows from operating activities for records with a cash outflow from financing activities smaller than 547670000000.0.",
    "query": "SELECT Cash_Flow_Statement.Fin_CF_Out_Sub , Cash_Flow_Statement.Op_CF_Out_Sub FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Fin_CF_Out_Sub < 547670000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of each stock and the count of records associated with that stock.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the securities code of records whose total profit is not 22433659000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Tot_Profit != 22433659000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the comprehensive income attributable to minority shareholders and shareholders of the parent company, for those records with operating expenses greater than or less than 16372581000.0.",
    "query": "SELECT Income_Statement.Minor_Int_Shareholders_Compre_Inc , Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement WHERE Income_Statement.Oper_Exp > 16372581000.0 OR Income_Statement.Oper_Exp < 16372581000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the highest number of records in the database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which CenBank_Interbank_Net_Inc values appear in at least 4 records where Inventory_Decrease is larger than 32207893333?",
    "query": "SELECT Cash_Flow_Statement.CenBank_Interbank_Net_Inc FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Inventory_Decrease > 32207893333 GROUP BY Cash_Flow_Statement.CenBank_Interbank_Net_Inc HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to stock 600016.SH or have interest income equal to 150294000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Income_Statement.Int_Inc = 150294000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all information in the income statement where the total comprehensive income is negative.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Tot_Compre_Inc < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records for each stock have investment income more than 13757000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Inv_Inc > 13757000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and income from changes in fair value for records that have at least 5 values of net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.FV_Change_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Income_Statement.Attr_Parent_Net_Profit HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average cash received from subsidiaries absorbing minority shareholder investments for each net increase in customer loans and advances value.",
    "query": "SELECT avg(Cash_Flow_Statement.Subsidiary_Absorb_Minority) , Cash_Flow_Statement.Cust_Loans_Net_Inc FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cust_Loans_Net_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either an opening balance of cash equivalents equal to 128305000000.0 or 567198000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Initial_Cash_Equiv = 128305000000.0 OR Cash_Flow_Statement.Initial_Cash_Equiv = 567198000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "identify the name of stocks that have exactly 9 records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) = 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of the top three records with the highest cash paid to and on behalf of employees.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Emp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a net increase in cash and cash equivalents of 22704805000.0 or 66167000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_CF_Cash_Equiv = 22704805000.0 OR Cash_Flow_Statement.Net_CF_Cash_Equiv = 66167000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the top three securities, in terms of other business costs.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Oth_Biz_Costs DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all information about records with negative amortization of long-term deferred expenses.",
    "query": "SELECT * FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Longterm_Amortization < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of each stock along with the count of unique values in the derivative financial assets column.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Balance_Sheet.Deriv_Assets) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the noble metal values in descending order of issuance of loans and advances.",
    "query": "SELECT Balance_Sheet.Prec_Metals FROM Balance_Sheet ORDER BY Balance_Sheet.Loans_Adv DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the minimum indirect method net increase in cash and cash equivalents value for each net interest income value?",
    "query": "SELECT MIN (Cash_Flow_Statement.IM_NCF_Cash_Eq) , Income_Statement.Net_Int_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Net_Int_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me the stock name and interest payable in descending order of tax payable?",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Int_Pay FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tax_Pay DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all details of the record with the highest value of taxes and surcharges.",
    "query": "SELECT * FROM Income_Statement ORDER BY Income_Statement.Tax_n_Surs DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the operating profit value that appears most frequently.",
    "query": "SELECT Income_Statement.Oper_Profit FROM Income_Statement GROUP BY Income_Statement.Oper_Profit ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which companies have more than one record in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records for each stock have income tax expenses that exceed 4045000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Income_Tax_Exp > 4045000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the stock codes and operating profit of all records in descending order of other business costs.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Oper_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oth_Biz_Costs DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of issued bonds for records that do not have a value for other cash payments related to investment activities?",
    "query": "SELECT Cash_Flow_Statement.Issue_Bonds FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Inv_Other IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the number of records and the stock name for those whose net profit attributable to the owner of the parent company is greater than 23777000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Net_Profit > 23777000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of stock names and estimated liabilities in descending order of deferred tax assets.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Est_Liab FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Def_IT_Assets DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities codes of all records that have interest payable less than or equal to 24567760127, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Int_Pay <= 24567760127 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the net increase in borrowing funds from other financial institutions for records with a subtotal of cash inflows from operating activities between 528276000000.0 and 528276000000.0.",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_IB_Borrowings FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Op_CF_Sub BETWEEN 528276000000.0 AND 528276000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list out the stock codes of the records with a different value of total owner's equity attributable to the parent company which is not 977126000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Own_Eq_Attr_Parent != 977126000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of comprehensive income attributable to minority shareholders and net profit for those records whose non-operating income is either above 26000000.0 or below 73000000.0?",
    "query": "SELECT Income_Statement.Minor_Int_Shareholders_Compre_Inc , Income_Statement.Net_Profit FROM Income_Statement WHERE Income_Statement.Non_Op_Rev > 26000000.0 OR Income_Statement.Non_Op_Rev < 73000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the non-operating expenses that occur at least 4 times, while the opening balance of cash is greater than 372304000000.0.",
    "query": "SELECT Income_Statement.Non_Op_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Begin_Period > 372304000000.0 GROUP BY Income_Statement.Non_Op_Exp HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out how many records do we have for each stock whose other comprehensive income is higher than 1801000000.0, along with their names.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Compre_Inc > 1801000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities have a net profit less than or equal to 23972000000.0, listed in descending order of their security codes?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Net_Profit <= 23972000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the two stocks with the highest opening balance of cash.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Begin_Period DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the assets impairment losses for those whose closing balance of cash equivalents is greater than 10, grouped by assets impairment losses?",
    "query": "SELECT Income_Statement.Assets_Imp_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Assets_Imp_Loss HAVING sum(Cash_Flow_Statement.Cash_Eq_End_Period) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records does each stock have, whose available-for-sale financial assets value is greater than 42447925315?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Avail_Sale_FAs > 42447925315 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all securities and the values of cash received from subsidiaries absorbing minority shareholder investments.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Subsidiary_Absorb_Minority FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list down all the stock codes whose cash outflows from investment activities are less than or equal to 335731000000.0, in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inv_CF_Out_Sub <= 335731000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock codes along with their frequency of occurrence.",
    "query": "SELECT Basic_Info.Stk_Code , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many records, along with their corresponding company names, have total liabilities and owner's equity above 10739836000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab_Own_Eq > 10739836000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock codes and net cash flow generated from investment activities for each record.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Net_CF_Inv FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of cash received from disposal of fixed assets, intangible assets, and other long-term assets along with their corresponding income tax expenses, for which the cash received value exceeds 14943745488.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_Disposal_Assets , Income_Statement.Income_Tax_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Disposal_Assets > 14943745488.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the stock codes that appear more than twice in our data.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three stocks with the largest long term equity investments.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.LT_Eq_Invest DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please show me the fee and commission income and the total comprehensive income attributable to shareholders of the parent company for the top five records with the highest fee and commission income.",
    "query": "SELECT Income_Statement.Fee_Com_Inc , Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement ORDER BY Income_Statement.Fee_Com_Inc DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose cash received from disposal of fixed assets, intangible assets, and other long-term assets is no more than 1394000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Disposal_Assets <= 1394000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the value of income from changes in fair value for the record that has the highest frequency.",
    "query": "SELECT Income_Statement.FV_Change_Inc FROM Income_Statement GROUP BY Income_Statement.FV_Change_Inc ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which estimated liability value has the lowest number of records?",
    "query": "SELECT Balance_Sheet.Est_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Est_Liab ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the securities codes of records that have interest income different from 150294000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Int_Inc != 150294000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose fixed assets are less than or equal to 50856000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Fix_Assets <= 50856000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock names and received other cash related to financing activities, sorted by cash paid for investment in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Recv_Other_Fin FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Invest DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top two stock codes in terms of cash received from absorbing investments.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Absorb_Investment DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of cash received from subsidiaries absorbing minority shareholder investments that appear exactly 4 times?",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Absorb_Minority FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Subsidiary_Absorb_Minority HAVING COUNT (*) = 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two securities codes with the highest fee and commission income.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the distinct value of deferred tax assets in our data.",
    "query": "SELECT distinct(Balance_Sheet.Def_IT_Assets) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the information about records whose other assets value is negative.",
    "query": "SELECT * FROM Balance_Sheet WHERE Balance_Sheet.Oth_Assets < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the average and maximum due from interbank deposits value for each record.",
    "query": "SELECT avg(Balance_Sheet.IB_Deposits), max(Balance_Sheet.IB_Deposits) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have other cash values exceeding 31388815479, grouped by the name of stocks?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Other > 31388815479 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which company's operating payables increase is not equal to 252407000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Oper_Payables_Increase != 252407000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the operating cash inflows and net income from handling fees and commissions of the top 5 records with the highest net income from handling fees and commissions.",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc , Cash_Flow_Statement.Op_CF_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Net_Inc DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fixed asset depreciation amortization decrease value that has at least four records with non-operating revenue exceeding 64000000.0.",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Non_Op_Rev > 64000000.0 GROUP BY Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of top three securities, in terms of other cash values.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Other DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of stock names and their total comprehensive income in the descending order of total profit.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Tot_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Tot_Profit DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the different closing balances of cash equivalents and the number of records for each closing balance.",
    "query": "SELECT Cash_Flow_Statement.Cash_Eq_End_Period , COUNT(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Eq_End_Period"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the stock codes of records with operating expenses less than or equal to 16372581000.0, sorted in descending order?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Exp <= 16372581000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the stock codes along with the count of records for each stock code, sorted by the count in ascending order.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average cash paid for taxes for each value of long-term amortization.",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_Pay_Taxes) , Cash_Flow_Statement.Longterm_Amortization FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Longterm_Amortization"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the name of stock and their corresponding fixed assets in each record.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Fix_Assets FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the intangible asset amortization value and total comprehensive income for records whose intangible asset amortization is greater than 575000000.0.",
    "query": "SELECT Cash_Flow_Statement.Intangible_Asset_Amortization , Income_Statement.Tot_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Intangible_Asset_Amortization > 575000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the total profit and total comprehensive income attributable to shareholders of the parent company for the top 5 records with the highest total profit.",
    "query": "SELECT Income_Statement.Tot_Profit , Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement ORDER BY Income_Statement.Tot_Profit DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose deferred tax assets are less than or equal to 64585000000.0, sorted in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Def_IT_Assets <= 64585000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the long-term amortization and operating profit of the top 5 records with the highest operating profit.",
    "query": "SELECT Income_Statement.Oper_Profit , Cash_Flow_Statement.Longterm_Amortization FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Oper_Profit DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the records of each stock whose cash outflows from investment activities exceed 836740000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inv_CF_Out_Sub > 836740000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the securities codes of the top three records with the highest values of amortization of intangible assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Intangible_Asset_Amortization DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me intangible asset amortization values that have more than 4 records with a net increase in cash and cash equivalents greater than -88278000000.0.",
    "query": "SELECT Cash_Flow_Statement.Intangible_Asset_Amortization FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_CF_Cash_Equiv > -88278000000.0 GROUP BY Cash_Flow_Statement.Intangible_Asset_Amortization HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with a stock code of 600919.SH or a deposit absorption value of 8098272000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Balance_Sheet.Acc_Deposits = 8098272000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the highest and lowest interest receivable values in all records.",
    "query": "SELECT MAX (Balance_Sheet.Int_Receiv) , MIN (Balance_Sheet.Int_Receiv) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the unique values of non-operating income in our records.",
    "query": "SELECT distinct(Income_Statement.Non_Op_Rev) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net interest income and cash received for interest, handling fees, and commissions of the top 5 records with the highest cash received for interest, handling fees, and commissions.",
    "query": "SELECT Cash_Flow_Statement.Cash_Int_Commission_Collected , Income_Statement.Net_Int_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Int_Commission_Collected DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have income from changes in fair value equal to -2413000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.FV_Change_Inc = -2413000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock code, cash paid for other financing activities, and depreciation of fixed assets, depletion of oil and gas assets, and depreciation of productive biological assets for each record.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Cash_Pay_Fin_Other , Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the cash flow statement net income for each record whose sum of operating profit exceeds 10.",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Net_Income FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.CF_Stmt_Net_Income HAVING sum(Income_Statement.Oper_Profit) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the convertible corporate bonds maturing within one year for records with intangible asset amortization equal to 25295587972.0.",
    "query": "SELECT Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Intangible_Asset_Amortization BETWEEN 25295587972.0 AND 25295587972.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities codes with the highest cash paid for interest, handling fees, and commissions?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Int_Fees_Com DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have cash paid for assets more than 3392000000.0 and non-operating revenue greater than 78000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Assets > 3392000000.0 AND Income_Statement.Non_Op_Rev > 78000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the operating receivables decrease value that has at least 4 records where net cash flow generated from investment activities is larger than -116907000000.0?",
    "query": "SELECT Cash_Flow_Statement.Oper_Receivables_Decrease FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_CF_Inv > -116907000000.0 GROUP BY Cash_Flow_Statement.Oper_Receivables_Decrease HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the distinct values of attribute parent shareholders comprehensive income in our data.",
    "query": "SELECT distinct(Income_Statement.Attr_Parent_Shareholders_Compre_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of stocks whose cash payments related to investment activities are 44542636671 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Inv_Other <= 44542636671 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have investment real estate values of either 2962032135.0 or 1227000000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Inv_Real_Estate = 2962032135.0 OR Balance_Sheet.Inv_Real_Estate = 1227000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the closing balance of cash in descending order of net increase in borrowings from the central bank.",
    "query": "SELECT Cash_Flow_Statement.Cash_End_Period FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Net_Inc_Borrowings_CB DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the handling fees and commission expenses and non-operating expenses for records with diluted earnings per share greater than 2.93 or less than 2.93.",
    "query": "SELECT Income_Statement.Fee_Com_Exp , Income_Statement.Non_Op_Exp FROM Income_Statement WHERE Income_Statement.Diluted_EPS > 2.93 OR Income_Statement.Diluted_EPS < 2.93"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the net cash flow generated from financing activities and net interest income of records whose net cash flow generated from investment activities is either above 955356000000.0 or below 335731000000.0.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Fin , Income_Statement.Net_Int_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inv_CF_Out_Sub > 955356000000.0 OR Cash_Flow_Statement.Inv_CF_Out_Sub < 335731000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600036.SH or a value of financial assets sold for repurchase equal to 131663000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Balance_Sheet.Sell_Rep_FAs = 131663000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values of net increase in deposits with central bank and interbank funds correspond to each stock name?",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Cash_Flow_Statement.CenBank_Interbank_Net_Inc) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of \"600015.SH\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Code = \"600015.SH\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have that belong to stock 600919.SH or have other comprehensive income equal to 1375220000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Income_Statement.Oth_Compre_Inc = 1375220000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average deferred tax assets for each cash and deposits with central bank value.",
    "query": "SELECT avg(Balance_Sheet.Def_IT_Assets) , Balance_Sheet.Cash_CB FROM Balance_Sheet GROUP BY Balance_Sheet.Cash_CB"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest value of long term equity investment.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.LT_Eq_Invest DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of income tax expenses and opening balance of cash that correspond to income tax expenses larger than 4045000000.0?",
    "query": "SELECT Income_Statement.Income_Tax_Exp , Cash_Flow_Statement.Cash_Begin_Period FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Income_Tax_Exp > 4045000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the highest values of convertible corporate bonds maturing within one year.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the three companies with the highest values of minority shareholders' equity.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Minor_Int_Eq DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600036.SH or a total owner's equity of 238302235000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Balance_Sheet.Tot_Own_Eq = 238302235000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of top three securities, in terms of minority shareholders' equity.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Minor_Int_Eq DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a value of financial assets sold for repurchase exceeding 373094000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Sell_Rep_FAs > 373094000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details about the record with the highest value of other liabilities.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Oth_Liab DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the different values of investment income from associates and joint ventures, along with the count of records for each value.",
    "query": "SELECT Income_Statement.Inv_Inc_Assoc_JV , COUNT(*) FROM Income_Statement GROUP BY Income_Statement.Inv_Inc_Assoc_JV"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or have other business costs equal to 857000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Income_Statement.Oth_Biz_Costs = 857000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the total profit of records with non-operating expenses ranging from 37000000.0 to 42892000.0.",
    "query": "SELECT Income_Statement.Tot_Profit FROM Income_Statement WHERE Income_Statement.Non_Op_Exp BETWEEN 37000000.0 AND 42892000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes of all records whose operating income is not equal to 91230000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Rev != 91230000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks whose decrease in deferred income tax assets is no more than 3334000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.DIT_Asset_Reduction <= 3334000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes and tax payments of all records, sorted by the decreasing value of dividends and profits paid by subsidiaries to minority shareholders.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Cash_Pay_Taxes FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Subsidiary_Pay_Minority DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the top three securities with the highest exchange gains.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Exch_Gain_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the total profit and taxes and surcharges for the top 5 tax and surcharge values.",
    "query": "SELECT Income_Statement.Tax_n_Surs , Income_Statement.Tot_Profit FROM Income_Statement ORDER BY Income_Statement.Tax_n_Surs DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the two securities codes that have the highest net increase in cash and cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.IM_NCF_Cash_Eq DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest hold-to-maturity investments?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Held_Mat_Invest DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have loans and advances exceeding 4322267000000.0 and trading financial assets exceeding 393119726000.0?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Loans_Adv > 4322267000000.0 AND Balance_Sheet.Trad_FAs > 393119726000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of stocks whose deferred tax liability is not equal to 641000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Def_IT_Liab != 641000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of stocks where reduction in operating receivables is less than or equal to -87024000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Oper_Receivables_Decrease <= -87024000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the values of fixed asset depreciation, convertible bonds maturing within 1 year, and operating expenses for each record.",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec , Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y , Income_Statement.Oper_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the least number of records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net increase in customer deposits and interbank deposits, ordered by cash received from subsidiaries absorbing minority shareholder investments in descending order.",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Subsidiary_Absorb_Minority DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest cash received from issuing bonds?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Issue_Bonds DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the trading financial liabilities and their corresponding total deferred tax assets.",
    "query": "SELECT Balance_Sheet.Trad_Fin_Liab , SUM (Balance_Sheet.Def_IT_Assets) FROM Balance_Sheet GROUP BY Balance_Sheet.Trad_Fin_Liab"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the handling fees and commission expenses and assets impairment loss for records with non operating income greater than 73000000.0 or less than 26000000.0.",
    "query": "SELECT Income_Statement.Fee_Com_Exp , Income_Statement.Assets_Imp_Loss FROM Income_Statement WHERE Income_Statement.Non_Op_Rev > 73000000.0 OR Income_Statement.Non_Op_Rev < 26000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of stock names and purchase of resale financial assets in descending order of available-for-sale financial assets.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Buyback_FAs FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Avail_Sale_FAs DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the values of minor interest and income received from other investments for records where the minor interest loss is less than 685000000.0.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss , Cash_Flow_Statement.Recv_Other_Invest FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Inc_Loss < 685000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three securities have the highest operating revenue?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Rev DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the net cash flow generated from operating activities and opening balance of cash equivalents for the top 5 records with the highest opening balance of cash equivalents.",
    "query": "SELECT Cash_Flow_Statement.Cash_Eq_Begin_Period , Cash_Flow_Statement.Net_CF_Op FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cash_Eq_Begin_Period DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average and maximum operating revenue across all records?",
    "query": "SELECT avg(Income_Statement.Oper_Rev), max(Income_Statement.Oper_Rev) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the interest receivable and purchase of resale financial assets values for the top 5 records with the highest purchase of resale financial assets.",
    "query": "SELECT Balance_Sheet.Buyback_FAs , Balance_Sheet.Int_Receiv FROM Balance_Sheet ORDER BY Balance_Sheet.Buyback_FAs DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the cash paid for the purchase and construction of fixed assets, intangible assets, and other long-term assets value that has the least number of records?",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Assets FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Assets ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the deferred tax assets values, sorted by their corresponding deposit absorption in descending order.",
    "query": "SELECT Balance_Sheet.Def_IT_Assets FROM Balance_Sheet ORDER BY Balance_Sheet.Acc_Deposits DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many distinct securities do we have in our data?",
    "query": "SELECT count(DISTINCT Basic_Info.Stk_Name) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a cash received from disposal of fixed assets, intangible assets, and other long-term assets value equal to 14943745488.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Disposal_Assets = 14943745488.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two companies with the highest value of other assets?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Oth_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of stocks that have more than 9 records in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) > 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average handling fees and commission expenses for each net income from handling fees and commissions value.",
    "query": "SELECT avg(Income_Statement.Fee_Com_Exp) , Income_Statement.Fee_Com_Net_Inc FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Net_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose derivative financial assets value is not equal to 22675000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Deriv_Assets != 22675000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to 600000.SH or have a minor interest income loss of 251000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Income_Statement.Minor_Int_Inc_Loss = 251000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two companies with the highest hold-to-maturity investments in their balance sheets?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Held_Mat_Invest DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top five most frequent values of cash received from other financing activities?",
    "query": "SELECT Cash_Flow_Statement.Recv_Other_Fin FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Recv_Other_Fin ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records either belong to China Merchants Bank or have other comprehensive income equal to 2721000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Income_Statement.Oth_Compre_Inc = 2721000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the treasury stock and borrowing from the central bank for all records with treasury stock less than 47472168450.",
    "query": "SELECT Balance_Sheet.Treas_Stock , Balance_Sheet.Bor_CB FROM Balance_Sheet WHERE Balance_Sheet.Treas_Stock < 47472168450"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of the two securities with the highest capital converted from debt.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Debt_Converted_Capital DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, give me the number of unique diluted earnings per share values and the total count of records associated with that stock.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Income_Statement.Diluted_EPS) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the records where the value of assets impairment loss is negative.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Assets_Imp_Loss < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the stock code of records that have different financial expenses from 41100351237?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Fin_Expenses != 41100351237"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and the count of unique values of income from changes in fair value for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.FV_Change_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, display the number of records that have financial assets sold for repurchase value exceeding 90677000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Sell_Rep_FAs > 90677000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the fixed assets that have a total trading financial assets greater than 10.",
    "query": "SELECT Balance_Sheet.Fix_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Fix_Assets HAVING sum(Balance_Sheet.Trad_FAs) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the exchange gains, net profit of the records whose exchange gains is either above 13928011023.0 or below 13928011023.0 and their cash equivalents opening balance.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc , Income_Statement.Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Eq_Begin_Period > 13928011023.0 OR Cash_Flow_Statement.Cash_Eq_Begin_Period < 13928011023.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the sum of fee and commission income for each net profit value.",
    "query": "SELECT Income_Statement.Net_Profit , SUM (Income_Statement.Fee_Com_Inc) FROM Income_Statement GROUP BY Income_Statement.Net_Profit"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three stocks with the highest interest expenses.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Int_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me the stock names and corresponding hold-to-maturity investment values, sorted by the amount of loans and advances in descending order?",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Held_Mat_Invest FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Loans_Adv DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have basic earnings per share before 1980?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Basic_EPS < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of records whose interest income is not equal to 187334000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Int_Inc != 187334000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the records' operating profit and opening balance of cash that have either minor interest income or loss greater than 605835000.0 or less than 685000000.0.",
    "query": "SELECT Income_Statement.Oper_Profit , Cash_Flow_Statement.Cash_Begin_Period FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Inc_Loss > 605835000.0 OR Income_Statement.Minor_Int_Inc_Loss < 685000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the minimum deposit absorption for each interest receivable value?",
    "query": "SELECT MIN (Balance_Sheet.Acc_Deposits) , Balance_Sheet.Int_Receiv FROM Balance_Sheet GROUP BY Balance_Sheet.Int_Receiv"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the minimum cash outflow from operating activities for each other business income value?",
    "query": "SELECT MIN (Cash_Flow_Statement.Op_CF_Out_Sub) , Income_Statement.Oth_Biz_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Oth_Biz_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have business and management fees equal to 13287000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Gen_n_Admin_Exps = 13287000000.0 OR Income_Statement.Gen_n_Admin_Exps = 13287000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock name appears most frequently in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the different subtotals of cash outflows from financing activities and how many records are associated with each subtotal.",
    "query": "SELECT Cash_Flow_Statement.Fin_CF_Out_Sub , COUNT(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fin_CF_Out_Sub"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the number of records and the name of each stock that has operating expenses exceeding 64652000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Exp > 64652000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code and operating profit of records that have at least 5 other business costs.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Oper_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Income_Statement.Oth_Biz_Costs HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the cash equivalents opening balance with the fewest number of records.",
    "query": "SELECT Cash_Flow_Statement.Cash_Begin_Period FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Begin_Period ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me how many unique values of total liabilities do we have for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Balance_Sheet.Tot_Liab) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the interest expenses and fee and commission income for each record with interest expenses greater than 35036562000.0?",
    "query": "SELECT Income_Statement.Int_Exp , Income_Statement.Fee_Com_Inc FROM Income_Statement WHERE Income_Statement.Int_Exp > 35036562000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the inventory decrease values that have appeared at least four times, with subsidiary absorption of minority shareholders above 43203785532.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Subsidiary_Absorb_Minority > 43203785532 GROUP BY Cash_Flow_Statement.Inventory_Decrease HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have with a stock code of 600000.SH or a fee and commission income equal to 6044000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Income_Statement.Fee_Com_Inc = 6044000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the values of financial assets sold for repurchase from records where the value of noble metal is between 47640791737.0 and 37602114584.0.",
    "query": "SELECT Balance_Sheet.Sell_Rep_FAs FROM Balance_Sheet WHERE Balance_Sheet.Prec_Metals BETWEEN 47640791737.0 AND 37602114584.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock name of China Merchants Bank or treasury stock value equal to 2830191763?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Balance_Sheet.Treas_Stock = 2830191763"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which values of net profit in cash flow statement appear more than once?",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Net_Income FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.CF_Stmt_Net_Income HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the eight least frequent operating expenses values, sorted by their frequency in ascending order.",
    "query": "SELECT Income_Statement.Oper_Exp FROM Income_Statement GROUP BY Income_Statement.Oper_Exp ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600015.SH or a cash payment for other financing activities equal to 35243683155.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Cash_Flow_Statement.Cash_Pay_Fin_Other = 35243683155.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the operating profit and the total minority interest for each operating profit value in the records.",
    "query": "SELECT Income_Statement.Oper_Profit , SUM (Income_Statement.Minor_Int_Inc_Loss) FROM Income_Statement GROUP BY Income_Statement.Oper_Profit"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the general risk preparation values that appear in more than 10 records.",
    "query": "SELECT Balance_Sheet.Gen_Risk_Res FROM Balance_Sheet GROUP BY Balance_Sheet.Gen_Risk_Res HAVING COUNT (*) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has a loss on disposal of non current assets value that is not 18147985194?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Loss_Disposal_Nonc_Assets != 18147985194"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of records where cash paid for the purchase and construction of fixed assets, intangible assets, and other long-term assets is 18750000000.0 or less, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Assets <= 18750000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock name, give me the stock name itself, the number of different values of received investment, and the total number of records for that stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Balance_Sheet.Recv_Invest) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two company names with the highest interest income.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Int_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the average and maximum values of amortization of intangible assets for each record.",
    "query": "SELECT avg(Cash_Flow_Statement.Intangible_Asset_Amortization), max(Cash_Flow_Statement.Intangible_Asset_Amortization) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock names and the impact of exchange rate changes on cash and cash equivalents for all records, sorted by the amount of debt repayment in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.FX_Rate_Change_Cash FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Repay_Debt DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum net increase in cash and cash equivalents for each record.",
    "query": "SELECT avg(Cash_Flow_Statement.Net_CF_Cash_Equiv), max(Cash_Flow_Statement.Net_CF_Cash_Equiv) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600000.SH or deposit absorption equal to 8098272000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Balance_Sheet.Acc_Deposits = 8098272000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the number of records and the company names, where diluted earnings per share is larger than 32452670465.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Diluted_EPS > 32452670465.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "get the securities code of stocks that appear more than twice in our data.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the names of stocks in ascending order of their occurrence in the records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three securities with the highest cash received from other investment activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Recv_Other_Invest DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the securities codes of records with customer loans and advances less than or equal to 82234000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cust_Loans_Net_Inc <= 82234000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the basic earnings per share value that appears most frequently in our records?",
    "query": "SELECT Income_Statement.Basic_EPS FROM Income_Statement GROUP BY Income_Statement.Basic_EPS ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the general and administrative expenses for all records with no cash received from other cash related to operating activities.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Oth_Oper_Activities IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600919.SH or a net increase in customer deposits and interbank deposits of 185841000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits = 185841000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the Cash_Oth_Oper_Activities values that appeared less than 14 times in our records?",
    "query": "SELECT Cash_Flow_Statement.Cash_Oth_Oper_Activities FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Oth_Oper_Activities HAVING COUNT (*) < 14"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different other comprehensive income values correspond to each securities code?",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Oth_Compre_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the average and maximum value of minority shareholders' equity for each record.",
    "query": "SELECT avg(Balance_Sheet.Minor_Int_Eq), max(Balance_Sheet.Minor_Int_Eq) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of the two companies with the highest investment income from associates and joint ventures?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Inv_Inc_Assoc_JV DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the details of the record with the highest net profit.",
    "query": "SELECT * FROM Income_Statement ORDER BY Income_Statement.Net_Profit DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock codes of all records where available-for-sale financial assets are 42447925315 or less, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Avail_Sale_FAs <= 42447925315 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of the stock with the most number of records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the list of long-term amortizations in cash flow statement records.",
    "query": "SELECT Cash_Flow_Statement.Longterm_Amortization FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two stock codes with the highest decrease in inventory.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inventory_Decrease DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top five interest receivable values with the highest frequency in our records?",
    "query": "SELECT Balance_Sheet.Int_Receiv FROM Balance_Sheet GROUP BY Balance_Sheet.Int_Receiv ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the noble metal value for records with borrowing from the Central Bank between 195593933000.0 and 137465000000.0.",
    "query": "SELECT Balance_Sheet.Prec_Metals FROM Balance_Sheet WHERE Balance_Sheet.Bor_CB BETWEEN 195593933000.0 AND 137465000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with a stock name of Huaxia Bank or basic earnings per share of 0.46?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Income_Statement.Basic_EPS = 0.46"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code along with the count of occurrences for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose other business income is not equal to 1376000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Inc != 1376000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average deposits from interbank and other financial institutions for each total liability value.",
    "query": "SELECT avg(Balance_Sheet.IB_Dep_Oth_FIs) , Balance_Sheet.Tot_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the long-term amortization values that appear in at least 4 records where the net profit exceeds 12365000000.0.",
    "query": "SELECT Cash_Flow_Statement.Longterm_Amortization FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Net_Profit > 12365000000.0 GROUP BY Cash_Flow_Statement.Longterm_Amortization HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the smallest hold-to-maturity investment value for each treasury stock value.",
    "query": "SELECT MIN (Balance_Sheet.Held_Mat_Invest) , Balance_Sheet.Treas_Stock FROM Balance_Sheet GROUP BY Balance_Sheet.Treas_Stock"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the securities codes of records where the cash received for interest, handling fees, and commissions is not equal to 198669000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Int_Commission_Collected != 198669000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Huaxia Bank or have comprehensive income attributable to minority shareholders of 530000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Income_Statement.Minor_Int_Shareholders_Compre_Inc = 530000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock name, show all records with a foreign exchange rate change in cash higher than 3958000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.FX_Rate_Change_Cash > 3958000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either the stock name of China Merchants Bank or derivate financial liabilities value of 2449116000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Balance_Sheet.Deriv_Liab = 2449116000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the inventory decrease values for records where there is no reduction in operating receivables.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Oper_Receivables_Decrease IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the eight smallest net increase in customer loans and advances values.",
    "query": "SELECT Cash_Flow_Statement.Cust_Loans_Net_Inc FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cust_Loans_Net_Inc ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the value of increase in deferred income tax liabilities that appeared exactly once.",
    "query": "SELECT Cash_Flow_Statement.DIT_Liability_Increase FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.DIT_Liability_Increase HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600036.SH or an accounts receivable investment value of 6656253775?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Balance_Sheet.Recv_Invest = 6656253775"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock name and non-operating expenses of each record, sorted by their total profit in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Non_Op_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Tot_Profit DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me other comprehensive income and basic earnings per share for records with other comprehensive income less than 2258000000.0.",
    "query": "SELECT Income_Statement.Oth_Compre_Inc , Income_Statement.Basic_EPS FROM Income_Statement WHERE Income_Statement.Oth_Compre_Inc < 2258000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a subtotal of cash inflows from operating activities equal to either 528276000000.0 or 377651880000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Op_CF_Sub = 528276000000.0 OR Cash_Flow_Statement.Op_CF_Sub = 377651880000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest capital reserves?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Cap_Reserves DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the smallest debt converted to capital value for each assets impairment loss value.",
    "query": "SELECT MIN (Cash_Flow_Statement.Debt_Converted_Capital) , Income_Statement.Assets_Imp_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Assets_Imp_Loss"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average diluted earnings per share, the minimum non-operating expenses, and the minimum net profit attributable to the owner of the parent company across all records?",
    "query": "SELECT AVG (Income_Statement.Diluted_EPS) , MIN (Income_Statement.Non_Op_Exp), MIN (Income_Statement.Attr_Parent_Net_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600919.SH or an interest income of 133080000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Income_Statement.Int_Inc = 133080000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks and their corresponding bonds payable.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Bonds_PAY FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Mingsheng Bank or have a noble metal value of 2213000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Balance_Sheet.Prec_Metals = 2213000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the five investment cash outflow subtotals that have the highest frequency of occurrence.",
    "query": "SELECT Cash_Flow_Statement.Inv_CF_Out_Sub FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Inv_CF_Out_Sub ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have exchange gains that are not equal to 24366000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Exch_Gain_Inc != 24366000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the trading financial liabilities of records where hold-to-maturity investments are null.",
    "query": "SELECT Balance_Sheet.Trad_Fin_Liab FROM Balance_Sheet WHERE Balance_Sheet.Held_Mat_Invest IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "I want to know the value of comprehensive income attributable to shareholders of the parent company, the number of distinct cash received from investment recovery, and the total number of records for each value of comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc , count(DISTINCT Cash_Flow_Statement.Recv_Investment) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest and lowest reduction in operating receivables among all records?",
    "query": "SELECT MAX (Cash_Flow_Statement.Oper_Receivables_Decrease) , MIN (Cash_Flow_Statement.Oper_Receivables_Decrease) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of the top two stocks with the highest investment income?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Inv_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for the stock \"Shanghai Pudong Development Bank\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"Shanghai Pudong Development Bank\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "which values of cash received for interest, handling fees, and commissions appear only once?",
    "query": "SELECT Cash_Flow_Statement.Cash_Int_Commission_Collected FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Int_Commission_Collected HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which net increase in customer deposits and interbank deposits have 3 or more records?",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits HAVING COUNT (*) >= 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the records with unique values of cash received from subsidiaries absorbing minority shareholder investments.",
    "query": "SELECT distinct(Cash_Flow_Statement.Subsidiary_Absorb_Minority) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of top three securities, in terms of net increase in customer loans and advances.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cust_Loans_Net_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the cash payments for investment in the records.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Invest FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the deferred income tax liabilities increase and cash paid for interest, handling fees, and commissions for records with DIT_Liability_Increase less than 45648588559.",
    "query": "SELECT Cash_Flow_Statement.DIT_Liability_Increase , Cash_Flow_Statement.Cash_Pay_Int_Fees_Com FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.DIT_Liability_Increase < 45648588559"
  },
  {
    "db_id": "Bank_Financials",
    "question": "I want to know the value of cash received from absorbing investments, along with the number of distinct income from changes in fair value and the total count of records in each group.",
    "query": "SELECT Cash_Flow_Statement.Absorb_Investment , count(DISTINCT Income_Statement.FV_Change_Inc) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Absorb_Investment"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display any stock codes that appear only once in the database.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show the investment income from associates and joint ventures and the total expenses at handling fees and commissions of each record.",
    "query": "SELECT Income_Statement.Inv_Inc_Assoc_JV , SUM (Income_Statement.Fee_Com_Exp) FROM Income_Statement GROUP BY Income_Statement.Inv_Inc_Assoc_JV"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the count and stock codes of records whose other business income is greater than 1283000000.0, grouped by stock code.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Inc > 1283000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net profit and non-operating revenue of records that have either net income from handling fees and commissions greater than 3667000000.0 or shorter than 13962000000.0.",
    "query": "SELECT Income_Statement.Net_Profit , Income_Statement.Non_Op_Rev FROM Income_Statement WHERE Income_Statement.Fee_Com_Net_Inc > 3667000000.0 OR Income_Statement.Fee_Com_Net_Inc < 13962000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the total liabilities value that only appears in one record.",
    "query": "SELECT Balance_Sheet.Tot_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either the stock code 600000.SH or purchase of resale financial assets value of 31459000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Balance_Sheet.Buyback_FAs = 31459000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have cash payments for taxes equal to 9234765000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Taxes = 9234765000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each securities code, provide the securities code itself, the number of records with capital reserves value and the total number of records with that securities code.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Balance_Sheet.Cap_Reserves) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top 5 most frequent asset impairment loss values?",
    "query": "SELECT Income_Statement.Assets_Imp_Loss FROM Income_Statement GROUP BY Income_Statement.Assets_Imp_Loss ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me Conv_Bonds_Maturing_Within_1Y values that appear more than 10 times.",
    "query": "SELECT Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y HAVING COUNT (*) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes in descending order, whose income from changes in fair value is smaller than or equal to 1814000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.FV_Change_Inc <= 1814000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the stock name, cash paid for assets, and increase in operating payables for each record.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Cash_Pay_Assets , Cash_Flow_Statement.Oper_Payables_Increase FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes of all records that have trading financial liabilities not equal to 14920000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Trad_Fin_Liab != 14920000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest value of purchase of resale financial assets.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Buyback_FAs DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes that appear more than twice in our data.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the securities code that appear more than once in our records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the impairment loss on assets and the total other comprehensive income for each record.",
    "query": "SELECT Income_Statement.Assets_Imp_Loss , SUM (Income_Statement.Oth_Compre_Inc) FROM Income_Statement GROUP BY Income_Statement.Assets_Imp_Loss"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to the stock 600036.SH or have a net increase in cash and cash equivalents equal to 66167000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Cash_Flow_Statement.Net_CF_Cash_Equiv = 66167000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "fetch me the operating receivables reduction from records with income from changes in fair value ranging from -2413000000.0 to 4319000000.0.",
    "query": "SELECT Cash_Flow_Statement.Oper_Receivables_Decrease FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.FV_Change_Inc BETWEEN -2413000000.0 AND 4319000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the distinct values of deferred tax liabilities in the balance sheet records.",
    "query": "SELECT distinct(Balance_Sheet.Def_IT_Liab) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either Bank of Jiangsu as their stock name or interest expenses equal to 41643000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Income_Statement.Int_Exp = 41643000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "I want to know how many records and different values of dividends and profits paid by subsidiaries to minority shareholders do we have for each stock code, along with the stock code itself.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Cash_Flow_Statement.Subsidiary_Pay_Minority) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock codes in descending alphabetical order where the subtotal of cash inflows from investment activities is 931722450000.0 or less.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inv_CF_In_Sub <= 931722450000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with either the name of Shanghai Pudong Development Bank or a loss on disposal of non-current assets equal to 29050967828?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Income_Statement.Loss_Disposal_Nonc_Assets = 29050967828"
  },
  {
    "db_id": "Bank_Financials",
    "question": "present the net profit attributable to the owner of the parent company and the impact of exchange rate changes on cash and cash equivalents for the top five records with the highest net profit attributable to the owner of the parent company.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit , Cash_Flow_Statement.FX_Rate_Change_Cash FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Net_Profit DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three stocks with the highest exchange gains in income statement.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Exch_Gain_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the investment income values that appear more than once in our records.",
    "query": "SELECT Cash_Flow_Statement.Investment_Income FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Investment_Income HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the top three securities with the highest opening balance of cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Eq_Begin_Period DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a Stk_Code of 600919.SH or cash received from investment recovery equal to 915849990000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Cash_Flow_Statement.Recv_Investment = 915849990000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have total liabilities equal to either 7014760000000.0 or 9753923000000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Tot_Liab = 7014760000000.0 OR Balance_Sheet.Tot_Liab = 9753923000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of the top three records with the highest expenses at handling fees and commissions.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average and maximum value of deferred tax assets in all records?",
    "query": "SELECT avg(Balance_Sheet.Def_IT_Assets), max(Balance_Sheet.Def_IT_Assets) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the assets impairment loss values that appeared at least four times, with convertible corporate bonds maturing within one year value above 11824985585.",
    "query": "SELECT Income_Statement.Assets_Imp_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y > 11824985585 GROUP BY Income_Statement.Assets_Imp_Loss HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Mingsheng Bank or their fixed assets is exactly 50856000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Balance_Sheet.Fix_Assets = 50856000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the loss on disposal of fixed assets and the loss from changes in fair value for the top 5 records with the highest loss from changes in fair value.",
    "query": "SELECT Cash_Flow_Statement.Fair_Value_Change_Loss , Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Fair_Value_Change_Loss DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either assets impairment loss of 13527799084.0 or 49000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Assets_Imp_Loss = 13527799084.0 OR Income_Statement.Assets_Imp_Loss = 49000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest value of interest payable.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Int_Pay DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of top three stocks with the highest value of minority interest income or loss.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Minor_Int_Inc_Loss DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the names of the top three companies with the highest net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Net_Profit DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all stock codes for records where the cash received from subsidiaries absorbing minority shareholder investments is not equal to 17710949028.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Subsidiary_Absorb_Minority != 17710949028"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the total number of records in the income statement table?",
    "query": "SELECT count(*) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the other business costs for each record, and the total decrease in deferred income tax assets for each of them.",
    "query": "SELECT Income_Statement.Oth_Biz_Costs , SUM (Cash_Flow_Statement.DIT_Asset_Reduction) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Oth_Biz_Costs"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records either have the name \"Shanghai Pudong Development Bank\" or have an assets impairment loss value of 13527799084.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Income_Statement.Assets_Imp_Loss = 13527799084.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the increase in operating payables and the total net increase in customer deposits and interbank deposits for each record.",
    "query": "SELECT Cash_Flow_Statement.Oper_Payables_Increase , SUM (Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Oper_Payables_Increase"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three stocks have the highest operating expenses?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top 5 companies with the most records in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the name of stocks whose deposit absorption does not equal to 2168881000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Acc_Deposits != 2168881000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average minority interest, the minimum operating profit, and the minimum cash received for other operating activities in all records?",
    "query": "SELECT AVG (Income_Statement.Minor_Int_Inc_Loss) , MIN (Income_Statement.Oper_Profit), MIN (Cash_Flow_Statement.Cash_Oth_Oper_Activities) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the highest and lowest values of total owner's equity in our data.",
    "query": "SELECT MAX (Balance_Sheet.Tot_Own_Eq) , MIN (Balance_Sheet.Tot_Own_Eq) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the eight least values of closing balance of cash from our records.",
    "query": "SELECT Cash_Flow_Statement.Cash_End_Period FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_End_Period ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have more than 9279000000.0 cash paid to other operating activities and more than 24747000000.0 total profit?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Op_Other > 9279000000.0 AND Income_Statement.Tot_Profit > 24747000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose non-operating expenses are not equal to 68000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Non_Op_Exp != 68000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fee and commission income values that appeared less than 13 times.",
    "query": "SELECT Income_Statement.Fee_Com_Inc FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Inc HAVING COUNT (*) < 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of all stocks whose asset impairment loss is less than or equal to 230000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Assets_Imp_Loss <= 230000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the average and maximum total comprehensive income for each record.",
    "query": "SELECT avg(Income_Statement.Tot_Compre_Inc), max(Income_Statement.Tot_Compre_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fair value change income values that appear more than 12 times.",
    "query": "SELECT Income_Statement.FV_Change_Inc FROM Income_Statement GROUP BY Income_Statement.FV_Change_Inc HAVING COUNT (*) > 12"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the intangible assets and derivative financial liabilities of the top 5 records with the highest intangible assets value.",
    "query": "SELECT Balance_Sheet.Intang_Assets , Balance_Sheet.Deriv_Liab FROM Balance_Sheet ORDER BY Balance_Sheet.Intang_Assets DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes and cash outflows from investment activities, sorted by decreasing opening balance of cash.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Inv_CF_Out_Sub FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Begin_Period DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the financial expenses, handling fees and commission expenses, and total comprehensive income attributable to shareholders of the parent company for each record.",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Fin_Expenses , Income_Statement.Fee_Com_Exp , Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have business and management fees less than 1980?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Gen_n_Admin_Exps < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities with the highest investment income from associates and joint ventures?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Inv_Inc_Assoc_JV DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the stock code of 600000.SH or a treasury stock value of 14922247591?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Balance_Sheet.Treas_Stock = 14922247591"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net interest income for records where net increase in customer deposits and interbank deposits is null.",
    "query": "SELECT Income_Statement.Net_Int_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest long-term equity investments?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.LT_Eq_Invest DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have tax and fees payable before 1980?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Tax_Pay < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with either a stock code of 600036.SH or a loss on scrapping of fixed assets equal to 37300007119?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Cash_Flow_Statement.Fixed_Asset_Scrap_Loss = 37300007119"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the minimum value of interest expenses for each cash received from other cash related to operating activities.",
    "query": "SELECT MIN (Income_Statement.Int_Exp) , Cash_Flow_Statement.Cash_Oth_Oper_Activities FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cash_Oth_Oper_Activities"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me all records where the net increase in borrowing funds from other financial institutions exceeds 10549826640, along with the corresponding value of other cash payments related to financing activities.",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_IB_Borrowings , Cash_Flow_Statement.Cash_Pay_Fin_Other FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_Inc_IB_Borrowings > 10549826640"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three companies with the highest total comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the highest net cash received from disposal of fixed assets, intangible assets, and other long-term assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Disposal_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average of cash inflows from financing activities, the smallest value of other business income, and the smallest value of investment income across all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Fin_CF_In_Sub) , MIN (Income_Statement.Oth_Biz_Inc), MIN (Cash_Flow_Statement.Investment_Income) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of stocks whose other value is not 31388815479.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Other != 31388815479"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information in the cash flow statement records.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have exactly 11 records in the database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) = 11"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the total comprehensive income and the comprehensive income attributable to minority shareholders for records with 5 or more non-operating expenses.",
    "query": "SELECT Income_Statement.Tot_Compre_Inc , Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Non_Op_Exp HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the other business costs and other comprehensive income values for records with general and administrative expenses above 21136000000.0 or below 13287000000.0?",
    "query": "SELECT Income_Statement.Oth_Biz_Costs , Income_Statement.Oth_Compre_Inc FROM Income_Statement WHERE Income_Statement.Gen_n_Admin_Exps > 21136000000.0 OR Income_Statement.Gen_n_Admin_Exps < 13287000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the operating expenses for each record that has a sum of other cash payments related to operating activities greater than 10.",
    "query": "SELECT Income_Statement.Oper_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Oper_Exp HAVING sum(Cash_Flow_Statement.Other) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display any securities code that appears exactly once in our data.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Mingsheng Bank or have cash outflows from financing activities equal to 691355000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Cash_Flow_Statement.Fin_CF_Out_Sub = 691355000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest non-operating expenses?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Non_Op_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes that appear only once in our data.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of the top three stocks with the highest value of derivative financial liabilities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Deriv_Liab DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and the count of unique cash paid for interest, handling fees, and commissions in each stock.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Cash_Flow_Statement.Cash_Pay_Int_Fees_Com) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the names of stocks and taxes and fees payable values in descending order of lending funds.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Tax_Pay FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Lending_Funds DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the values of surplus reserves, minority shareholders' equity, and interest payable for each record.",
    "query": "SELECT Balance_Sheet.Sur_Reserves , Balance_Sheet.Minor_Int_Eq , Balance_Sheet.Int_Pay FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the list of securities codes in the Basic_Info table.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there in the Cash Flow Statement table?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the stock codes of the two largest trading financial assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Trad_FAs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average total profit, minimum operating revenue, and minimum operating expenses of all records.",
    "query": "SELECT AVG (Income_Statement.Tot_Profit) , MIN (Income_Statement.Oper_Rev), MIN (Income_Statement.Oper_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the net increase in cash and cash equivalents values, where the count of records with fair value change loss above 33837165194.0 is at least four.",
    "query": "SELECT Cash_Flow_Statement.IM_NCF_Cash_Eq FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Fair_Value_Change_Loss > 33837165194.0 GROUP BY Cash_Flow_Statement.IM_NCF_Cash_Eq HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest depreciation of fixed assets, depletion of oil and gas assets, and depreciation of productive biological assets?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all investment income values that have at least 4 records with fee and commission income larger than 3157221000.0.",
    "query": "SELECT Income_Statement.Inv_Inc FROM Income_Statement WHERE Income_Statement.Fee_Com_Inc > 3157221000.0 GROUP BY Income_Statement.Inv_Inc HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me with the stock name and the purchase of resale financial assets value, sorted by the deferred tax liability value in descending order?",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Buyback_FAs FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Def_IT_Liab DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock codes whose payable employee compensation is less than or equal to 11341000000.0, in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Emp_Comp_PAY <= 11341000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have other comprehensive income greater than 2258000000.0 for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Compre_Inc > 2258000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the most frequent value of operating income?",
    "query": "SELECT Income_Statement.Oper_Rev FROM Income_Statement GROUP BY Income_Statement.Oper_Rev ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all stock codes for records with loss on disposal of non current assets less than or equal to 14489125932, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Loss_Disposal_Nonc_Assets <= 14489125932 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a dividend distribution or profit payment date before 1980?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Distribute_Dividends_Profits < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average operating profit for each cash paid for interest, handling fees, and commissions value.",
    "query": "SELECT avg(Income_Statement.Oper_Profit) , Cash_Flow_Statement.Cash_Pay_Int_Fees_Com FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cash_Pay_Int_Fees_Com"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there for each company name? please list them in ascending order of count.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the total liabilities and owner's equity along with the accounts receivable investment for records where the total liabilities and owner's equity is less than 10739836000000.0.",
    "query": "SELECT Balance_Sheet.Tot_Liab_Own_Eq , Balance_Sheet.Recv_Invest FROM Balance_Sheet WHERE Balance_Sheet.Tot_Liab_Own_Eq < 10739836000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the average business and management fees for each subtotal of cash outflows from financing activities.",
    "query": "SELECT avg(Income_Statement.Gen_n_Admin_Exps) , Cash_Flow_Statement.Fin_CF_Out_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Fin_CF_Out_Sub"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks where deferred tax liability is 242000000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Def_IT_Liab <= 242000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the information available in the records.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of stocks whose received investment is not equal to 41326524424.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Recv_Invest != 41326524424"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the final cash equivalents value that has at least 4 records whose received other cash related to investment activities is above 19931846953.0.",
    "query": "SELECT Cash_Flow_Statement.Final_Cash_Equiv FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Recv_Other_Invest > 19931846953.0 GROUP BY Cash_Flow_Statement.Final_Cash_Equiv HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code and total comprehensive income for all records.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Tot_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records for each stock have a net profit greater than 12365000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Net_Profit > 12365000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the interest expenses and losses from changes in fair value of all records.",
    "query": "SELECT Income_Statement.Int_Exp , Cash_Flow_Statement.Fair_Value_Change_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the deferred tax liability values of those who have derivative financial assets more than 10, and group them by deferred tax liability.",
    "query": "SELECT Balance_Sheet.Def_IT_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Def_IT_Liab HAVING sum(Balance_Sheet.Deriv_Assets) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average other business income, minimum handling fees and commission expenses, and minimum total profit across all records.",
    "query": "SELECT AVG (Income_Statement.Oth_Biz_Inc) , MIN (Income_Statement.Fee_Com_Exp), MIN (Income_Statement.Tot_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the list of cash inflows from investment activities in the cash flow statement.",
    "query": "SELECT Cash_Flow_Statement.Inv_CF_In_Sub FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please provide the securities code and non-operating expenses for each record.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Non_Op_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities codes of the top three stocks with the highest cash paid for the purchase and construction of fixed assets, intangible assets, and other long-term assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose investment income from associates and joint ventures is not equal to 1556000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Inv_Inc_Assoc_JV != 1556000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of the 8 stocks with the least occurrences in the database.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the total liabilities and owner's equity values, along with the frequency of each value.",
    "query": "SELECT Balance_Sheet.Tot_Liab_Own_Eq , count(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab_Own_Eq"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest value of trading financial liabilities.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Trad_Fin_Liab DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the least frequent securities code in our records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have distinct values in the column Trad_FAs?",
    "query": "SELECT count(DISTINCT Balance_Sheet.Trad_FAs) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the value of cash received from absorbing investments that appears 14 times.",
    "query": "SELECT Cash_Flow_Statement.Absorb_Investment FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Absorb_Investment HAVING COUNT (*) = 14"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest value of minority shareholders' equity?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Minor_Int_Eq DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the highest, lowest and average income from changes in fair value across all records.",
    "query": "SELECT MAX (Income_Statement.FV_Change_Inc) , MIN (Income_Statement.FV_Change_Inc), AVG (Income_Statement.FV_Change_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the value of each subtotal of cash inflows from investment activities along with the count of distinct debt converted to capital and the total number of records.",
    "query": "SELECT Cash_Flow_Statement.Inv_CF_In_Sub , count(DISTINCT Cash_Flow_Statement.Debt_Converted_Capital) , count(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Inv_CF_In_Sub"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose treasury stock is less than or equal to 18462901041, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Treas_Stock <= 18462901041 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different cash payments for investment do we have for each stock?",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Cash_Flow_Statement.Cash_Pay_Invest) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks and their corresponding income tax expenses.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Income_Tax_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock names of records where the total comprehensive income attributable to shareholders of the parent company is not equal to 26302000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc != 26302000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the securities codes that have at least 5 records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average investment income from associates and joint ventures for each value in the 'other' column.",
    "query": "SELECT avg(Income_Statement.Inv_Inc_Assoc_JV) , Cash_Flow_Statement.Other FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Other"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of each stock, along with the number of different other cash payments related to financing activities and the total number of records for that stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.Cash_Pay_Fin_Other) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net increase in customer loans and advances and the total cash received from other investment activities for each record.",
    "query": "SELECT Cash_Flow_Statement.Cust_Loans_Net_Inc , SUM (Cash_Flow_Statement.Recv_Other_Invest) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cust_Loans_Net_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the security code of the three largest purchase of resale financial assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Buyback_FAs DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the top 5 most common values of purchase of resale financial assets.",
    "query": "SELECT Balance_Sheet.Buyback_FAs FROM Balance_Sheet GROUP BY Balance_Sheet.Buyback_FAs ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the intangible asset amortization value and the total comprehensive income of the top 5 records with the highest intangible asset amortization.",
    "query": "SELECT Cash_Flow_Statement.Intangible_Asset_Amortization , Income_Statement.Tot_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Intangible_Asset_Amortization DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the cash payment related to financing activities and the impact of exchange rate changes on cash and cash equivalents, for records with subsidiary payments to minority shareholders either above 2856081728 or below 2856081728.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Fin_Other , Cash_Flow_Statement.FX_Rate_Change_Cash FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Subsidiary_Pay_Minority > 2856081728 OR Cash_Flow_Statement.Subsidiary_Pay_Minority < 2856081728"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the fee and commission income values, along with the count of records for each value.",
    "query": "SELECT Income_Statement.Fee_Com_Inc , COUNT(*) FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, show me the number of records where cash received from subsidiaries absorbing minority shareholder investments is greater than 43203785532.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Subsidiary_Absorb_Minority > 43203785532 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all other assets values that appeared more than twice.",
    "query": "SELECT Balance_Sheet.Oth_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Oth_Assets HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the assets impairment loss in descending order of interest expenses.",
    "query": "SELECT Income_Statement.Assets_Imp_Loss FROM Income_Statement ORDER BY Income_Statement.Int_Exp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the securities code and other business income for each record.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Oth_Biz_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest increase in operating payables.",
    "query": "SELECT * FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Oper_Payables_Increase DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock code and depreciation of fixed assets values for records that have 5 or more financial expenses in cash flow statement.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.CF_Stmt_Fin_Expenses HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me assets impairment loss and minor interest shareholders' comprehensive income for all records with assets impairment loss less than 732000000.0.",
    "query": "SELECT Income_Statement.Assets_Imp_Loss , Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Income_Statement WHERE Income_Statement.Assets_Imp_Loss < 732000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, show me the stock code, the number of total assets, and the total number of records associated with that stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Balance_Sheet.Tot_Assets) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with assets impairment loss more than 732000000.0 do we have for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Assets_Imp_Loss > 732000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose fixed assets value is different from 106071000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Fix_Assets != 106071000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have a securities code containing '600015.SH'?",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600015.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and the number of records for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have cash payments related to other operating activities exceeding 10878000000.0 and net increase in cash and cash equivalents greater than 66167000000.0?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Op_Other > 10878000000.0 AND Cash_Flow_Statement.Net_CF_Cash_Equiv > 66167000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the two securities with the largest cash received from issuing bonds.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Issue_Bonds DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest noble metal value?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Prec_Metals DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the minimum operating expenses for each non-operating revenue?",
    "query": "SELECT MIN (Income_Statement.Oper_Exp) , Income_Statement.Non_Op_Rev FROM Income_Statement GROUP BY Income_Statement.Non_Op_Rev"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of cash paid to and on behalf of employees and operating profit, where cash paid to and on behalf of employees is greater than 16499000000.0?",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Emp , Income_Statement.Oper_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Emp > 16499000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the number of records and distinct closing balance of cash equivalents for each stock name.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.Cash_Eq_End_Period) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have long-term amortization value not equal to 632000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Longterm_Amortization != 632000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of general risk preparation that appears most frequently?",
    "query": "SELECT Balance_Sheet.Gen_Risk_Res FROM Balance_Sheet GROUP BY Balance_Sheet.Gen_Risk_Res ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average asset impairment loss for each value of cash outflows from investment activities.",
    "query": "SELECT avg(Income_Statement.Assets_Imp_Loss) , Cash_Flow_Statement.Inv_CF_Out_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Inv_CF_Out_Sub"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all securities codes for records having other comprehensive income values less than or equal to 1375220000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Compre_Inc <= 1375220000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes of the top two records with the highest income from changes in fair value.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.FV_Change_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose net increase in borrowing funds from other financial institutions is not equal to 10549826640.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_IB_Borrowings != 10549826640"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net increase in cash and cash equivalents and their total diluted earnings per share.",
    "query": "SELECT Cash_Flow_Statement.IM_NCF_Cash_Eq , SUM (Income_Statement.Diluted_EPS) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.IM_NCF_Cash_Eq"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the opening balance of cash equivalents and the loss from changes in fair value for records whose net increase in customer loans and advances is either greater than 265774000000.0 or shorter than 147416667000.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_Eq_Begin_Period , Cash_Flow_Statement.Fair_Value_Change_Loss FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cust_Loans_Net_Inc > 265774000000.0 OR Cash_Flow_Statement.Cust_Loans_Net_Inc < 147416667000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average interest expenses, the minimum value of taxes and surcharges, and the minimum value of capital converted from debt across all records.",
    "query": "SELECT AVG (Income_Statement.Int_Exp) , MIN (Income_Statement.Tax_n_Surs), MIN (Cash_Flow_Statement.Debt_Converted_Capital) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the number of records and different company names do we have for each stock, along with the number of cash payments related to other operating activities.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.Cash_Pay_Op_Other) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a value of financial assets sold for repurchase less than 1980?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Sell_Rep_FAs < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of the top three securities, based on the highest values of total comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me loans and advances values that have at least 4 records where cash and deposits with central bank is larger than 176103000000.0.",
    "query": "SELECT Balance_Sheet.Loans_Adv FROM Balance_Sheet WHERE Balance_Sheet.Cash_CB > 176103000000.0 GROUP BY Balance_Sheet.Loans_Adv HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of stocks that have other business income not equal to 5676000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Inc != 5676000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the other comprehensive income value that appears exactly 13 times?",
    "query": "SELECT Income_Statement.Oth_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Oth_Compre_Inc HAVING COUNT (*) = 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the top five securities codes with the most number of records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or have an investment income from associates and joint ventures equal to 31428654111.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Income_Statement.Inv_Inc_Assoc_JV = 31428654111.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average trading financial liabilities, the minimum interest receivable, and the minimum issuance of loans and advances of all records.",
    "query": "SELECT AVG (Balance_Sheet.Trad_Fin_Liab) , MIN (Balance_Sheet.Int_Receiv), MIN (Balance_Sheet.Loans_Adv) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the name of stocks and other cash payments related to financing activities sorted by the amount of cash received from subsidiaries absorbing minority shareholder investments in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Cash_Pay_Fin_Other FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Subsidiary_Absorb_Minority DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me the securities code and investment loss of records, sorted by their inventory decrease in descending order?",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Investment_Loss FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inventory_Decrease DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock names have four or more records in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities codes of the records whose net increase in borrowings from the central bank is 35776000000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_Borrowings_CB <= 35776000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of issue bonds and net profit in cash flow statement.",
    "query": "SELECT Cash_Flow_Statement.Issue_Bonds , Cash_Flow_Statement.CF_Stmt_Net_Income FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the securities code of records that have a different inventory decrease value than 32207893333.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inventory_Decrease != 32207893333"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me how many unique assets impairment loss values correspond to each net increase in borrowings from the central bank.",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_Borrowings_CB , COUNT (DISTINCT Income_Statement.Assets_Imp_Loss) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Net_Inc_Borrowings_CB"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock name \"China Mingsheng Bank\" or an operating profit of 22470290000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Income_Statement.Oper_Profit = 22470290000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all the opening balances of cash equivalents in the cash flow statement records.",
    "query": "SELECT Cash_Flow_Statement.Initial_Cash_Equiv FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with the stock code 600036.SH or the operating profit of 24791000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Income_Statement.Oper_Profit = 24791000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the loss on scrapping of fixed assets and the total basic earnings per share of each record.",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Scrap_Loss , SUM (Income_Statement.Basic_EPS) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Fixed_Asset_Scrap_Loss"
  },
  {
    "db_id": "Bank_Financials",
    "question": "get the average net increase in cash and cash equivalents, the smallest fee and commission income, and the smallest subtotal of cash inflows from financing activities for all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Net_CF_Cash_Equiv) , MIN (Income_Statement.Fee_Com_Inc), MIN (Cash_Flow_Statement.Fin_CF_In_Sub) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the Stk_Code of the least frequently occurring record in the table, sorted by their frequency?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code, number of different net increase in cash and cash equivalents and total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Cash_Flow_Statement.IM_NCF_Cash_Eq) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the operating cash flow subtotal and the depreciation of fixed assets, depletion of oil and gas assets, and depreciation of productive biological assets for the top five records with the highest operating cash flow subtotal.",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Sub , Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Op_CF_Sub DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the investment real estate value for records with derivative financial liabilities between 2449116000.0 and 2449116000.0.",
    "query": "SELECT Balance_Sheet.Inv_Real_Estate FROM Balance_Sheet WHERE Balance_Sheet.Deriv_Liab BETWEEN 2449116000.0 AND 2449116000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two securities with the highest cash paid for the purchase and construction of fixed assets, intangible assets, and other long-term assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information in cash flow statement where cash paid for investment is negative.",
    "query": "SELECT * FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Invest < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of minority interest that appeared less than three times?",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss FROM Income_Statement GROUP BY Income_Statement.Minor_Int_Inc_Loss HAVING COUNT (*) < 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top two companies in terms of other cash payments related to investment activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Inv_Other DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have exactly 13 records in our database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) = 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the different values of increase in deferred income tax liabilities in ascending order of their frequency?",
    "query": "SELECT Cash_Flow_Statement.DIT_Liability_Increase FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.DIT_Liability_Increase ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the stock codes in descending order, where the value of lending funds is less than or equal to 188526000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Lending_Funds <= 188526000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have net cash flow generated from operating activities exceeding 74145000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.IM_NCF_Oper_Activities > 74145000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either Huaxia Bank as their company name or 250981000000.0 as their borrowing funds from other financial institutions value?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Balance_Sheet.Bor_Funds_Oth_FIs = 250981000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of top three securities, in terms of cash received from other financing activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Recv_Other_Fin DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fee and commission income and other business costs for records with a fee and commission income less than 3157221000.0.",
    "query": "SELECT Income_Statement.Fee_Com_Inc , Income_Statement.Oth_Biz_Costs FROM Income_Statement WHERE Income_Statement.Fee_Com_Inc < 3157221000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the value of decrease in inventory along with the number of records associated with each value.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease , count(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Inventory_Decrease"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all securities codes that appear less than 11 times in the records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) < 11"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the information in income statement where the assets impairment loss is negative.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Assets_Imp_Loss < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with a stock code of 600000.SH or a value of issuance of loans and advances equal to 4322267000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Balance_Sheet.Loans_Adv = 4322267000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the taxes and surcharges of records with net income from handling fees and commissions between 3667000000.0 and 47091000000.0?",
    "query": "SELECT Income_Statement.Tax_n_Surs FROM Income_Statement WHERE Income_Statement.Fee_Com_Net_Inc BETWEEN 3667000000.0 AND 47091000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many records have cash outflows from financing activities greater than 42937000000.0 for each stock code.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fin_CF_Out_Sub > 42937000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the top 5 securities codes with the highest frequency of records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest payable employee compensation?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Emp_Comp_PAY DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock codes that have borrowing from the Central Bank less than or equal to 180971000000.0 in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Bor_CB <= 180971000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the stock name Bank of Jiangsu or the total owner's equity attributable to the parent company equal to 613419000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Balance_Sheet.Own_Eq_Attr_Parent = 613419000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the investment losses and the total cash payments related to financing activities of each record.",
    "query": "SELECT Cash_Flow_Statement.Investment_Loss , SUM (Cash_Flow_Statement.Cash_Pay_Fin_Other) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Investment_Loss"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different operating profits do we have for each stock?",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Oper_Profit) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600000.SH or a total comprehensive income of 78238000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Income_Statement.Tot_Compre_Inc = 78238000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the operating expenses of records whose fee and commission income is between 13441000000.0 and 13441000000.0.",
    "query": "SELECT Income_Statement.Oper_Exp FROM Income_Statement WHERE Income_Statement.Fee_Com_Inc BETWEEN 13441000000.0 AND 13441000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the highest frequency in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent stock names in the records table, sorted by their frequency in ascending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me with all the details of the record with the highest value of lending funds?",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Lending_Funds DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the non-operating revenue and the total comprehensive income attributable to minority shareholders for records with non-operating revenue greater than 78000000.0.",
    "query": "SELECT Income_Statement.Non_Op_Rev , Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Income_Statement WHERE Income_Statement.Non_Op_Rev > 78000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the names of the top three companies with the highest intangible assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Intang_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock name, provide a list of records that have a net cash flow generated from investment activities above -2693000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Inv > -2693000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have an opening balance of cash equivalents different from 128305000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Initial_Cash_Equiv != 128305000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the closing balance of cash where at least four records have cash inflows from investment activities greater than 954583000000.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_End_Period FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Inv_CF_In_Sub > 954583000000.0 GROUP BY Cash_Flow_Statement.Cash_End_Period HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me all the securities codes where the operating revenue is not equal to 47642000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Rev != 47642000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all stock codes in descending alphabetical order, whose total owner's equity is less than or equal to 307617000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Own_Eq <= 307617000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all other comprehensive income values that have a total loss on disposal of non current assets greater than 10.",
    "query": "SELECT Income_Statement.Oth_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Oth_Compre_Inc HAVING sum(Income_Statement.Loss_Disposal_Nonc_Assets) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the largest number of records in the database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average closing balance of cash at the end of the period for each opening balance of cash equivalents.",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_End_Period) , Cash_Flow_Statement.Cash_Eq_Begin_Period FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Eq_Begin_Period"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the general and administrative expenses from income statement, sorted in descending order by non-operating revenue.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Income_Statement ORDER BY Income_Statement.Non_Op_Rev DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the highest frequency of occurrence in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with a stock code of \"600016.SH\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Code = \"600016.SH\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all other business income and operating profit from the records where other business income is less than 1376000000.0.",
    "query": "SELECT Income_Statement.Oth_Biz_Inc , Income_Statement.Oper_Profit FROM Income_Statement WHERE Income_Statement.Oth_Biz_Inc < 1376000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the total comprehensive income and net cash received from disposal of fixed assets, intangible assets, and other long-term assets, where the taxes and surcharges are either greater than 1510000000.0 or shorter than 1510000000.0.",
    "query": "SELECT Income_Statement.Tot_Compre_Inc , Cash_Flow_Statement.Cash_Disposal_Assets FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Tax_n_Surs > 1510000000.0 OR Income_Statement.Tax_n_Surs < 1510000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the stock code of the record with the least frequent occurrence?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of stocks whose basic earnings per share is less than or equal to 0.58, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Basic_EPS <= 0.58 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of two stocks with the highest trading financial assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Trad_FAs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with a stock code of 600036.SH or other business income of 1376000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Income_Statement.Oth_Biz_Inc = 1376000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the loss on disposal of non-current assets and non-operating income for the top five records with the highest loss on disposal of non-current assets.",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets , Income_Statement.Non_Op_Rev FROM Income_Statement ORDER BY Income_Statement.Loss_Disposal_Nonc_Assets DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock names and income tax expenses of all records, sorted by taxes and surcharges in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Income_Tax_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Tax_n_Surs DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there for each value of total liabilities and owner's equity?",
    "query": "SELECT Balance_Sheet.Tot_Liab_Own_Eq , COUNT (*) FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab_Own_Eq ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, give me the number of records with bonds payable and the total number of records.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Balance_Sheet.Bonds_PAY) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the treasury stock value in the record with the lowest occurrence of treasury stock?",
    "query": "SELECT Balance_Sheet.Treas_Stock FROM Balance_Sheet GROUP BY Balance_Sheet.Treas_Stock ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average investment losses, minimum operating revenue and minimum closing balance of cash equivalents for all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Investment_Loss) , MIN (Income_Statement.Oper_Rev), MIN (Cash_Flow_Statement.Final_Cash_Equiv) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest, and average non-operating income across all records?",
    "query": "SELECT MAX (Income_Statement.Non_Op_Rev) , MIN (Income_Statement.Non_Op_Rev), AVG (Income_Statement.Non_Op_Rev) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an investment loss of -11281000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Investment_Loss = -11281000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the name of the stock with the fewest occurrences in the database.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the decrease in deferred income tax assets for records whose loss on disposal of non-current assets is equal to 29050967828.",
    "query": "SELECT Cash_Flow_Statement.DIT_Asset_Reduction FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Loss_Disposal_Nonc_Assets BETWEEN 29050967828 AND 29050967828"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the interbank deposits values that appear exactly 4 times?",
    "query": "SELECT Balance_Sheet.IB_Deposits FROM Balance_Sheet GROUP BY Balance_Sheet.IB_Deposits HAVING COUNT (*) = 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have a purchase of resale financial assets different from 277862000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Buyback_FAs != 277862000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the subtotal of cash inflows from operating activities along with the total interest expenses for each of them.",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Sub , SUM (Income_Statement.Int_Exp) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Op_CF_Sub"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a cash payment related to investment activities equal to 4850068159?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Inv_Other = 4850068159"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the details in cash flow statement where the subtotal of cash inflows from operating activities is less than zero.",
    "query": "SELECT * FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Op_CF_Sub < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the purchase of resale financial assets and how many times each value appears in the records.",
    "query": "SELECT Balance_Sheet.Buyback_FAs , count(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Buyback_FAs"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the number of records and different basic earnings per share values for each stock name, along with the stock name itself.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Income_Statement.Basic_EPS) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the count of records in the balance sheet table?",
    "query": "SELECT count(*) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average income from changes in fair value, the minimum value of taxes and surcharges, and the minimum value of other business income across all records.",
    "query": "SELECT AVG (Income_Statement.FV_Change_Inc) , MIN (Income_Statement.Tax_n_Surs), MIN (Income_Statement.Oth_Biz_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of stocks whose received investment value is lower than or equal to 43118614269, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Recv_Invest <= 43118614269 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the information available in balance sheet for all records.",
    "query": "SELECT * FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the maximum and minimum net profit attributable to the owner of the parent company across all records.",
    "query": "SELECT MAX (Income_Statement.Attr_Parent_Net_Profit) , MIN (Income_Statement.Attr_Parent_Net_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the details of the record with the highest payable employee compensation.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Emp_Comp_PAY DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose decrease in deferred income tax assets is smaller than or equal to 26867897326.0, sorted in descending order of stock names.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.DIT_Asset_Reduction <= 26867897326.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest estimated liabilities.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Est_Liab DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top two stocks with the highest impact of exchange rate changes on cash and cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.FX_Rate_Change_Cash DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the highest, lowest and average net increase in deposits with central bank and interbank funds.",
    "query": "SELECT MAX (Cash_Flow_Statement.CenBank_Interbank_Net_Inc) , MIN (Cash_Flow_Statement.CenBank_Interbank_Net_Inc), AVG (Cash_Flow_Statement.CenBank_Interbank_Net_Inc) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose opening balance of cash equivalents is less than or equal to 26692458356.0, sorted in descending order of their names.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Eq_Begin_Period <= 26692458356.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of stocks and the amortization of long-term deferred expenses in cash flow statement.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Longterm_Amortization FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of the two companies with the highest value of derivative financial liabilities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Deriv_Liab DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a borrowing funds value of 106646000000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Bor_Funds_Oth_FIs = 106646000000.0 OR Balance_Sheet.Bor_Funds_Oth_FIs = 106646000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the impairment provision of assets in descending order of investment income.",
    "query": "SELECT Cash_Flow_Statement.Asset_Impairment_Dec FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Investment_Income DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the least occurrences in our records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent purchase of resale financial assets values, sorted by their frequency in ascending order?",
    "query": "SELECT Balance_Sheet.Buyback_FAs FROM Balance_Sheet GROUP BY Balance_Sheet.Buyback_FAs ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two stocks with the highest other comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oth_Compre_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list me the stock codes of records where the operating expenses are not equal to 16372581000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Exp != 16372581000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me cash paid for the purchase and construction of fixed assets, intangible assets, and other long-term assets, along with their frequency of appearance.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Assets , count(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average cash payment for other investment activities for each net increase in customer deposits and interbank deposits value.",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_Pay_Inv_Other) , Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock code and subtotal of cash inflows from financing activities for all records, sorted by cash paid for interest, handling fees, and commissions in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Fin_CF_In_Sub FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Int_Fees_Com DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all the records that have depreciation of fixed assets, depletion of oil and gas assets, and depreciation of productive biological assets greater than 699026000.0 for each company name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec > 699026000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fixed asset scrap loss and inventory decreases for records with fixed asset scrap loss exceeding 3601381831.",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Scrap_Loss , Cash_Flow_Statement.Inventory_Decrease FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Fixed_Asset_Scrap_Loss > 3601381831"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a total profit greater than 26567000000.0 and a net cash flow generated from investment activities greater than -62141000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Tot_Profit > 26567000000.0 AND Cash_Flow_Statement.Net_CF_Inv > -62141000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the value of foreign exchange rate change on cash that occurred the most.",
    "query": "SELECT Cash_Flow_Statement.FX_Rate_Change_Cash FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.FX_Rate_Change_Cash ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities have at least 5 records in the database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks that contain the phrase 'Shanghai Pudong Development Bank'.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%Shanghai Pudong Development Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of the stock, closing balance of cash equivalents, and increase in deferred income tax liabilities for each record.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Final_Cash_Equiv , Cash_Flow_Statement.DIT_Liability_Increase FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or an operating profit of 26578000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Income_Statement.Oper_Profit = 26578000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, provide the stock code itself, the number of distinct opening balances of cash equivalents, and the total count of records for that stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Cash_Flow_Statement.Cash_Eq_Begin_Period) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me other comprehensive income and non-operating expenses for records where other business costs are either greater than 57421000.0 or less than 2985000000.0.",
    "query": "SELECT Income_Statement.Oth_Compre_Inc , Income_Statement.Non_Op_Exp FROM Income_Statement WHERE Income_Statement.Oth_Biz_Costs > 57421000.0 OR Income_Statement.Oth_Biz_Costs < 2985000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock code has the highest number of occurrences in the database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "fetch me the diluted earnings per share of records whose opening balance of cash equivalents is between 63953659000.0 and 567198000000.0.",
    "query": "SELECT Income_Statement.Diluted_EPS FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Initial_Cash_Equiv BETWEEN 63953659000.0 AND 567198000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the smallest number of records associated with each closing balance of cash and cash equivalents?",
    "query": "SELECT Cash_Flow_Statement.Final_Cash_Equiv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Final_Cash_Equiv ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the highest number of records in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have comprehensive income attributable to minority shareholders of either 808000000.0 or 530000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc = 808000000.0 OR Income_Statement.Minor_Int_Shareholders_Compre_Inc = 530000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest loss on scrapping fixed assets?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fixed_Asset_Scrap_Loss DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the closing balance of cash for records whose taxes and surcharges lie between 1510000000.0 and 534000000.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_End_Period FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Tax_n_Surs BETWEEN 1510000000.0 AND 534000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me the average and maximum net increase in cash and cash equivalents for all records?",
    "query": "SELECT avg(Cash_Flow_Statement.IM_NCF_Cash_Eq), max(Cash_Flow_Statement.IM_NCF_Cash_Eq) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all company names whose non-operating income is not equal to 78000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Non_Op_Rev != 78000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the stock names and closing balance of cash equivalents for records that have at least 5 other business costs.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Final_Cash_Equiv FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Oth_Biz_Costs HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the operating revenue value with the highest frequency?",
    "query": "SELECT Income_Statement.Oper_Rev FROM Income_Statement GROUP BY Income_Statement.Oper_Rev ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average closing balance of cash equivalents in our records?",
    "query": "SELECT MAX (Cash_Flow_Statement.Final_Cash_Equiv) , MIN (Cash_Flow_Statement.Final_Cash_Equiv), AVG (Cash_Flow_Statement.Final_Cash_Equiv) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks with borrowing funds less than or equal to 250981000000.0, sorted in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Bor_Funds_Oth_FIs <= 250981000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which five stocks have the highest frequency across all stock names?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the highest interbank deposits from other financial institutions.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.IB_Dep_Oth_FIs DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three stocks with the highest values of minor interest income loss.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Minor_Int_Inc_Loss DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the average value of cash received from other financing activities, grouped by the amortization of intangible assets.",
    "query": "SELECT avg(Cash_Flow_Statement.Recv_Other_Fin) , Cash_Flow_Statement.Intangible_Asset_Amortization FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Intangible_Asset_Amortization"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest depreciation of fixed assets?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return all columns in the basic_info table.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average net profit for each value of total comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT avg(Income_Statement.Net_Profit) , Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the least frequent value of paid-in capital in our records?",
    "query": "SELECT Balance_Sheet.Paid_Up_Cap FROM Balance_Sheet GROUP BY Balance_Sheet.Paid_Up_Cap ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the number of records for each stock name that has lending funds greater than 87641076000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Lending_Funds > 87641076000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which IM_NCF_Cash_Eq values appear more than once?",
    "query": "SELECT Cash_Flow_Statement.IM_NCF_Cash_Eq FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.IM_NCF_Cash_Eq HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the highest and lowest payable employee compensation values in our records.",
    "query": "SELECT MAX (Balance_Sheet.Emp_Comp_PAY) , MIN (Balance_Sheet.Emp_Comp_PAY) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600015.SH or a basic earnings per share of 0.58?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Income_Statement.Basic_EPS = 0.58"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Count the number of records with either Stk_Code equal to 600036.SH or Net_Profit equal to 23972000000.0.",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Income_Statement.Net_Profit = 23972000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the two stocks with the highest subtotal of cash outflows from operating activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Op_CF_Out_Sub DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an income from changes in fair value greater than 4223000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.FV_Change_Inc > 4223000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which investment income from associates and joint ventures values appear less than twice in our records?",
    "query": "SELECT Income_Statement.Inv_Inc_Assoc_JV FROM Income_Statement GROUP BY Income_Statement.Inv_Inc_Assoc_JV HAVING COUNT (*) < 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of stocks that have total comprehensive income not equal to 25873000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Compre_Inc != 25873000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which tax and surcharges value has the most number of records?",
    "query": "SELECT Income_Statement.Tax_n_Surs FROM Income_Statement GROUP BY Income_Statement.Tax_n_Surs ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have non operating income before 1980?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Non_Op_Rev < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes and diluted earnings per share of all records, sorted by decreasing loss on disposal of non current assets.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Diluted_EPS FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Loss_Disposal_Nonc_Assets DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock names of records with cash received for interest, handling fees, and commissions different from 57175340000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Int_Commission_Collected != 57175340000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the comprehensive income attributable to minority shareholders that have more than 4 records with debt converted to capital exceeding 2559439174.",
    "query": "SELECT Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Debt_Converted_Capital > 2559439174 GROUP BY Income_Statement.Minor_Int_Shareholders_Compre_Inc HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the total comprehensive income and minority interest income (or loss) of records whose business and management fees are either above 8121690000.0 or below 51877000000.0.",
    "query": "SELECT Income_Statement.Tot_Compre_Inc , Income_Statement.Minor_Int_Inc_Loss FROM Income_Statement WHERE Income_Statement.Gen_n_Admin_Exps > 8121690000.0 OR Income_Statement.Gen_n_Admin_Exps < 51877000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the largest value of accounts receivable investment.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Recv_Invest DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the asset impairment provision value that has the highest frequency of occurrence?",
    "query": "SELECT Cash_Flow_Statement.Asset_Impairment_Dec FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Asset_Impairment_Dec ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the maximum, minimum, and average values of cash payments related to investment activities in our database?",
    "query": "SELECT MAX (Cash_Flow_Statement.Cash_Pay_Inv_Other) , MIN (Cash_Flow_Statement.Cash_Pay_Inv_Other), AVG (Cash_Flow_Statement.Cash_Pay_Inv_Other) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return all the columns available in the records.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information available in balance sheet records.",
    "query": "SELECT * FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of stocks and the count of unique net profit values for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Cash_Flow_Statement.CF_Stmt_Net_Income) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock code and investment income from associates and joint ventures, ordered by exchange gains in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Inv_Inc_Assoc_JV FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Exch_Gain_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average value of other business costs in all records?",
    "query": "SELECT MAX (Income_Statement.Oth_Biz_Costs) , MIN (Income_Statement.Oth_Biz_Costs), AVG (Income_Statement.Oth_Biz_Costs) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes that contain the substring '600016.SH' in their code.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600016.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of top three securities, in terms of impact of exchange rate changes on cash and cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.FX_Rate_Change_Cash DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the count of records along with their stock names, where other business costs exceeds 2985000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Costs > 2985000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the number of records and distinct interbank and other financial institutions deposits for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Balance_Sheet.IB_Dep_Oth_FIs) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of net profit and comprehensive income attributable to minority shareholders for records where net profit exceeds 76437000000.0?",
    "query": "SELECT Income_Statement.Net_Profit , Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Income_Statement WHERE Income_Statement.Net_Profit > 76437000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the financing cash inflow subtotals and indirect method net cash flow generated from operating activities for records where the financing cash inflow subtotal is greater than 364317625000.0.",
    "query": "SELECT Cash_Flow_Statement.Fin_CF_In_Sub , Cash_Flow_Statement.IM_NCF_Oper_Activities FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Fin_CF_In_Sub > 364317625000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the stock codes of records with total assets less than or equal to 4098550000000.0, sorted in descending order?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Assets <= 4098550000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net increase in borrowing funds from other financial institutions and the count of distinct non-operating revenues for each value of net increase in borrowing funds from other financial institutions.",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_IB_Borrowings , COUNT (DISTINCT Income_Statement.Non_Op_Rev) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Net_Inc_IB_Borrowings"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose impact of exchange rate changes on cash and cash equivalents is not equal to 3636000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.FX_Rate_Change_Cash != 3636000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have net profit in cash flow statement greater than 17625964000.0 and interest expenses in income statement above 35036562000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Net_Income > 17625964000.0 AND Income_Statement.Int_Exp > 35036562000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the securities codes of the top two records with the highest deposits from interbank and other financial institutions.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.IB_Dep_Oth_FIs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of the two records with the highest non-operating expenses.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Non_Op_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all net cash flow generated from investment activities values, which have appeared more than four times with an operating cash outflow subtotal greater than 251429539000.0.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Inv FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Op_CF_Out_Sub > 251429539000.0 GROUP BY Cash_Flow_Statement.Net_CF_Inv HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the net interest income values that have five or more records?",
    "query": "SELECT Income_Statement.Net_Int_Inc FROM Income_Statement GROUP BY Income_Statement.Net_Int_Inc HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of stock names and exchange gains in descending order of other business costs.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Exch_Gain_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Oth_Biz_Costs DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of stocks with income from changes in fair value less than or equal to 4319000000.0, in descending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.FV_Change_Inc <= 4319000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have cash paid for interest, handling fees, and commissions more than 26806028000.0, and total profit more than 26567000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Int_Fees_Com > 26806028000.0 AND Income_Statement.Tot_Profit > 26567000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the average net profit in cash flow statement, the smallest business and management fees in income statement, and the smallest cash inflow from investment activities in cash flow statement.",
    "query": "SELECT AVG (Cash_Flow_Statement.CF_Stmt_Net_Income) , MIN (Income_Statement.Gen_n_Admin_Exps), MIN (Cash_Flow_Statement.Inv_CF_In_Sub) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and the count of unique lending funds values for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Balance_Sheet.Lending_Funds) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the subtotal of cash inflows from financing activities for records where income from changes in fair value is null.",
    "query": "SELECT Cash_Flow_Statement.Fin_CF_In_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.FV_Change_Inc IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the interest expenses of records whose non-operating expenses exceed 10, grouped by interest expenses.",
    "query": "SELECT Income_Statement.Int_Exp FROM Income_Statement GROUP BY Income_Statement.Int_Exp HAVING sum(Income_Statement.Non_Op_Exp) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have a securities code that contains '600000.SH'?",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600000.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the largest derivative financial assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Deriv_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash paid for investment value that only appeared once.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Invest FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Invest HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the minimum paid-in capital for each long-term equity investment.",
    "query": "SELECT MIN (Balance_Sheet.Paid_Up_Cap) , Balance_Sheet.LT_Eq_Invest FROM Balance_Sheet GROUP BY Balance_Sheet.LT_Eq_Invest"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values of increase in operating payables do we have in our records?",
    "query": "SELECT count(DISTINCT Cash_Flow_Statement.Oper_Payables_Increase) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest financial expenses?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.CF_Stmt_Fin_Expenses DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the capital reserves values that appear more than twice.",
    "query": "SELECT Balance_Sheet.Cap_Reserves FROM Balance_Sheet GROUP BY Balance_Sheet.Cap_Reserves HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have investment income less than or equal to 5883075000.0, in descending order of their names?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Inv_Inc <= 5883075000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have stock code 600016.SH or cash outflow from operating activities equal to 419645000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Cash_Flow_Statement.Op_CF_Out_Sub = 419645000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock code and the number of times each stock code appears in the database.",
    "query": "SELECT Basic_Info.Stk_Code , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks and their corresponding minority shareholders' equity where the treasury stock is at least 5.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Minor_Int_Eq FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Balance_Sheet.Treas_Stock HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a loss on disposal of fixed assets more than -1000000.0 and closing balance of cash equivalents more than 284026000000.0?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec > -1000000.0 AND Cash_Flow_Statement.Final_Cash_Equiv > 284026000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the fair value change income of the most frequently occurred record?",
    "query": "SELECT Income_Statement.FV_Change_Inc FROM Income_Statement GROUP BY Income_Statement.FV_Change_Inc ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all the information available in the income statement for all records.",
    "query": "SELECT * FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the interest payable and total owner's equity attributable to the parent company for records with interest payable higher than 10978682435.",
    "query": "SELECT Balance_Sheet.Int_Pay , Balance_Sheet.Own_Eq_Attr_Parent FROM Balance_Sheet WHERE Balance_Sheet.Int_Pay > 10978682435"
  },
  {
    "db_id": "Bank_Financials",
    "question": "fetch all records with unique values of other assets.",
    "query": "SELECT distinct(Balance_Sheet.Oth_Assets) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the non-operating expenses and net cash flow generated from investment activities only for records with at least 5 investment income from associates and joint ventures.",
    "query": "SELECT Income_Statement.Non_Op_Exp , Cash_Flow_Statement.Net_CF_Inv FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Inv_Inc_Assoc_JV HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the investment income value of all records that do not have a value for net profit attributable to the owner of the parent company.",
    "query": "SELECT Income_Statement.Inv_Inc FROM Income_Statement WHERE Income_Statement.Attr_Parent_Net_Profit IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock code that has taxes and surcharges above 534000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tax_n_Surs > 534000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an increase in operating payables equal to 470726000000.0 or 386459000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Oper_Payables_Increase = 470726000000.0 OR Cash_Flow_Statement.Oper_Payables_Increase = 386459000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the securities code for records whose total comprehensive income attributable to shareholders of the parent company is less than or equal to 25343000000.0, sorted in descending alphabetical order of securities code.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc <= 25343000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an investment loss of -4910000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Investment_Loss = -4910000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which tax and surcharge value has the fewest number of records?",
    "query": "SELECT Income_Statement.Tax_n_Surs FROM Income_Statement GROUP BY Income_Statement.Tax_n_Surs ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of cash paid for interest, handling fees, and commissions, cash received related to other operating activities, and cash received from absorbing investments for each record.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Int_Fees_Com , Cash_Flow_Statement.Cash_Oth_Oper_Activities , Cash_Flow_Statement.Absorb_Investment FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the investment income values and their corresponding frequency in our records.",
    "query": "SELECT Income_Statement.Inv_Inc , count(*) FROM Income_Statement GROUP BY Income_Statement.Inv_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest values of convertible corporate bonds maturing within one year?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock names and the count of unique values in deposit absorption for each stock name.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Balance_Sheet.Acc_Deposits) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all unique stock names in the database.",
    "query": "SELECT distinct(Basic_Info.Stk_Name) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the other business income and the total other business costs for each record.",
    "query": "SELECT Income_Statement.Oth_Biz_Inc , SUM (Income_Statement.Oth_Biz_Costs) FROM Income_Statement GROUP BY Income_Statement.Oth_Biz_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the total cash payments related to financing activities for each value of decrease in inventory?",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease , SUM (Cash_Flow_Statement.Cash_Pay_Fin_Other) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Inventory_Decrease"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock code, the number of different business and management fees, and the total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Income_Statement.Gen_n_Admin_Exps) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the different securities codes and the number of records for each code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or a net profit of 12365000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Income_Statement.Net_Profit = 12365000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the records with 'Bank of Jiangsu' in their securities name.",
    "query": "SELECT DISTINCT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%Bank of Jiangsu%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash inflows from operating activities, sorted by non-operating expenses in descending order.",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Non_Op_Exp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the names of all stocks where the other cash payments related to investment activities are 4850068159 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Inv_Other <= 4850068159 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, count how many records exist, and sort them by the number of records in ascending order.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a net profit greater than 12365000000.0 for each stock code?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Net_Profit > 12365000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have deposit absorption more than 5069529000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Acc_Deposits > 5069529000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the net profit attributable to the owner of the parent company and the interest income of the top 5 records with the highest net profit attributable to the owner of the parent company.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit , Income_Statement.Int_Inc FROM Income_Statement ORDER BY Income_Statement.Attr_Parent_Net_Profit DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities code appears in more than 9 records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) > 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the diluted earnings per share value that appears exactly twice.",
    "query": "SELECT Income_Statement.Diluted_EPS FROM Income_Statement GROUP BY Income_Statement.Diluted_EPS HAVING COUNT (*) = 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a cash outflow from financing activities more than 547670000000.0 and total comprehensive income attributable to shareholders of the parent company more than 13153000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fin_CF_Out_Sub > 547670000000.0 AND Income_Statement.Attr_Parent_Shareholders_Compre_Inc > 13153000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of total comprehensive income that appears the most frequently?",
    "query": "SELECT Income_Statement.Tot_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Tot_Compre_Inc ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all values of accounts receivable investment and the number of records that have each value, sorted in ascending order of the count.",
    "query": "SELECT Balance_Sheet.Recv_Invest , COUNT (*) FROM Balance_Sheet GROUP BY Balance_Sheet.Recv_Invest ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the average handling fees and commission expenses of each net increase in borrowings from the central bank.",
    "query": "SELECT avg(Income_Statement.Fee_Com_Exp) , Cash_Flow_Statement.Net_Inc_Borrowings_CB FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Net_Inc_Borrowings_CB"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of assets impairment loss that appears the least number of times in our data?",
    "query": "SELECT Income_Statement.Assets_Imp_Loss FROM Income_Statement GROUP BY Income_Statement.Assets_Imp_Loss ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities with the highest exchange gains in income statement?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Exch_Gain_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of two stocks with the highest value of \"other\" in cash flow statement.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Other DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the estimated liabilities and lending funds for the records with estimated liabilities less than 2408443000.0.",
    "query": "SELECT Balance_Sheet.Est_Liab , Balance_Sheet.Lending_Funds FROM Balance_Sheet WHERE Balance_Sheet.Est_Liab < 2408443000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the smallest cash paid to and on behalf of employees for each value of minority interest.",
    "query": "SELECT MIN (Cash_Flow_Statement.Cash_Pay_Emp) , Income_Statement.Minor_Int_Inc_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Minor_Int_Inc_Loss"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose cash outflows from operating activities are not equal to 662660000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Op_CF_Out_Sub != 662660000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock codes have 13 or more records in the database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) >= 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of the top two stocks with the highest non-operating revenue.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Non_Op_Rev DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of top three stocks with the highest interest expenses.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Int_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different interest income values are there for each securities code?",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Int_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of stocks and the number of records associated with each stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the stocks whose decrease in inventory value is not equal to 39056216337.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inventory_Decrease != 39056216337"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the investment income and total comprehensive income of records whose net profit is above 17625964000.0 or below 12365000000.0.",
    "query": "SELECT Income_Statement.Inv_Inc , Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Income_Statement WHERE Income_Statement.Net_Profit > 17625964000.0 OR Income_Statement.Net_Profit < 12365000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock names and the depreciation of fixed assets, depletion of oil and gas assets, and depreciation of productive biological assets for all records.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock names that appear more than twice in our records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different stock names are there in our database?",
    "query": "SELECT count(DISTINCT Basic_Info.Stk_Name) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest net increase in cash and cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.IM_NCF_Cash_Eq DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of three securities with the highest assets impairment loss.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Assets_Imp_Loss DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all the values of investment in real estate from the balance sheet records.",
    "query": "SELECT Balance_Sheet.Inv_Real_Estate FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the net interest income value that only appears once in our records.",
    "query": "SELECT Income_Statement.Net_Int_Inc FROM Income_Statement GROUP BY Income_Statement.Net_Int_Inc HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the average operating expenses of each record group by other comprehensive income.",
    "query": "SELECT avg(Income_Statement.Oper_Exp) , Income_Statement.Oth_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Oth_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock codes for all records with derivative financial liabilities less than or equal to 62341000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Deriv_Liab <= 62341000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks that have non-operating income equal to or less than 6261000.0, sorted by their names in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Non_Op_Rev <= 6261000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the two stocks with the highest values of minority interest (income/loss).",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Minor_Int_Inc_Loss DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600919.SH or net income from handling fees and commissions equal to 10836000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Income_Statement.Fee_Com_Net_Inc = 10836000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three securities have the highest intangible assets values?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Intang_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of records that have a different decrease in deferred income tax assets than 26867897326.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.DIT_Asset_Reduction != 26867897326.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of records with either the company name \"Shanghai Pudong Development Bank\" or convertible corporate bonds maturing within one year equal to 41587009075.",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y = 41587009075"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the exchange gains and the count of records for each exchange gain value.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc , COUNT(*) FROM Income_Statement GROUP BY Income_Statement.Exch_Gain_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all stock codes whose cash outflows from operating activities are less than or equal to 353499000000.0, in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Op_CF_Out_Sub <= 353499000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have cash received from other cash related to operating activities before the year 1980?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Oth_Oper_Activities < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the stock codes of records whose impact of exchange rate changes on cash and cash equivalents is not equal to 610000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.FX_Rate_Change_Cash != 610000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock codes whose other comprehensive income is less than or equal to 1801000000.0 in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Compre_Inc <= 1801000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the capital reserves of records that have exactly 5 instances.",
    "query": "SELECT Balance_Sheet.Cap_Reserves FROM Balance_Sheet GROUP BY Balance_Sheet.Cap_Reserves HAVING COUNT (*) = 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me all the records with stock names containing 'China Merchants Bank'.",
    "query": "SELECT DISTINCT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%China Merchants Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find instances of financial assets sold for repurchase and payable employee compensation where the value of financial assets sold for repurchase is greater than 54335023000.0.",
    "query": "SELECT Balance_Sheet.Sell_Rep_FAs , Balance_Sheet.Emp_Comp_PAY FROM Balance_Sheet WHERE Balance_Sheet.Sell_Rep_FAs > 54335023000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average value of deposits from interbank and other financial institutions, the smallest value of borrowing from the central bank, and the smallest value of noble metal in our records?",
    "query": "SELECT AVG (Balance_Sheet.IB_Dep_Oth_FIs) , MIN (Balance_Sheet.Bor_CB), MIN (Balance_Sheet.Prec_Metals) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the securities codes of records whose handling fees and commission expenses are less than or equal to 2605000000.0, and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Exp <= 2605000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code of the three companies with the highest trading financial liabilities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Trad_Fin_Liab DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of stocks whose investment losses are less than or equal to 1494406973.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Investment_Loss <= 1494406973.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the stock codes of records where income tax expenses are not equal to 4807695000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Income_Tax_Exp != 4807695000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average value of cash paid for investment across all records?",
    "query": "SELECT MAX (Cash_Flow_Statement.Cash_Pay_Invest) , MIN (Cash_Flow_Statement.Cash_Pay_Invest), AVG (Cash_Flow_Statement.Cash_Pay_Invest) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of companies whose other liabilities are less than or equal to 19902328000.0, sorted in descending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Oth_Liab <= 19902328000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the non-current assets loss on disposal values for those whose income from changes in fair value is greater than 10, grouped by non-current assets loss on disposal?",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets FROM Income_Statement GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets HAVING sum(Income_Statement.FV_Change_Inc) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which Stk_Code has the fewest occurrences in the records table?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the stock codes in records with investment losses less than or equal to -11698000000.0, sorted in descending order?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Investment_Loss <= -11698000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest and lowest net interest income among all records?",
    "query": "SELECT MAX (Income_Statement.Net_Int_Inc) , MIN (Income_Statement.Net_Int_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have in the income statement?",
    "query": "SELECT count(*) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three stocks with the highest fee and commission income.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock code and opening balance of cash equivalents for each record.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Cash_Eq_Begin_Period FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have hold-to-maturity investments with the value of 10549957517?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Held_Mat_Invest = 10549957517"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have interest expenses below 1980?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Int_Exp < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock names and the minority shareholders' equity of all records.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Minor_Int_Eq FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all intangible assets values that have at least four records with deposits from interbank and other financial institutions greater than 1426046000000.0.",
    "query": "SELECT Balance_Sheet.Intang_Assets FROM Balance_Sheet WHERE Balance_Sheet.IB_Dep_Oth_FIs > 1426046000000.0 GROUP BY Balance_Sheet.Intang_Assets HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock codes that have net cash flow generated from financing activities less than or equal to -29295372000.0, in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Fin <= -29295372000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an opening balance of cash equivalents equal to 63953659000.0 or 567198000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Initial_Cash_Equiv = 63953659000.0 OR Cash_Flow_Statement.Initial_Cash_Equiv = 567198000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "could you please display the names of stocks that have more than 4 records?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) > 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the securities code and handling fees and commission expenses of each record, sorted in descending order by investment income.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Fee_Com_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Inv_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me subsidiary payments to minority shareholders in descending order of total comprehensive income attributable to minority shareholders.",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Pay_Minority FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the cash received for interest, handling fees, and commissions, as well as the total operating expenses for each record.",
    "query": "SELECT Cash_Flow_Statement.Cash_Int_Commission_Collected , SUM (Income_Statement.Oper_Exp) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cash_Int_Commission_Collected"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the name of each stock and their \"other\" value, sorted by loss on disposal of fixed assets in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Other FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the unique securities codes in the database.",
    "query": "SELECT distinct(Basic_Info.Stk_Code) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three securities have the highest noble metal value?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Prec_Metals DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the value of minor interest shareholders' comprehensive income with the highest number of records.",
    "query": "SELECT Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Minor_Int_Shareholders_Compre_Inc ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest and lowest value of handling fees and commission expenses in our records?",
    "query": "SELECT MAX (Income_Statement.Fee_Com_Exp) , MIN (Income_Statement.Fee_Com_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the name \"Huaxia Bank\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"Huaxia Bank\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have fee and commission income less than 1980?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Fee_Com_Inc < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock codes and the count of unique borrowing funds from other financial institutions for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Balance_Sheet.Bor_Funds_Oth_FIs) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the exchange gains and the sum of diluted earnings per share for each record.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc , SUM (Income_Statement.Diluted_EPS) FROM Income_Statement GROUP BY Income_Statement.Exch_Gain_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of stocks that appear more than 5 times in our data.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) > 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have operating cash inflows, subtotal, more than 401985000000.0 and operating profit greater than 24791000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Op_CF_Sub > 401985000000.0 AND Income_Statement.Oper_Profit > 24791000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the securities code of all records where income tax expenses are less than or equal to 4045000000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Income_Tax_Exp <= 4045000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of top three stocks with the highest net increase in customer deposits and interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "fetch the value of business and management fees in records whose loss from changes in fair value is exactly 2413000000.0.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fair_Value_Change_Loss BETWEEN 2413000000.0 AND 2413000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of records that have deposit absorption not equal to 5069529000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Acc_Deposits != 5069529000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the highest and lowest subtotal of cash outflows from financing activities in our data.",
    "query": "SELECT MAX (Cash_Flow_Statement.Fin_CF_Out_Sub) , MIN (Cash_Flow_Statement.Fin_CF_Out_Sub) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average investment income, the minimum interest income, and the minimum exchange gains in our records?",
    "query": "SELECT AVG (Income_Statement.Inv_Inc) , MIN (Income_Statement.Int_Inc), MIN (Income_Statement.Exch_Gain_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three securities with the highest operating revenue.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Rev DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the information available in the cash flow statement table.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the accounts receivable investment value that appears in more than 13 records.",
    "query": "SELECT Balance_Sheet.Recv_Invest FROM Balance_Sheet GROUP BY Balance_Sheet.Recv_Invest HAVING COUNT (*) > 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have less than 8 records in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) < 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the five most frequent values of deposit absorption in our records?",
    "query": "SELECT Balance_Sheet.Acc_Deposits FROM Balance_Sheet GROUP BY Balance_Sheet.Acc_Deposits ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average net interest income in all records?",
    "query": "SELECT MAX (Income_Statement.Net_Int_Inc) , MIN (Income_Statement.Net_Int_Inc), AVG (Income_Statement.Net_Int_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the value of cash received from other investment activities for records with business and management fees between 21136000000.0 and 51877000000.0.",
    "query": "SELECT Cash_Flow_Statement.Recv_Other_Invest FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Gen_n_Admin_Exps BETWEEN 21136000000.0 AND 51877000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there for Shanghai Pudong Development Bank or with a derivative financial liability of 41844000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Balance_Sheet.Deriv_Liab = 41844000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the average cash received from investment recovery, the minimum dividends and profits paid by subsidiaries to minority shareholders, and the minimum loss on scrapping of fixed assets across all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Recv_Investment) , MIN (Cash_Flow_Statement.Subsidiary_Pay_Minority), MIN (Cash_Flow_Statement.Fixed_Asset_Scrap_Loss) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the handling fees and commission expenses for records that do not have any other cash related to operating activities?",
    "query": "SELECT Income_Statement.Fee_Com_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Oth_Oper_Activities IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock names are repeated in multiple records?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with all the details of the record that has the highest non-operating expenses.",
    "query": "SELECT * FROM Income_Statement ORDER BY Income_Statement.Non_Op_Exp DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average value of cash received from subsidiaries absorbing minority shareholder investments across all records?",
    "query": "SELECT MAX (Cash_Flow_Statement.Subsidiary_Absorb_Minority) , MIN (Cash_Flow_Statement.Subsidiary_Absorb_Minority), AVG (Cash_Flow_Statement.Subsidiary_Absorb_Minority) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of each security and the count of records for each security, sorted in ascending order by the count.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of top three companies with the largest cash payments for taxes.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Taxes DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code for those stocks whose derivative financial assets is less than or equal to 9492000000.0, and list them in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Deriv_Assets <= 9492000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to \"Bank of Jiangsu\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"Bank of Jiangsu\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the handling fees and commission expenses that appear in five or more records.",
    "query": "SELECT Income_Statement.Fee_Com_Exp FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Exp HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of two companies with the highest taxes and surcharges.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Tax_n_Surs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of total assets that appeared exactly 6 times?",
    "query": "SELECT Balance_Sheet.Tot_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Assets HAVING COUNT (*) = 6"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me the stock code and diluted earnings per share in descending order of asset impairment loss?",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Diluted_EPS FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Assets_Imp_Loss DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the exchange gains and the corresponding total profits for each record?",
    "query": "SELECT Income_Statement.Exch_Gain_Inc , SUM (Income_Statement.Tot_Profit) FROM Income_Statement GROUP BY Income_Statement.Exch_Gain_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net profit attributable to the owner of the parent company in descending order of operating expenses.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit FROM Income_Statement ORDER BY Income_Statement.Oper_Exp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks that have at least 5 records available.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest taxes and surcharges values.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Tax_n_Surs DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Mingsheng Bank or have basic earnings per share equal to 0.76?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Income_Statement.Basic_EPS = 0.76"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities code have appeared less than 8 times in our records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) < 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has a different value of net increase in deposits with central bank and interbank funds than 16781108734.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CenBank_Interbank_Net_Inc != 16781108734.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Find me the three securities with the highest lending funds.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Lending_Funds DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code, the number of different paid-in capital, and the total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Balance_Sheet.Paid_Up_Cap) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information in income statement where net income from handling fees and commissions is negative.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Fee_Com_Net_Inc < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which other liabilities value has the fewest number of records?",
    "query": "SELECT Balance_Sheet.Oth_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Oth_Liab ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the stock names whose diluted earnings per share is less than or equal to 2.93, sorted in descending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Diluted_EPS <= 2.93 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the eight least frequent other business costs values, sorted by their frequency in ascending order.",
    "query": "SELECT Income_Statement.Oth_Biz_Costs FROM Income_Statement GROUP BY Income_Statement.Oth_Biz_Costs ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the net increase in customer loans and advances and the subtotal of cash outflows from investment activities for records where the net increase in customer loans and advances is greater than 147416667000.0.",
    "query": "SELECT Cash_Flow_Statement.Cust_Loans_Net_Inc , Cash_Flow_Statement.Inv_CF_Out_Sub FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cust_Loans_Net_Inc > 147416667000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have in our database?",
    "query": "SELECT count(*) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock name, total comprehensive income attributable to shareholders of the parent company, and the opening balance of cash equivalents for all the records.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Attr_Parent_Shareholders_Compre_Inc , Cash_Flow_Statement.Initial_Cash_Equiv FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average cash paid for investment, the minimum value of comprehensive income attributable to minority shareholders, and the minimum value of investment income from associates and joint ventures across all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Cash_Pay_Invest) , MIN (Income_Statement.Minor_Int_Shareholders_Compre_Inc), MIN (Income_Statement.Inv_Inc_Assoc_JV) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the operating profit values that have five or more records.",
    "query": "SELECT Income_Statement.Oper_Profit FROM Income_Statement GROUP BY Income_Statement.Oper_Profit HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all securities where income from changes in fair value is less than or equal to 4319000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.FV_Change_Inc <= 4319000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return capital reserves and financial assets sold for repurchase of records where capital reserves exceed 58149000000.0.",
    "query": "SELECT Balance_Sheet.Cap_Reserves , Balance_Sheet.Sell_Rep_FAs FROM Balance_Sheet WHERE Balance_Sheet.Cap_Reserves > 58149000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the other business income value that occurs more than 4 times?",
    "query": "SELECT Income_Statement.Oth_Biz_Inc FROM Income_Statement GROUP BY Income_Statement.Oth_Biz_Inc HAVING COUNT (*) > 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock names and net increase in cash and cash equivalents of all records, sorted by their initial balance of cash and cash equivalents in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Net_CF_Cash_Equiv FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Initial_Cash_Equiv DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the fee and commission income and the total investment income from associates and joint ventures of each record.",
    "query": "SELECT Income_Statement.Fee_Com_Inc , SUM (Income_Statement.Inv_Inc_Assoc_JV) FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the loss on disposal of fixed assets, intangible assets, and other long-term assets and increase in deferred income tax liabilities values for records with net increase in cash and cash equivalents greater than 22704805000.0 or less than 66167000000.0.",
    "query": "SELECT Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec , Cash_Flow_Statement.DIT_Liability_Increase FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.IM_NCF_Cash_Eq > 22704805000.0 OR Cash_Flow_Statement.IM_NCF_Cash_Eq < 66167000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the hold-to-maturity investment values for those whose available-for-sale financial assets exceed 10, grouped by hold-to-maturity investments?",
    "query": "SELECT Balance_Sheet.Held_Mat_Invest FROM Balance_Sheet GROUP BY Balance_Sheet.Held_Mat_Invest HAVING sum(Balance_Sheet.Avail_Sale_FAs) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the records by fixed assets depreciation and show me the stock names and other received investment values.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Recv_Other_Invest FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock name, net increase in borrowing funds from other financial institutions, and net profit in cash flow statement for each record.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Net_Inc_IB_Borrowings , Cash_Flow_Statement.CF_Stmt_Net_Income FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the operating expenses for each record where there is no value for investment income.",
    "query": "SELECT Income_Statement.Oper_Exp FROM Income_Statement WHERE Income_Statement.Inv_Inc IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the cash received from other cash related to operating activities that have occurred at least 6 times.",
    "query": "SELECT Cash_Flow_Statement.Cash_Oth_Oper_Activities FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Oth_Oper_Activities HAVING COUNT (*) >= 6"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average of total comprehensive income attributed to minority shareholders, the minimum of total comprehensive income attributed to shareholders of the parent company, and the minimum of net profit attributed to the owner of the parent company across all records.",
    "query": "SELECT AVG (Income_Statement.Minor_Int_Shareholders_Compre_Inc) , MIN (Income_Statement.Attr_Parent_Shareholders_Compre_Inc), MIN (Income_Statement.Attr_Parent_Net_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "I want to see the customer loans net increase and other business income for the top five records with the highest customer loans net increase.",
    "query": "SELECT Cash_Flow_Statement.Cust_Loans_Net_Inc , Income_Statement.Oth_Biz_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cust_Loans_Net_Inc DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of cash and deposits with central bank that have more than two records?",
    "query": "SELECT Balance_Sheet.Cash_CB FROM Balance_Sheet GROUP BY Balance_Sheet.Cash_CB HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the details of the records in the cash flow statement.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the value of cash paid for taxes in the record with the least frequency.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Taxes FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Taxes ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the fair value change income of records with other comprehensive income between 1039000000.0 and 1801000000.0.",
    "query": "SELECT Income_Statement.FV_Change_Inc FROM Income_Statement WHERE Income_Statement.Oth_Compre_Inc BETWEEN 1039000000.0 AND 1801000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the closing balance of cash equivalents that appeared less than 4 times.",
    "query": "SELECT Cash_Flow_Statement.Final_Cash_Equiv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Final_Cash_Equiv HAVING COUNT (*) < 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have investment losses before 1980?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Investment_Loss < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the name of stocks whose financial assets sold for repurchase value is not equal to 373094000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Sell_Rep_FAs != 373094000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of the three securities with the highest closing balance of cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Final_Cash_Equiv DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code and indirect method net cash flow generated from operating activities for each record.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.IM_NCF_Oper_Activities FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of debt converted to capital and subsidiary payments to minority shareholders for records that have cash paid for investment either above or below 316981000000.0?",
    "query": "SELECT Cash_Flow_Statement.Debt_Converted_Capital , Cash_Flow_Statement.Subsidiary_Pay_Minority FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Invest > 316981000000.0 OR Cash_Flow_Statement.Cash_Pay_Invest < 316981000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of other cash payments related to investment activities for each diluted earnings per share if the value of other cash payments related to investment activities is larger than 44542636671?",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Inv_Other , Income_Statement.Diluted_EPS FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Inv_Other > 44542636671"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the interest income and total comprehensive income attributable to minority shareholders for records with interest income less than 187334000000.0.",
    "query": "SELECT Income_Statement.Int_Inc , Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Income_Statement WHERE Income_Statement.Int_Inc < 187334000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock code that has a closing balance of cash equivalents above 71774000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Final_Cash_Equiv > 71774000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have long term equity investment exceeding 34062299161.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.LT_Eq_Invest > 34062299161.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many securities have the name \"Huaxia Bank\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"Huaxia Bank\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the distinct value of income tax expenses in our data.",
    "query": "SELECT distinct(Income_Statement.Income_Tax_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose cash impact from exchange rate changes is less than or equal to 3958000000.0, in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.FX_Rate_Change_Cash <= 3958000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "identify the stock codes that appear exactly 3 times in the database.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) = 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have minority shareholders' equity greater than 7437337000.0 and estimated liabilities greater than 6541000000.0?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Minor_Int_Eq > 7437337000.0 AND Balance_Sheet.Est_Liab > 6541000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock name, give me the name itself, the count of distinct decrease in inventory and the total number of records with that stock name.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.Inventory_Decrease) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a debt converted to capital that exceeds 7541736353 for each stock code?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Debt_Converted_Capital > 7541736353 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all records for each company name where the subtotal of cash inflows from financing activities is above 70000000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fin_CF_In_Sub > 70000000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the net cash flow generated from investment activities and the frequency of each value.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Inv , count(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Inv"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock codes of records that have surplus reserves different from 188929000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Sur_Reserves != 188929000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the intangible asset amortization and other business costs for records where the loss on disposal of non current assets is either greater than 29050967828 or shorter than 29050967828.",
    "query": "SELECT Cash_Flow_Statement.Intangible_Asset_Amortization , Income_Statement.Oth_Biz_Costs FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Loss_Disposal_Nonc_Assets > 29050967828 OR Income_Statement.Loss_Disposal_Nonc_Assets < 29050967828"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock codes of all records where the opening balance of cash is 128305000000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Begin_Period <= 128305000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the least frequent values of payable employee compensation in ascending order?",
    "query": "SELECT Balance_Sheet.Emp_Comp_PAY FROM Balance_Sheet GROUP BY Balance_Sheet.Emp_Comp_PAY ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the three companies with the highest cash outflows from investment activities?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inv_CF_Out_Sub DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the smallest number of records among all the different values of decrease in inventory?",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Inventory_Decrease ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records does each stock have with the interbank deposits value higher than 114630000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.IB_Deposits > 114630000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the smallest value of other cash payments related to financing activities for each net profit in cash flow statement.",
    "query": "SELECT MIN (Cash_Flow_Statement.Cash_Pay_Fin_Other) , Cash_Flow_Statement.CF_Stmt_Net_Income FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.CF_Stmt_Net_Income"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with all the details of the record with the highest payable employee compensation.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Emp_Comp_PAY DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each company name, provide me the number of records where depreciation of fixed assets, depletion of oil and gas assets, and depreciation of productive biological assets is more than 5030000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec > 5030000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock name, decrease in inventory, and comprehensive income attributable to shareholders of the parent company for each record.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Inventory_Decrease , Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the owner's equity attributable to the parent company for every record that has a total sum of financial assets sold for repurchase greater than 10.",
    "query": "SELECT Balance_Sheet.Own_Eq_Attr_Parent FROM Balance_Sheet GROUP BY Balance_Sheet.Own_Eq_Attr_Parent HAVING sum(Balance_Sheet.Sell_Rep_FAs) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the net increase in borrowings from the central bank with the highest frequency?",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_Borrowings_CB FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_Inc_Borrowings_CB ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net increase in borrowings from the central bank and net income from handling fees and commissions of the top five records with the highest net increase in borrowings from the central bank.",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_Borrowings_CB , Income_Statement.Fee_Com_Net_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_Inc_Borrowings_CB DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many records have total comprehensive income attributable to shareholders of the parent company greater than 25343000000.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc > 25343000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks that contain the phrase 'Shanghai Pudong Development Bank' in their name.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%Shanghai Pudong Development Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the total comprehensive income of each record by their net cash flow generated from operating activities in descending order.",
    "query": "SELECT Income_Statement.Tot_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.IM_NCF_Oper_Activities DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the details of records where the subtotal of cash inflows from operating activities is negative.",
    "query": "SELECT * FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Op_CF_Sub < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks that have at least 14 records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) >= 14"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of stocks that contain the phrase 'Huaxia Bank' in their names.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%Huaxia Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all records with the Stk_Name containing 'China Mingsheng Bank'.",
    "query": "SELECT DISTINCT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%China Mingsheng Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the minor interest and investment income for records with minor interest losses less than 477000000.0.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss , Cash_Flow_Statement.Investment_Income FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Inc_Loss < 477000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock names for all records where the net increase in deposits with central bank and interbank funds is 14594000000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CenBank_Interbank_Net_Inc <= 14594000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the unique values of net cash flow generated from investment activities in the cash flow statement.",
    "query": "SELECT distinct(Cash_Flow_Statement.Net_CF_Inv) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the investment cash outflows and net profits of the top 5 records with the highest net profit?",
    "query": "SELECT Income_Statement.Net_Profit , Cash_Flow_Statement.Inv_CF_Out_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Net_Profit DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose net increase in customer loans and advances is less than or equal to 326411000000.0, sorted in descending order of stock names.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cust_Loans_Net_Inc <= 326411000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the smallest opening balance of cash equivalents for each value of other cash payments related to financing activities.",
    "query": "SELECT MIN (Cash_Flow_Statement.Cash_Eq_Begin_Period) , Cash_Flow_Statement.Cash_Pay_Fin_Other FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Fin_Other"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of decrease in inventory and the subtotal of cash outflows from investment activities where the decrease in inventory is greater than 32207893333.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease , Cash_Flow_Statement.Inv_CF_Out_Sub FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Inventory_Decrease > 32207893333"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a company name of China Mingsheng Bank or general and administrative expenses equal to 13287000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Income_Statement.Gen_n_Admin_Exps = 13287000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have exchange rate changes on cash and cash equivalents before 1980?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.FX_Rate_Change_Cash < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the average and maximum non-operating revenue for each record.",
    "query": "SELECT avg(Income_Statement.Non_Op_Rev), max(Income_Statement.Non_Op_Rev) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the trading financial liabilities and their corresponding frequency of appearance in the records.",
    "query": "SELECT Balance_Sheet.Trad_Fin_Liab , count(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Trad_Fin_Liab"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have received investment greater than 197103000000.0 and exchange rate change cash higher than 3958000000.0?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Recv_Investment > 197103000000.0 AND Cash_Flow_Statement.FX_Rate_Change_Cash > 3958000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all records with unique values of opening balance of cash.",
    "query": "SELECT distinct(Cash_Flow_Statement.Cash_Begin_Period) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me a list of distinct securities names from records.",
    "query": "SELECT distinct(Basic_Info.Stk_Name) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the operating cash flow subtotal of records with long-term amortization values between 42611632260.0 and 26443266996.0.",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Sub FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Longterm_Amortization BETWEEN 42611632260.0 AND 26443266996.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the interest expenses and the count of unique net income from handling fees and commissions for each interest expense value.",
    "query": "SELECT Income_Statement.Int_Exp , COUNT (DISTINCT Income_Statement.Fee_Com_Net_Inc) FROM Income_Statement GROUP BY Income_Statement.Int_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of distinct cash outflows from investment activities for each investment income value.",
    "query": "SELECT Income_Statement.Inv_Inc , COUNT (DISTINCT Cash_Flow_Statement.Inv_CF_Out_Sub) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Inv_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three companies with the highest fixed assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Fix_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities codes that have more than 6 records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) > 6"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the Stk_Name and net profit attributable to the owner of the parent company in descending order of interest expenses.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Attr_Parent_Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Int_Exp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight smallest closing balances of cash equivalents in the cash flow statement records, sorted by their frequency?",
    "query": "SELECT Cash_Flow_Statement.Final_Cash_Equiv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Final_Cash_Equiv ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code and increase in operating payables for each record, sorted by the amount of cash received from absorbing investments in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Oper_Payables_Increase FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Absorb_Investment DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the two stocks with the highest cash received from investment recovery.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Recv_Invest DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock codes and tax payments of all records, sorted by their fixed assets value in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Tax_Pay FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Fix_Assets DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of distinct opening balances of cash for each stock name.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Cash_Flow_Statement.Cash_Begin_Period) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the operating receivables decrease values that have at least 4 records where other comprehensive income is larger than 1375220000.0?",
    "query": "SELECT Cash_Flow_Statement.Oper_Receivables_Decrease FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oth_Compre_Inc > 1375220000.0 GROUP BY Cash_Flow_Statement.Oper_Receivables_Decrease HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of all records that have other assets value not equal to 43087000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Oth_Assets != 43087000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the count of records for each cash and deposits with central bank value? sort the result in ascending order.",
    "query": "SELECT Balance_Sheet.Cash_CB , COUNT (*) FROM Balance_Sheet GROUP BY Balance_Sheet.Cash_CB ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the maximum and minimum values of cash received from other financing activities in our data.",
    "query": "SELECT MAX (Cash_Flow_Statement.Recv_Other_Fin) , MIN (Cash_Flow_Statement.Recv_Other_Fin) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Huaxia Bank or have diluted earnings per share of 2.93?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Income_Statement.Diluted_EPS = 2.93"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the net increase in borrowing funds from other financial institutions for all records that do not have a value for total comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_IB_Borrowings FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please provide me with the names of two stocks that have the highest basic earnings per share.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Basic_EPS DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which diluted earnings per share value only appeared once?",
    "query": "SELECT Income_Statement.Diluted_EPS FROM Income_Statement GROUP BY Income_Statement.Diluted_EPS HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks that appear more than 13 times in the data.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) > 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of records whose available-for-sale financial assets is not equal to 27049934008.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Avail_Sale_FAs != 27049934008"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes of the top three records with the highest noble metal values.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Prec_Metals DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net increase in customer loans and advances and financial expenses of the top 5 records with the highest financial expenses.",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Fin_Expenses , Cash_Flow_Statement.Cust_Loans_Net_Inc FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.CF_Stmt_Fin_Expenses DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have cash payments related to other operating activities equal to 10878000000.0 or 19680000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Op_Other = 10878000000.0 OR Cash_Flow_Statement.Cash_Pay_Op_Other = 19680000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the distinct values of translation difference of foreign currency statements in our records.",
    "query": "SELECT distinct(Balance_Sheet.Exch_Diff_Cash) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "fetch the cash paid to and on behalf of employees from cash flow statement for records whose net interest income lies between 34151000000.0 and 27177219000.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Emp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Net_Int_Inc BETWEEN 34151000000.0 AND 27177219000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the stock codes whose other cash received related to operating activities is less than or equal to 28913000000.0, sorted in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Oth_Oper_Activities <= 28913000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the top five securities with the most number of records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum operating profit across all records.",
    "query": "SELECT avg(Income_Statement.Oper_Profit), max(Income_Statement.Oper_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of each stock along with the count of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which five securities have the highest frequency among all the records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have due from interbank deposits before 1980?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.IB_Deposits < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the top five interest receivable values that have the highest frequency of occurrence in the records.",
    "query": "SELECT Balance_Sheet.Int_Receiv FROM Balance_Sheet GROUP BY Balance_Sheet.Int_Receiv ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have capital reserves equal to 32203742000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Cap_Reserves = 32203742000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the interest receivable and trading financial liabilities of the top 5 records with the highest interest receivable value.",
    "query": "SELECT Balance_Sheet.Int_Receiv , Balance_Sheet.Trad_Fin_Liab FROM Balance_Sheet ORDER BY Balance_Sheet.Int_Receiv DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the operating profit of records whose cash paid for taxes is between 11776000000.0 and 19612000000.0.",
    "query": "SELECT Income_Statement.Oper_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Taxes BETWEEN 11776000000.0 AND 19612000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the two stocks with the highest translation difference of foreign currency statements.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Exch_Diff_Cash DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have tax and fees payable more than 3963000000.0 and deferred tax assets above 94073000000.0?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Tax_Pay > 3963000000.0 AND Balance_Sheet.Def_IT_Assets > 94073000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records in balance sheet have bonds payable greater than 581062000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Bonds_PAY > 581062000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of the top two stocks with the highest other comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oth_Compre_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the received other cash related to investment activities, sorted by the other cash payments related to financing activities in descending order.",
    "query": "SELECT Cash_Flow_Statement.Recv_Other_Invest FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cash_Pay_Fin_Other DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the eight least frequent investment real estate values in ascending order.",
    "query": "SELECT Balance_Sheet.Inv_Real_Estate FROM Balance_Sheet GROUP BY Balance_Sheet.Inv_Real_Estate ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net interest income values that appear at least 14 times.",
    "query": "SELECT Income_Statement.Net_Int_Inc FROM Income_Statement GROUP BY Income_Statement.Net_Int_Inc HAVING COUNT (*) >= 14"
  },
  {
    "db_id": "Bank_Financials",
    "question": "get me the total profit for each record in which there is no value for exchange gains.",
    "query": "SELECT Income_Statement.Tot_Profit FROM Income_Statement WHERE Income_Statement.Exch_Gain_Inc IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or a debt converted to capital value of 2559439174?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Cash_Flow_Statement.Debt_Converted_Capital = 2559439174"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you list the stock names and asset impairment provision, sorted by the value of cash outflows from financing activities in descending order?",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Asset_Impairment_Dec FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fin_CF_Out_Sub DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks that include the phrase 'Bank of Jiangsu'.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%Bank of Jiangsu%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have a total liabilities and owner's equity value not equal to 7641451000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab_Own_Eq != 7641451000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the largest net increase in borrowings from the central bank.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_Inc_Borrowings_CB DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of all records where the value of other liabilities is not equal to 38747000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Oth_Liab != 38747000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the information about the records.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have the stock code that contains the substring '600036.SH'?",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600036.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the received investment and cash paid for taxes for records with received investment less than 197103000000.0.",
    "query": "SELECT Cash_Flow_Statement.Recv_Investment , Cash_Flow_Statement.Cash_Pay_Taxes FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Recv_Investment < 197103000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash payments related to other operating activities where the corresponding cash received for other cash related to operating activities is null.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Op_Other FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Oth_Oper_Activities IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all records with 'Huaxia Bank' included in their securities name.",
    "query": "SELECT DISTINCT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%Huaxia Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of securities that have at least 13 records in the database.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) >= 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock code, that have expenses at handling fees and commission more than 3558000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Exp > 3558000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the total net income in cash flow statement for each value of other business income in income statement.",
    "query": "SELECT Income_Statement.Oth_Biz_Inc , SUM (Cash_Flow_Statement.CF_Stmt_Net_Income) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Oth_Biz_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the security codes of top three stocks with the highest asset impairment provision.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Asset_Impairment_Dec DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the fair value change income and net interest income for records where the fair value change income is less than 1814000000.0.",
    "query": "SELECT Income_Statement.FV_Change_Inc , Income_Statement.Net_Int_Inc FROM Income_Statement WHERE Income_Statement.FV_Change_Inc < 1814000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with a stock code of 600036.SH or other comprehensive income of 1801000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Income_Statement.Oth_Compre_Inc = 1801000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the financial assets sold for repurchase sorted by their intangible assets in descending order.",
    "query": "SELECT Balance_Sheet.Sell_Rep_FAs FROM Balance_Sheet ORDER BY Balance_Sheet.Intang_Assets DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock codes do not have total liabilities equal to 3790933000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab != 3790933000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have a total liabilities and owner's equity value different from 10739836000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab_Own_Eq != 10739836000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each company name, show me the number of records that have indirect method net cash flow generated from operating activities greater than 74145000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.IM_NCF_Oper_Activities > 74145000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three securities with the highest value of deferred tax liability.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Def_IT_Liab DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest operating expenses?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which value of cash received from investment recovery has the smallest number of records?",
    "query": "SELECT Cash_Flow_Statement.Recv_Investment FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Recv_Investment ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the operating receivables reduction values with at least 4 records where income tax expenses are higher than 4045000000.0.",
    "query": "SELECT Cash_Flow_Statement.Oper_Receivables_Decrease FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Income_Tax_Exp > 4045000000.0 GROUP BY Cash_Flow_Statement.Oper_Receivables_Decrease HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have loss on disposal of non current assets more than 29050967828 and assets impairment loss more than 732000000.0?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Loss_Disposal_Nonc_Assets > 29050967828 AND Income_Statement.Assets_Imp_Loss > 732000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values of net cash flow generated from operating activities are there in the records?",
    "query": "SELECT count(DISTINCT Cash_Flow_Statement.IM_NCF_Oper_Activities) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock codes do not have a net increase in cash and cash equivalents of 66167000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Cash_Equiv != 66167000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of the stock with the least number of corresponding records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all the stock codes of records that have different business and management fees from 13287000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Gen_n_Admin_Exps != 13287000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the total profit values of records, sorted by income tax expenses in descending order.",
    "query": "SELECT Income_Statement.Tot_Profit FROM Income_Statement ORDER BY Income_Statement.Income_Tax_Exp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the securities code of top three companies with the largest fixed assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Fix_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the value of net increase in customer loans and advances that appeared only once.",
    "query": "SELECT Cash_Flow_Statement.Cust_Loans_Net_Inc FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cust_Loans_Net_Inc HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top 5 most common debt converted to capital values.",
    "query": "SELECT Cash_Flow_Statement.Debt_Converted_Capital FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Debt_Converted_Capital ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the values of decrease in inventory from cash flow statements where the closing balance of cash equivalents is between 86658464000.0 and 585047000000.0.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Final_Cash_Equiv BETWEEN 86658464000.0 AND 585047000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock names and subtotals of cash outflows from investment activities, sorted by the amount of cash received from other investment activities in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Inv_CF_Out_Sub FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Recv_Other_Invest DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have net cash flow generated from operating activities equal to either 126222341000.0 or 74145000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.IM_NCF_Oper_Activities = 126222341000.0 OR Cash_Flow_Statement.IM_NCF_Oper_Activities = 74145000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the fee and commission income value that appears most frequently in our records?",
    "query": "SELECT Income_Statement.Fee_Com_Inc FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Inc ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the name of each stock and the cash paid to and on behalf of employees, sorted by the cash paid to and on behalf of employees in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Subsidiary_Absorb_Minority FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Emp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two securities code of the highest value of cash received from issuing bonds.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Issue_Bonds DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average surplus reserves for each total owner's equity value.",
    "query": "SELECT avg(Balance_Sheet.Sur_Reserves) , Balance_Sheet.Tot_Own_Eq FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Own_Eq"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the least frequent income from changes in fair value value among all records in the income statement?",
    "query": "SELECT Income_Statement.FV_Change_Inc FROM Income_Statement GROUP BY Income_Statement.FV_Change_Inc ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600036.SH or received other cash related to investment activities of 19931846953.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Cash_Flow_Statement.Recv_Other_Invest = 19931846953.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which record has an inventory decrease value of exactly 11?",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Inventory_Decrease HAVING COUNT (*) = 11"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all business and management fees values that have more than four records with income from changes in fair value over 4223000000.0.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Income_Statement WHERE Income_Statement.FV_Change_Inc > 4223000000.0 GROUP BY Income_Statement.Gen_n_Admin_Exps HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or an investment income from associates and joint ventures of 23860991409.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Income_Statement.Inv_Inc_Assoc_JV = 23860991409.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the net profit values of records whose cash paid for investment falls in the range of 833348000000.0 and 950682000000.0.",
    "query": "SELECT Income_Statement.Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Invest BETWEEN 833348000000.0 AND 950682000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of the two stocks with the highest investment income.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Inv_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to security 600016.SH or their dividend and profit distribution is exactly 15470000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Cash_Flow_Statement.Distribute_Dividends_Profits = 15470000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of top three stocks with the greatest income from changes in fair value.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.FV_Change_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the cash paid for the purchase and construction of fixed assets, intangible assets, and other long-term assets for records where assets impairment loss is null.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Assets FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Assets_Imp_Loss IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have net increase in borrowings from the central bank exceeding 35502000000.0 and net cash flow generated from operating activities exceeding 74145000000.0?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_Inc_Borrowings_CB > 35502000000.0 AND Cash_Flow_Statement.IM_NCF_Oper_Activities > 74145000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of all stocks and their corresponding total liabilities.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Tot_Liab FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the most frequent value of basic earnings per share?",
    "query": "SELECT Income_Statement.Basic_EPS FROM Income_Statement GROUP BY Income_Statement.Basic_EPS ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the top three securities with the highest value of deferred tax assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Def_IT_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the smallest fee and commission income in each financial expense category?",
    "query": "SELECT MIN (Income_Statement.Fee_Com_Inc) , Cash_Flow_Statement.CF_Stmt_Fin_Expenses FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.CF_Stmt_Fin_Expenses"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the investment income from associates and joint ventures and operating profit of the top five records with the highest investment income from associates and joint ventures.",
    "query": "SELECT Income_Statement.Inv_Inc_Assoc_JV , Income_Statement.Oper_Profit FROM Income_Statement ORDER BY Income_Statement.Inv_Inc_Assoc_JV DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the average net income from handling fees and commissions for each diluted earnings per share value.",
    "query": "SELECT avg(Income_Statement.Fee_Com_Net_Inc) , Income_Statement.Diluted_EPS FROM Income_Statement GROUP BY Income_Statement.Diluted_EPS"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net increase in deposits with central bank and interbank funds, sorted in descending order by the net increase in customer loans and advances.",
    "query": "SELECT Cash_Flow_Statement.CenBank_Interbank_Net_Inc FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cust_Loans_Net_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of stocks that have at least 5 records in our database.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the maximum, minimum and average investment income from associates and joint ventures in our database.",
    "query": "SELECT MAX (Income_Statement.Inv_Inc_Assoc_JV) , MIN (Income_Statement.Inv_Inc_Assoc_JV), AVG (Income_Statement.Inv_Inc_Assoc_JV) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the expenses at handling fees and commission that have at least 4 records with operating revenue exceeding 71539000000.0.",
    "query": "SELECT Income_Statement.Fee_Com_Exp FROM Income_Statement WHERE Income_Statement.Oper_Rev > 71539000000.0 GROUP BY Income_Statement.Fee_Com_Exp HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different investment income from associates and joint ventures do we have for each stock?",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Inv_Inc_Assoc_JV) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the interest expenses and other comprehensive income where total comprehensive income is either greater than 13404000000.0 or less than 13404000000.0.",
    "query": "SELECT Income_Statement.Int_Exp , Income_Statement.Oth_Compre_Inc FROM Income_Statement WHERE Income_Statement.Tot_Compre_Inc > 13404000000.0 OR Income_Statement.Tot_Compre_Inc < 13404000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of all stocks where the total comprehensive income is 19001184000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Compre_Inc <= 19001184000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the stock codes whose minority shareholders' equity is not equal to 7980000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Minor_Int_Eq != 7980000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have the highest three values of total liabilities and owner's equity?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tot_Liab_Own_Eq DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the issue bonds and total comprehensive income of the top 5 records with the highest value of issued bonds.",
    "query": "SELECT Cash_Flow_Statement.Issue_Bonds , Income_Statement.Tot_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Issue_Bonds DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have hold-to-maturity investments exceeding 46283995696 for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Held_Mat_Invest > 46283995696 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the total owner's equity attributable to the parent company and derivative financial assets of the top five records with the highest total owner's equity attributable to the parent company.",
    "query": "SELECT Balance_Sheet.Own_Eq_Attr_Parent , Balance_Sheet.Deriv_Assets FROM Balance_Sheet ORDER BY Balance_Sheet.Own_Eq_Attr_Parent DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net profit and non-operating expenses of records with net profit less than 23972000000.0.",
    "query": "SELECT Income_Statement.Net_Profit , Income_Statement.Non_Op_Exp FROM Income_Statement WHERE Income_Statement.Net_Profit < 23972000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list out the other assets value for each borrowing funds from other financial institutions value, given that the other assets value is greater than 43087000000.0.",
    "query": "SELECT Balance_Sheet.Oth_Assets , Balance_Sheet.Bor_Funds_Oth_FIs FROM Balance_Sheet WHERE Balance_Sheet.Oth_Assets > 43087000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the five most common total assets values in the records?",
    "query": "SELECT Balance_Sheet.Tot_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Assets ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have a security code containing the substring '600016.SH'?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600016.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the tax and surcharge values that appear less than 13 times in the records?",
    "query": "SELECT Income_Statement.Tax_n_Surs FROM Income_Statement GROUP BY Income_Statement.Tax_n_Surs HAVING COUNT (*) < 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or have a net increase in cash and cash equivalents of 22704805000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Cash_Flow_Statement.Net_CF_Cash_Equiv = 22704805000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have business and management fees equal to 51877000000.0 or 24257000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Gen_n_Admin_Exps = 51877000000.0 OR Income_Statement.Gen_n_Admin_Exps = 24257000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of securities that appear less than 13 times in the data.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) < 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which cash payments for taxes value has at least 4 records where loss on disposal of non current assets exceeds 22986325737?",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Taxes FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Loss_Disposal_Nonc_Assets > 22986325737 GROUP BY Cash_Flow_Statement.Cash_Pay_Taxes HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three stocks have the highest value of \"other\" in cash flow statement?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Other DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the interbank deposits values that appeared more than once?",
    "query": "SELECT Balance_Sheet.IB_Deposits FROM Balance_Sheet GROUP BY Balance_Sheet.IB_Deposits HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the highest, lowest and average loss on disposal of non current assets across all records.",
    "query": "SELECT MAX (Income_Statement.Loss_Disposal_Nonc_Assets) , MIN (Income_Statement.Loss_Disposal_Nonc_Assets), AVG (Income_Statement.Loss_Disposal_Nonc_Assets) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many records have a stock code of 600036.SH or other business income equal to 1376000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Income_Statement.Oth_Biz_Inc = 1376000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have other liabilities value less than 1980?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Oth_Liab < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a cash impact from exchange rate change smaller than 1980?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.FX_Rate_Change_Cash < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the subsidiary pay to minority shareholders for records with net increase in deposits with central bank and interbank funds between 5929841125.0 and 5929841125.0.",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Pay_Minority FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.CenBank_Interbank_Net_Inc BETWEEN 5929841125.0 AND 5929841125.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the maximum, minimum and average lending funds across all records.",
    "query": "SELECT MAX (Balance_Sheet.Lending_Funds) , MIN (Balance_Sheet.Lending_Funds), AVG (Balance_Sheet.Lending_Funds) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the total liabilities and owner's equity value that only appears in one record.",
    "query": "SELECT Balance_Sheet.Tot_Liab_Own_Eq FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab_Own_Eq HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information available in the cash flow statement for each record.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest values of minority interest in net income?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Minor_Int_Inc_Loss DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all records with a Stk_Name containing the phrase 'China Merchants Bank'.",
    "query": "SELECT DISTINCT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%China Merchants Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with either 600000.SH stock code or other operating activities' cash equal to 1414041000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Cash_Flow_Statement.Cash_Oth_Oper_Activities = 1414041000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of top three companies that have the largest income from changes in fair value.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.FV_Change_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all the information available in the balance sheet records.",
    "query": "SELECT * FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average value of intangible assets, and find the smallest hold-to-maturity investment and fixed assets in our data.",
    "query": "SELECT AVG (Balance_Sheet.Intang_Assets) , MIN (Balance_Sheet.Held_Mat_Invest), MIN (Balance_Sheet.Fix_Assets) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the details from cash flow statement records.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the subsidiary absorb minority values of records where investment income is null.",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Absorb_Minority FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Investment_Income IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average general risk preparation for each undistributed profit value.",
    "query": "SELECT avg(Balance_Sheet.Gen_Risk_Res) , Balance_Sheet.Undist_Profits FROM Balance_Sheet GROUP BY Balance_Sheet.Undist_Profits"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the fixed assets of each record, along with the total paid-in capital for each fixed asset value.",
    "query": "SELECT Balance_Sheet.Fix_Assets , SUM (Balance_Sheet.Paid_Up_Cap) FROM Balance_Sheet GROUP BY Balance_Sheet.Fix_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average value of net cash received from disposal of fixed assets, intangible assets, and other long-term assets in our records?",
    "query": "SELECT MAX (Cash_Flow_Statement.Cash_Disposal_Assets) , MIN (Cash_Flow_Statement.Cash_Disposal_Assets), AVG (Cash_Flow_Statement.Cash_Disposal_Assets) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average loss from changes in fair value for each debt repayment value.",
    "query": "SELECT avg(Cash_Flow_Statement.Fair_Value_Change_Loss) , Cash_Flow_Statement.Repay_Debt FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Repay_Debt"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the operating profit and income tax expenses for records with net increase in borrowing funds from other financial institutions either greater than 42535609834 or shorter than 39176273386.",
    "query": "SELECT Income_Statement.Oper_Profit , Income_Statement.Income_Tax_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_IB_Borrowings > 42535609834 OR Cash_Flow_Statement.Net_Inc_IB_Borrowings < 39176273386"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the records for each stock name that have other business income greater than 1376000000.0, along with the count of records for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Inc > 1376000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the securities code of the records that have a different value than 4399000000.0 in fixed assets depreciation and depletion.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec != 4399000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return all the unique securities codes in our database.",
    "query": "SELECT distinct(Basic_Info.Stk_Code) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an exchange gain income value less than 1980?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Exch_Gain_Inc < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the decrease in inventory for records whose non operating income is between 26000000.0 and 78000000.0.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Non_Op_Rev BETWEEN 26000000.0 AND 78000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information available in the Basic_Info table.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock codes and business and management fees for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Gen_n_Admin_Exps FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock codes of records with operating expenses less than or equal to 64652000000.0, arranged in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Exp <= 64652000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have loss on disposal of non current assets value greater than 43118166157 and other value greater than 41995235271?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Loss_Disposal_Nonc_Assets > 43118166157 AND Cash_Flow_Statement.Other > 41995235271"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all distinct values of deferred tax liabilities in our records.",
    "query": "SELECT distinct(Balance_Sheet.Def_IT_Liab) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each company, show me the records where the operating revenue exceeds 38842871000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Rev > 38842871000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or an opening balance of cash equal to 15209000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Cash_Flow_Statement.Cash_Begin_Period = 15209000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the operating expenses in descending order based on the losses from minority interest.",
    "query": "SELECT Income_Statement.Oper_Exp FROM Income_Statement ORDER BY Income_Statement.Minor_Int_Inc_Loss DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of top three companies in terms of convertible corporate bonds maturing within one year.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Huaxia Bank or have an opening balance of cash equivalents equal to 26692458356.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Cash_Flow_Statement.Cash_Eq_Begin_Period = 26692458356.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please give me the names of two stocks with the highest subtotal of cash inflows from financing activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fin_CF_In_Sub DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the cash paid for other operating activities in all the records, and the total cash paid for interest, handling fees, and commissions for each cash paid for other operating activities.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Op_Other , SUM (Cash_Flow_Statement.Cash_Pay_Int_Fees_Com) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Op_Other"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the least frequent value of loss from changes in fair value in cash flow statement?",
    "query": "SELECT Cash_Flow_Statement.Fair_Value_Change_Loss FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fair_Value_Change_Loss ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please provide me the name of each stock and its corresponding value of minority shareholders' equity, sorted by the value of financial assets sold for repurchase in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Minor_Int_Eq FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Sell_Rep_FAs DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of stocks that appear less than 8 times.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) < 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a stock code of 600016.SH or expenses at handling fees and commission equal to 2605000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Income_Statement.Fee_Com_Exp = 2605000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records for each stock have cash paid for taxes more than 30823000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Taxes > 30823000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net cash flow generated from cash equivalents for records where amortization of intangible assets is null.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Cash_Equiv FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Intangible_Asset_Amortization IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return a list of long term equity investments in the balance sheet table.",
    "query": "SELECT Balance_Sheet.LT_Eq_Invest FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average surplus reserves, minimum deposits from interbank and other financial institutions, and minimum deposit absorption of all records.",
    "query": "SELECT AVG (Balance_Sheet.Sur_Reserves) , MIN (Balance_Sheet.IB_Dep_Oth_FIs), MIN (Balance_Sheet.Acc_Deposits) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock code with total comprehensive income exceeding 78238000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Compre_Inc > 78238000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the name of the securities that contain the phrase 'China Merchants Bank' in their name.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%China Merchants Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of the stock that appears the least in the data.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock names that appear in more than 6 records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) > 6"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which accounts receivable investment value has the fewest number of records?",
    "query": "SELECT Balance_Sheet.Recv_Invest FROM Balance_Sheet GROUP BY Balance_Sheet.Recv_Invest ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have received investments of exactly 842680000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Recv_Investment = 842680000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest and lowest net increase in customer deposits and interbank deposits among all records?",
    "query": "SELECT MAX (Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits) , MIN (Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the name of stocks whose received investment is less than or equal to 842680000000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Recv_Investment <= 842680000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the value of net cash received from disposal of fixed assets, intangible assets, and other long-term assets that appeared exactly once.",
    "query": "SELECT Cash_Flow_Statement.Cash_Disposal_Assets FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Disposal_Assets HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of two companies with the highest available-for-sale financial assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Avail_Sale_FAs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me Conv_Bonds_Maturing_Within_1Y and Other Business Income from all records.",
    "query": "SELECT Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y , Income_Statement.Oth_Biz_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose taxes and surcharges are smaller than or equal to 1043000000.0, in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tax_n_Surs <= 1043000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have operating revenue equal to 38842871000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Oper_Rev = 38842871000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the total assets for each fixed asset value.",
    "query": "SELECT Balance_Sheet.Fix_Assets , SUM (Balance_Sheet.Tot_Assets) FROM Balance_Sheet GROUP BY Balance_Sheet.Fix_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three securities have the highest increase in operating payables?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Oper_Payables_Increase DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the other business costs that have at least four records with operating profit greater than 22470290000.0.",
    "query": "SELECT Income_Statement.Oth_Biz_Costs FROM Income_Statement WHERE Income_Statement.Oper_Profit > 22470290000.0 GROUP BY Income_Statement.Oth_Biz_Costs HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks that appear less than 9 times in our data.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) < 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "could you list the names of stocks that have at least 7 records in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) >= 7"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock codes and their corresponding hold-to-maturity investments, sorted in descending order of borrowing funds from other financial institutions.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Held_Mat_Invest FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Bor_Funds_Oth_FIs DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the diluted earnings per share value that only appears once in the records?",
    "query": "SELECT Income_Statement.Diluted_EPS FROM Income_Statement GROUP BY Income_Statement.Diluted_EPS HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of the decrease in deferred income tax assets for records with net increase in cash and cash equivalents between 66167000000.0 and -15933000000.0?",
    "query": "SELECT Cash_Flow_Statement.DIT_Asset_Reduction FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.IM_NCF_Cash_Eq BETWEEN 66167000000.0 AND -15933000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash paid for assets and asset impairment provision values when the opening balance of cash equivalents is either greater than 87707000000.0 or less than 63953659000.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Assets , Cash_Flow_Statement.Asset_Impairment_Dec FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Initial_Cash_Equiv > 87707000000.0 OR Cash_Flow_Statement.Initial_Cash_Equiv < 63953659000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the cash flow statement net income of records whose sum of cash outflows from investment activities is greater than 10.",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Net_Income FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.CF_Stmt_Net_Income HAVING sum(Cash_Flow_Statement.Inv_CF_Out_Sub) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the cash received from other investment value of 503000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Recv_Other_Invest = 503000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum net cash flow generated from investment activities for all records.",
    "query": "SELECT avg(Cash_Flow_Statement.Net_CF_Inv), max(Cash_Flow_Statement.Net_CF_Inv) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or have general and administrative expenses equal to 51877000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Income_Statement.Gen_n_Admin_Exps = 51877000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the total liabilities value that appeared most frequently in records?",
    "query": "SELECT Balance_Sheet.Tot_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of stocks whose intangible assets are less than or equal to 7467000000.0, sorted in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Intang_Assets <= 7467000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of the top three records with the highest diluted earnings per share.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Diluted_EPS DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a financial expense in cash flow statement exceeding 41100351237 and a business and management fee in income statement greater than 13287000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Fin_Expenses > 41100351237 AND Income_Statement.Gen_n_Admin_Exps > 13287000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of all stocks whose lending funds are not equal to 49776000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Lending_Funds != 49776000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have and the company name for each stock that borrowed funds from other financial institutions more than 106646000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Bor_Funds_Oth_FIs > 106646000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the maximum, minimum and average value of other liabilities across all records.",
    "query": "SELECT MAX (Balance_Sheet.Oth_Liab) , MIN (Balance_Sheet.Oth_Liab), AVG (Balance_Sheet.Oth_Liab) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three stocks with the highest translation difference of foreign currency statements.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Exch_Diff_Cash DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average and maximum value of cash received from other financing activities for all records?",
    "query": "SELECT avg(Cash_Flow_Statement.Recv_Other_Fin), max(Cash_Flow_Statement.Recv_Other_Fin) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the operating cash outflows and interest income of records whose net increase in customer deposits and interbank deposits is above 97042000000.0 or below 185841000000.0?",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Out_Sub , Income_Statement.Int_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits > 97042000000.0 OR Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits < 185841000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have estimated liabilities above 6541000000.0 for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Est_Liab > 6541000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have net increase in borrowing funds from other financial institutions equal to 42535609834?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_Inc_IB_Borrowings = 42535609834"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum value of other business income for each record.",
    "query": "SELECT avg(Income_Statement.Oth_Biz_Inc), max(Income_Statement.Oth_Biz_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the distinct value of the minority interest in our data.",
    "query": "SELECT distinct(Income_Statement.Minor_Int_Inc_Loss) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the fair value changes in income statement with at least 4 records that have dividends and profits paid out more than 16948000000.0.",
    "query": "SELECT Income_Statement.FV_Change_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Distribute_Dividends_Profits > 16948000000.0 GROUP BY Income_Statement.FV_Change_Inc HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the information of records with negative net profit in cash flow statement.",
    "query": "SELECT * FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.CF_Stmt_Net_Income < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the non-operating revenues that occur less than 6 times in our records?",
    "query": "SELECT Income_Statement.Non_Op_Rev FROM Income_Statement GROUP BY Income_Statement.Non_Op_Rev HAVING COUNT (*) < 6"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of top three stocks with the highest interest expenses.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Int_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the names of stocks whose total owner's equity attributable to the parent company is not equal to 713100000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Own_Eq_Attr_Parent != 713100000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the investment income from associates and joint ventures, along with the number of unique issue bonds and the total count of records in each group.",
    "query": "SELECT Income_Statement.Inv_Inc_Assoc_JV , count(DISTINCT Cash_Flow_Statement.Issue_Bonds) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Inv_Inc_Assoc_JV"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock codes of records with noble metal value less than or equal to 37602114584.0, sorted by stock code in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Prec_Metals <= 37602114584.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an income from changes in fair value more than 4223000000.0 and other business income more than 1283000000.0?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.FV_Change_Inc > 4223000000.0 AND Income_Statement.Oth_Biz_Inc > 1283000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of stock names and loss on disposal of non current assets in descending order of total comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Loss_Disposal_Nonc_Assets FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "fetch the investment losses of records with assets impairment losses ranging from 49000000.0 to 732000000.0.",
    "query": "SELECT Cash_Flow_Statement.Investment_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Assets_Imp_Loss BETWEEN 49000000.0 AND 732000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the stock names and the count of unique investment income from associates and joint ventures for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Income_Statement.Inv_Inc_Assoc_JV) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many records have cash paid to and on behalf of employees more than 16499000000.0, for each company name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Emp > 16499000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock names and non-operating revenue of all records, sorted by assets impairment loss in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Non_Op_Rev FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Assets_Imp_Loss DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the received other cash related to financing activities in all records, along with the total amount of cash paid for distributing dividends, profits, or paying interest for each value of received other cash related to financing activities.",
    "query": "SELECT Cash_Flow_Statement.Recv_Other_Fin , SUM (Cash_Flow_Statement.Distribute_Dividends_Profits) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Recv_Other_Fin"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock codes have 5 or more records available?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the accounts receivable investments that have at least 4 records and their corresponding owner's equity attributable to the parent company value is greater than 977126000000.0.",
    "query": "SELECT Balance_Sheet.Recv_Invest FROM Balance_Sheet WHERE Balance_Sheet.Own_Eq_Attr_Parent > 977126000000.0 GROUP BY Balance_Sheet.Recv_Invest HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the general risk preparation value and their frequencies.",
    "query": "SELECT Balance_Sheet.Gen_Risk_Res , count(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Gen_Risk_Res"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the interest expense of each record ordered by the subtotal of cash outflows from operating activities in descending order?",
    "query": "SELECT Income_Statement.Int_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Op_CF_Out_Sub DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the distinct names of all securities in our data.",
    "query": "SELECT distinct(Basic_Info.Stk_Name) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code, trading financial assets and other liabilities for each record.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Trad_FAs , Balance_Sheet.Oth_Liab FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes that have more than 13 records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) > 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose basic earnings per share is not equal to 2.93.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Basic_EPS != 2.93"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600919.SH or a non-operating revenue of 26000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Income_Statement.Non_Op_Rev = 26000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of stocks and how many different values of amortization of long-term deferred expenses does each stock have.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Cash_Flow_Statement.Longterm_Amortization) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have investment income greater than 20864000000.0 and debt repayment greater than 2822000000.0?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Investment_Income > 20864000000.0 AND Cash_Flow_Statement.Repay_Debt > 2822000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the five non-operating income values with the highest frequency.",
    "query": "SELECT Income_Statement.Non_Op_Rev FROM Income_Statement GROUP BY Income_Statement.Non_Op_Rev ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or received cash for interest, handling fees, and commissions equal to 198669000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Cash_Flow_Statement.Cash_Int_Commission_Collected = 198669000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the loss on disposal of non current assets that exceeds 14489125932, along with the corresponding cash outflows from investment activities.",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets , Cash_Flow_Statement.Inv_CF_Out_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Loss_Disposal_Nonc_Assets > 14489125932"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code for records whose fixed assets acquired through financing lease is not equal to 33810400228.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets != 33810400228"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code and subtotal of cash inflows from financing activities, sorted by the increase in operating payables in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Fin_CF_In_Sub FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Oper_Payables_Increase DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have their payment for the purchase and construction of fixed assets, intangible assets, and other long-term assets either 1273001000.0 or 3392000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Assets = 1273001000.0 OR Cash_Flow_Statement.Cash_Pay_Assets = 3392000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of three companies with the largest reduction in operating receivables.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Oper_Receivables_Decrease DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the value of inventory decrease sorted in descending order by net income from handling fees and commissions.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Net_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me exchange gains with at least 4 records having cash from other operating activities more than 1414041000.0.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Oth_Oper_Activities > 1414041000.0 GROUP BY Income_Statement.Exch_Gain_Inc HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average value of hold-to-maturity investments in our records?",
    "query": "SELECT MAX (Balance_Sheet.Held_Mat_Invest) , MIN (Balance_Sheet.Held_Mat_Invest), AVG (Balance_Sheet.Held_Mat_Invest) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the instances of borrowing funds from other financial institutions and minority shareholders' equity in records where borrowing funds from other financial institutions is greater than 250981000000.0?",
    "query": "SELECT Balance_Sheet.Bor_Funds_Oth_FIs , Balance_Sheet.Minor_Int_Eq FROM Balance_Sheet WHERE Balance_Sheet.Bor_Funds_Oth_FIs > 250981000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the least frequent value of fixed assets in the records, sorted by their frequency?",
    "query": "SELECT Balance_Sheet.Fix_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Fix_Assets ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each value of cash paid for the purchase and construction of fixed assets, intangible assets, and other long-term assets, show the count of records, sorted in ascending order.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Assets , COUNT (*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Assets ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock name, give me the stock name itself, the number of distinct operating profits, as well as the total number of records related to that stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Income_Statement.Oper_Profit) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which values of issuance of loans and advances have appeared in 5 or more records?",
    "query": "SELECT Balance_Sheet.Loans_Adv FROM Balance_Sheet GROUP BY Balance_Sheet.Loans_Adv HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net profit attributable to the owner of the parent company for all records, and also provide the total investment income for each of them.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit , SUM (Income_Statement.Inv_Inc) FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Net_Profit"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the smallest net increase in customer deposits and interbank deposits value, from the records table with the least occurrence?",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average handling fees and commission expenses, minimum investment income, and minimum total comprehensive income attributable to shareholders of the parent company for all records?",
    "query": "SELECT AVG (Income_Statement.Fee_Com_Exp) , MIN (Income_Statement.Inv_Inc), MIN (Income_Statement.Attr_Parent_Shareholders_Compre_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the most frequent value of net income from handling fees and commissions?",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Net_Inc ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net profit of records where the net increase in borrowing funds from other financial institutions is null.",
    "query": "SELECT Income_Statement.Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_IB_Borrowings IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the net income from handling fees and commissions for those whose opening balance of cash equivalents is more than 10, grouped by the net income from handling fees and commissions?",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Fee_Com_Net_Inc HAVING sum(Cash_Flow_Statement.Initial_Cash_Equiv) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which companies have different convertible corporate bonds maturing within one year value from 11824985585?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y != 11824985585"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the value of total comprehensive income attributable to shareholders of the parent company that has the most occurrences in our records.",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of securities codes and net income from handling fees and commissions of all records in descending order of income from changes in fair value.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Fee_Com_Net_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.FV_Change_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the investment loss for records that do not have a value for distributing dividends and profits?",
    "query": "SELECT Cash_Flow_Statement.Investment_Loss FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Distribute_Dividends_Profits IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks that only have one record.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many records of each stock have lending funds more than 49776000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Lending_Funds > 49776000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the name of stocks along with their net increase in borrowing funds from other financial institutions.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Net_Inc_IB_Borrowings FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which security code has the highest number of members?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fair value changes income in descending order of non operating expenses.",
    "query": "SELECT Income_Statement.FV_Change_Inc FROM Income_Statement ORDER BY Income_Statement.Non_Op_Exp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all the records for each stock where the net cash flow generated from operating activities is greater than 48486000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Op > 48486000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three stocks with the highest total comprehensive income attributable to minority shareholders.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock code with surplus reserves exceeding 94985000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Sur_Reserves > 94985000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the two securities with the greatest investment losses.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Investment_Loss DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock code that have derivative financial liabilities exceeding 62341000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Deriv_Liab > 62341000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of stock names and other cash payments related to investment activities in descending order of the subtotal of cash inflows from financing activities.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Cash_Pay_Inv_Other FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fin_CF_In_Sub DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a stock code of 600015.SH or a net interest income of 51334000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Income_Statement.Net_Int_Inc = 51334000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the subsidiary pay to minority shareholders values that appear in at least 4 records, where the operating profit is greater than 26578000000.0.",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Pay_Minority FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oper_Profit > 26578000000.0 GROUP BY Cash_Flow_Statement.Subsidiary_Pay_Minority HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the different values of cash received from other investment activities and how many records have each value?",
    "query": "SELECT Cash_Flow_Statement.Recv_Other_Invest , count(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Recv_Other_Invest"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks that have net cash flow generated from operating activities different from 48486000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Op != 48486000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have assets impairment loss values less than 1980?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Assets_Imp_Loss < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average borrowing funds from other financial institutions, the minimum investment real estate, and the minimum deposit absorption across all records.",
    "query": "SELECT AVG (Balance_Sheet.Bor_Funds_Oth_FIs) , MIN (Balance_Sheet.Inv_Real_Estate), MIN (Balance_Sheet.Acc_Deposits) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum operating revenue of each record.",
    "query": "SELECT avg(Income_Statement.Oper_Rev), max(Income_Statement.Oper_Rev) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock name, the number of reductions in operating receivables, and the total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.Oper_Receivables_Decrease) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average other comprehensive income for each value of handling fees and commission expenses.",
    "query": "SELECT avg(Income_Statement.Oth_Compre_Inc) , Income_Statement.Fee_Com_Exp FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or their received investment is exactly 43118614269?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Balance_Sheet.Recv_Invest = 43118614269"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a total comprehensive income attributable to shareholders of the parent company exceeding 18362456000.0 and a total comprehensive income attributable to minority shareholders exceeding 391000000.0?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc > 18362456000.0 AND Income_Statement.Minor_Int_Shareholders_Compre_Inc > 391000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all values of general risk preparation from balance sheet records.",
    "query": "SELECT Balance_Sheet.Gen_Risk_Res FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which interest expense value has the least number of records?",
    "query": "SELECT Income_Statement.Int_Exp FROM Income_Statement GROUP BY Income_Statement.Int_Exp ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the details of the record with the highest income tax expenses.",
    "query": "SELECT * FROM Income_Statement ORDER BY Income_Statement.Income_Tax_Exp DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me the stock code and income tax expenses in a descending order of operating revenue?",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Income_Tax_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Rev DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities have the top two highest values of amortization of intangible assets?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Intangible_Asset_Amortization DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock, whose total owner's equity is greater than 307617000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Own_Eq > 307617000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of securities where the net profit in cash flow statement is less than or equal to 17625964000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Net_Income <= 17625964000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the total cash flow statement financial expenses for each total comprehensive income value.",
    "query": "SELECT Income_Statement.Tot_Compre_Inc , SUM (Cash_Flow_Statement.CF_Stmt_Fin_Expenses) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Tot_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have other cash received from investment activities over 9832846255.0 and operating expenses larger than 16372581000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Recv_Other_Invest > 9832846255.0 AND Income_Statement.Oper_Exp > 16372581000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or a derivative financial liabilities value of 62341000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Balance_Sheet.Deriv_Liab = 62341000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which five stock names appear most frequently in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the maximum and minimum value of amortization of intangible assets in all records.",
    "query": "SELECT MAX (Cash_Flow_Statement.Intangible_Asset_Amortization) , MIN (Cash_Flow_Statement.Intangible_Asset_Amortization) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or a net increase in customer loans and advances of 326411000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Cash_Flow_Statement.Cust_Loans_Net_Inc = 326411000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock names in descending alphabetical order for all records with net increase in borrowings from the central bank less than or equal to 27934000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_Borrowings_CB <= 27934000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the values of cash received for interest, handling fees, and commissions that appear more than once.",
    "query": "SELECT Cash_Flow_Statement.Cash_Int_Commission_Collected FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Int_Commission_Collected HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have total profit greater than 24747000000.0 and total comprehensive income greater than 26693000000.0?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Tot_Profit > 24747000000.0 AND Income_Statement.Tot_Compre_Inc > 26693000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the values of hold-to-maturity investments and estimated liabilities for records where other assets are either above 12296993000.0 or below 58781000000.0.",
    "query": "SELECT Balance_Sheet.Held_Mat_Invest , Balance_Sheet.Est_Liab FROM Balance_Sheet WHERE Balance_Sheet.Oth_Assets > 12296993000.0 OR Balance_Sheet.Oth_Assets < 58781000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the assets impairment loss and other comprehensive income of the top 5 records with the highest assets impairment loss value.",
    "query": "SELECT Income_Statement.Assets_Imp_Loss , Income_Statement.Oth_Compre_Inc FROM Income_Statement ORDER BY Income_Statement.Assets_Imp_Loss DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to stock 600919.SH or have deferred tax liability of exactly 1574000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Balance_Sheet.Def_IT_Liab = 1574000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the maximum, minimum and average capital converted from debt in all records.",
    "query": "SELECT MAX (Cash_Flow_Statement.Debt_Converted_Capital) , MIN (Cash_Flow_Statement.Debt_Converted_Capital), AVG (Cash_Flow_Statement.Debt_Converted_Capital) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of stock names and total comprehensive income attributable to minority shareholders in descending order of net interest income.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Net_Int_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or have a cash payment related to other operating activities of 9279000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Cash_Flow_Statement.Cash_Pay_Op_Other = 9279000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and the count of unique net income from handling fees and commissions for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Fee_Com_Net_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all columns in the records of balance sheet.",
    "query": "SELECT * FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with either the stock name of Huaxia Bank or the investment income from associates and joint ventures equals to 43028778631.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Income_Statement.Inv_Inc_Assoc_JV = 43028778631.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the highest, lowest, and average amortization of intangible assets across all records.",
    "query": "SELECT MAX (Cash_Flow_Statement.Intangible_Asset_Amortization) , MIN (Cash_Flow_Statement.Intangible_Asset_Amortization), AVG (Cash_Flow_Statement.Intangible_Asset_Amortization) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest and lowest net profit value among all records?",
    "query": "SELECT MAX (Income_Statement.Net_Profit) , MIN (Income_Statement.Net_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code and interbank deposits for records with at least 5 financial assets sold for repurchase.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.IB_Deposits FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Balance_Sheet.Sell_Rep_FAs HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net interest income values that appear at least 13 times.",
    "query": "SELECT Income_Statement.Net_Int_Inc FROM Income_Statement GROUP BY Income_Statement.Net_Int_Inc HAVING COUNT (*) >= 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net increase in cash and cash equivalents, in descending order of total comprehensive income.",
    "query": "SELECT Cash_Flow_Statement.IM_NCF_Cash_Eq FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Tot_Compre_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which interbank deposits and deposits from other financial institutions value appears exactly 11 times?",
    "query": "SELECT Balance_Sheet.IB_Dep_Oth_FIs FROM Balance_Sheet GROUP BY Balance_Sheet.IB_Dep_Oth_FIs HAVING COUNT (*) = 11"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest investment in real estate?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Inv_Real_Estate DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the debt converted to capital value in each operating profit of records where the debt converted to capital value is larger than 7528101683.",
    "query": "SELECT Cash_Flow_Statement.Debt_Converted_Capital , Income_Statement.Oper_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Debt_Converted_Capital > 7528101683"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight smallest values of derivative financial assets in the balance sheet, sorted by their frequency?",
    "query": "SELECT Balance_Sheet.Deriv_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Deriv_Assets ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the eight Stk_Code values with the lowest frequency in our records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of all records whose interest expenses is less than or equal to 41643000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Int_Exp <= 41643000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the highest bonds payable.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Bonds_PAY DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fee and commission income for all records where the net profit attributable to the owner of the parent company is null.",
    "query": "SELECT Income_Statement.Fee_Com_Inc FROM Income_Statement WHERE Income_Statement.Attr_Parent_Net_Profit IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which deferred tax assets value appears only once?",
    "query": "SELECT Balance_Sheet.Def_IT_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Def_IT_Assets HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the net profit of records where the subtotal of cash inflows from operating activities is null.",
    "query": "SELECT Income_Statement.Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Op_CF_Sub IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the number of records and the name of each stock that has other cash payments related to investment activities exceeding 44542636671.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Inv_Other > 44542636671 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of the 'other' column in records that appear exactly twice?",
    "query": "SELECT Cash_Flow_Statement.Other FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Other HAVING COUNT (*) = 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of stock names and cash inflows from financing activities in descending order of investment losses.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Fin_CF_In_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Investment_Loss DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the smallest total comprehensive income for each cash paid for assets?",
    "query": "SELECT MIN (Income_Statement.Tot_Compre_Inc) , Cash_Flow_Statement.Cash_Pay_Assets FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cash_Pay_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the three stock codes with the largest cash outflows from operating activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Op_CF_Out_Sub DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average value of taxes and surcharges in all records?",
    "query": "SELECT MAX (Income_Statement.Tax_n_Surs) , MIN (Income_Statement.Tax_n_Surs), AVG (Income_Statement.Tax_n_Surs) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the minor interest income or loss greater than 605835000.0, along with their corresponding final cash equivalents.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss , Cash_Flow_Statement.Final_Cash_Equiv FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Inc_Loss > 605835000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities codes of the records with the highest other comprehensive income?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oth_Compre_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records for each stock have exchange gains greater than 459000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Exch_Gain_Inc > 459000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Bank of Jiangsu or have received other financing amounts equal to 2283732796.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Cash_Flow_Statement.Recv_Other_Fin = 2283732796.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the decrease in deferred income tax assets and the total dividends and profits paid by subsidiaries to minority shareholders for each record.",
    "query": "SELECT Cash_Flow_Statement.DIT_Asset_Reduction , SUM (Cash_Flow_Statement.Subsidiary_Pay_Minority) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.DIT_Asset_Reduction"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the net profit values that have 10 or more occurrences.",
    "query": "SELECT Income_Statement.Net_Profit FROM Income_Statement GROUP BY Income_Statement.Net_Profit HAVING COUNT (*) >= 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me other comprehensive income values and their frequencies in our records.",
    "query": "SELECT Income_Statement.Oth_Compre_Inc , count(*) FROM Income_Statement GROUP BY Income_Statement.Oth_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the securities code of the record that has the least number of occurrences?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest business and management fees.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Gen_n_Admin_Exps DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities with the highest interest expenses?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Int_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top five frequently occurring fixed assets values?",
    "query": "SELECT Balance_Sheet.Fix_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Fix_Assets ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the greatest loss from changes in fair value?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fair_Value_Change_Loss DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the stock code 600000.SH or other business costs equal to 857000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Income_Statement.Oth_Biz_Costs = 857000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have \"other\" value larger than 43362990504 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Other > 43362990504 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either 43223398119 or 9505633568 as the value of dividends and profits paid by subsidiaries to minority shareholders?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Subsidiary_Pay_Minority = 43223398119 OR Cash_Flow_Statement.Subsidiary_Pay_Minority = 9505633568"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net profit of records sorted in descending order of basic earnings per share.",
    "query": "SELECT Income_Statement.Net_Profit FROM Income_Statement ORDER BY Income_Statement.Basic_EPS DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the net cash flow generated from investment activities and net increase in deposits with central bank and interbank funds for records with net cash flow generated from investment activities exceeding -2693000000.0.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Inv , Cash_Flow_Statement.CenBank_Interbank_Net_Inc FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_CF_Inv > -2693000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose absorption of deposits is no more than 5069529000000.0, sorted by their names in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Acc_Deposits <= 5069529000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the information about the records with negative cash and deposits with the central bank.",
    "query": "SELECT * FROM Balance_Sheet WHERE Balance_Sheet.Cash_CB < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Give me the names of the top three companies with the highest values of cash received from subsidiaries absorbing minority shareholder investments.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Subsidiary_Absorb_Minority DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the number of total owner's equity and total number of records for each stock name in the database.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Balance_Sheet.Tot_Own_Eq) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of top three stocks with the largest cash inflows from operating activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Op_CF_Sub DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the value of deposits from interbank and other financial institutions with the most number of records.",
    "query": "SELECT Balance_Sheet.IB_Dep_Oth_FIs FROM Balance_Sheet GROUP BY Balance_Sheet.IB_Dep_Oth_FIs ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have treasury stock value equal to 14922247591?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Treas_Stock = 14922247591"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either 78338000000.0 or 89866000000.0 as their interest expenses?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Int_Exp = 78338000000.0 OR Income_Statement.Int_Exp = 89866000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with either the stock name China Mingsheng Bank or the impact of exchange rate changes on cash equal to 212289000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Cash_Flow_Statement.FX_Rate_Change_Cash = 212289000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the surplus reserves and the total lending funds of each record.",
    "query": "SELECT Balance_Sheet.Sur_Reserves , SUM (Balance_Sheet.Lending_Funds) FROM Balance_Sheet GROUP BY Balance_Sheet.Sur_Reserves"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the non-operating expenses values that appeared more than twice?",
    "query": "SELECT Income_Statement.Non_Op_Exp FROM Income_Statement GROUP BY Income_Statement.Non_Op_Exp HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have operating expenses greater than 64652000000.0 for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Exp > 64652000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, how many different values of operating expenses do we have?",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Oper_Exp) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me all the instances where the minor interest losses are greater than 685000000.0, along with their corresponding investment income from associates and joint ventures.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss , Income_Statement.Inv_Inc_Assoc_JV FROM Income_Statement WHERE Income_Statement.Minor_Int_Inc_Loss > 685000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of records that have cash and deposits with central bank greater than 590855000000.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Cash_CB > 590855000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of eight companies, sorted in ascending order of their frequency in the records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please provide me with the number of records and distinct basic earnings per share for each stock, along with the name of the stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Income_Statement.Basic_EPS) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the smallest value of minority interest income loss for each total comprehensive income.",
    "query": "SELECT MIN (Income_Statement.Minor_Int_Inc_Loss) , Income_Statement.Tot_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Tot_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the Stk_Code and Deposits from interbank and other financial institutions of all records in descending order of long term equity investment.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.IB_Dep_Oth_FIs FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.LT_Eq_Invest DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have less than 11 records in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) < 11"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock names and cash received for interest, handling fees, and commissions in all records.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Cash_Int_Commission_Collected FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of top three securities with the highest cash paid for distributing dividends, profits, or paying interest.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Distribute_Dividends_Profits DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each non-operating revenue value that exceeds 10, give me the corresponding operating receivables reduction value.",
    "query": "SELECT Cash_Flow_Statement.Oper_Receivables_Decrease FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Oper_Receivables_Decrease HAVING sum(Income_Statement.Non_Op_Rev) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock code of the record with the least frequency in the table.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the net cash flow generated from cash equivalents in descending order by cash paid for other operating activities.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Cash_Equiv FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cash_Pay_Op_Other DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all records with unique values of impact of exchange rate changes on cash and cash equivalents.",
    "query": "SELECT distinct(Cash_Flow_Statement.FX_Rate_Change_Cash) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum value of comprehensive income attributable to shareholders of the parent company for each record.",
    "query": "SELECT avg(Income_Statement.Attr_Parent_Shareholders_Compre_Inc), max(Income_Statement.Attr_Parent_Shareholders_Compre_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average tax paid for each decrease in inventory.",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_Pay_Taxes) , Cash_Flow_Statement.Inventory_Decrease FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Inventory_Decrease"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have estimated liabilities equal to 2345000000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Est_Liab = 2345000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the fixed assets acquired through financing lease that have occurred at least 10 times.",
    "query": "SELECT Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets HAVING COUNT (*) >= 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the exchange difference of foreign currency statements that have at least 4 records with minority shareholders' equity larger than 7437337000.0?",
    "query": "SELECT Balance_Sheet.Exch_Diff_Cash FROM Balance_Sheet WHERE Balance_Sheet.Minor_Int_Eq > 7437337000.0 GROUP BY Balance_Sheet.Exch_Diff_Cash HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what values of net increase in deposits with central bank and interbank funds appear multiple times?",
    "query": "SELECT Cash_Flow_Statement.CenBank_Interbank_Net_Inc FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.CenBank_Interbank_Net_Inc HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average cash inflow from investment activities for each increase in deferred income tax liabilities?",
    "query": "SELECT avg(Cash_Flow_Statement.Inv_CF_In_Sub) , Cash_Flow_Statement.DIT_Liability_Increase FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.DIT_Liability_Increase"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there for each closing balance of cash equivalent? please sort the result in ascending order.",
    "query": "SELECT Cash_Flow_Statement.Cash_Eq_End_Period , COUNT (*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Eq_End_Period ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the increase in deferred income tax liabilities for records that have at least one occurrence.",
    "query": "SELECT Cash_Flow_Statement.DIT_Liability_Increase FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.DIT_Liability_Increase HAVING COUNT (*) >= 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all information on records where cash paid to employees is negative.",
    "query": "SELECT * FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Emp < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the securities codes of records whose interest receivable is not equal to 36316547555.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Int_Receiv != 36316547555"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the smallest borrowing from the Central Bank for each lending funds value.",
    "query": "SELECT MIN (Balance_Sheet.Bor_CB) , Balance_Sheet.Lending_Funds FROM Balance_Sheet GROUP BY Balance_Sheet.Lending_Funds"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the five cash equivalents opening balance values that have the highest frequency in our data.",
    "query": "SELECT Cash_Flow_Statement.Cash_Eq_Begin_Period FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Eq_Begin_Period ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net profit in cash flow statement and the sum of income tax expenses for each net profit value.",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Net_Income , SUM (Income_Statement.Income_Tax_Exp) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.CF_Stmt_Net_Income"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all FV_Change_Inc and Minor_Int_Inc_Loss values for the records whose FV_Change_Inc is less than 4223000000.0.",
    "query": "SELECT Income_Statement.FV_Change_Inc , Income_Statement.Minor_Int_Inc_Loss FROM Income_Statement WHERE Income_Statement.FV_Change_Inc < 4223000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you give me the stock name and estimated liabilities in descending order of total owner's equity attributable to the parent company?",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Est_Liab FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Own_Eq_Attr_Parent DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the maximum and minimum net profit attributable to the owner of the parent company in our data?",
    "query": "SELECT MAX (Income_Statement.Attr_Parent_Net_Profit) , MIN (Income_Statement.Attr_Parent_Net_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of all stocks whose taxes and fees payable is not equal to 17577000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tax_Pay != 17577000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes and total comprehensive income attributable to minority shareholders of records where the number of handling fees and commission expenses is 5 or more.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Fee_Com_Exp HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the other liabilities that have at least 4 records with estimated liabilities greater than 6541000000.0.",
    "query": "SELECT Balance_Sheet.Oth_Liab FROM Balance_Sheet WHERE Balance_Sheet.Est_Liab > 6541000000.0 GROUP BY Balance_Sheet.Oth_Liab HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities with the highest capital converted from debt?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Debt_Converted_Capital DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest operating expenses.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum operating revenue for each record.",
    "query": "SELECT avg(Income_Statement.Oper_Rev), max(Income_Statement.Oper_Rev) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have treasury stock greater than 18462901041 and deposits from interbank and other financial institutions greater than 586667000000.0?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Treas_Stock > 18462901041 AND Balance_Sheet.IB_Dep_Oth_FIs > 586667000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there for each stock name that have interbank deposits more than 117813000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.IB_Deposits > 117813000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the number of intangible assets and total number of records for each stock name.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Balance_Sheet.Intang_Assets) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest subtotals of cash inflows from financing activities?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fin_CF_In_Sub DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with either stock code 600036.SH or purchase of resale financial assets equals to 277862000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Balance_Sheet.Buyback_FAs = 277862000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks whose loss on disposal of fixed assets, intangible assets, and other long-term assets value is not equal to -8439000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec != -8439000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code and net interest income of each record, sorted in descending order by the \"other\" column.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Net_Int_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Other DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock name appears the most frequently?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the smallest value of loans and advances for each lending funds.",
    "query": "SELECT MIN (Balance_Sheet.Loans_Adv) , Balance_Sheet.Lending_Funds FROM Balance_Sheet GROUP BY Balance_Sheet.Lending_Funds"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have with the stock name \"Huaxia Bank\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"Huaxia Bank\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an investment in real estate value greater than 1227000000.0 for each stock code?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Inv_Real_Estate > 1227000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the initial balance of cash equivalents for each stock, sorted by the total comprehensive income attributable to minority shareholders in descending order.",
    "query": "SELECT Cash_Flow_Statement.Initial_Cash_Equiv FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the average net interest income of each record, grouped by convertible corporate bonds maturing within one year.",
    "query": "SELECT avg(Income_Statement.Net_Int_Inc) , Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the capital reserves of records with null values in derivative financial liabilities.",
    "query": "SELECT Balance_Sheet.Cap_Reserves FROM Balance_Sheet WHERE Balance_Sheet.Deriv_Liab IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the most frequently occurring value of total liabilities and owner's equity?",
    "query": "SELECT Balance_Sheet.Tot_Liab_Own_Eq FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab_Own_Eq ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the values of deferred tax liabilities in the balance sheet records.",
    "query": "SELECT Balance_Sheet.Def_IT_Liab FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities have 12 or more records in our database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) >= 12"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top two securities with the highest treasury stock?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Treas_Stock DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different stock names are there in our data?",
    "query": "SELECT count(DISTINCT Basic_Info.Stk_Name) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of each stock, the number of different asset impairment loss values it has, and the total number of records for that stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Income_Statement.Assets_Imp_Loss) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of income from changes in fair value that appeared more than once?",
    "query": "SELECT Income_Statement.FV_Change_Inc FROM Income_Statement GROUP BY Income_Statement.FV_Change_Inc HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the information about records with negative net interest income.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Net_Int_Inc < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the records with stock codes containing the substring '600016.SH'.",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600016.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each company name, provide a list of records that have interest expenses higher than 78338000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Int_Exp > 78338000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the total assets value, the count of distinct total liabilities, and the total count of records for each total assets value.",
    "query": "SELECT Balance_Sheet.Tot_Assets , count(DISTINCT Balance_Sheet.Tot_Liab) , count(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have cash paid to and on behalf of employees more than 31302000000.0 and opening balance of cash equivalents greater than 63953659000.0?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Emp > 31302000000.0 AND Cash_Flow_Statement.Initial_Cash_Equiv > 63953659000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have with a stock code equal to 600036.SH or a value of 7437337000.0 for minority shareholders' equity?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Balance_Sheet.Minor_Int_Eq = 7437337000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the diluted earnings per share for all records, along with the total cash received from other cash related to operating activities for each.",
    "query": "SELECT Income_Statement.Diluted_EPS , SUM (Cash_Flow_Statement.Cash_Oth_Oper_Activities) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Diluted_EPS"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have appeared less than 5 times in the records?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) < 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have intangible asset amortization values of either 32214617540.0 or 21000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Intangible_Asset_Amortization = 32214617540.0 OR Cash_Flow_Statement.Intangible_Asset_Amortization = 21000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for the top 5 other business costs, tell me the corresponding values of other cash received related to financing activities and other business costs.",
    "query": "SELECT Income_Statement.Oth_Biz_Costs , Cash_Flow_Statement.Recv_Other_Fin FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Oth_Biz_Costs DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the net increase in borrowings from the central bank and the minority interest for the top 5 records with the largest net increase in borrowings from the central bank.",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_Borrowings_CB , Income_Statement.Minor_Int_Inc_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_Inc_Borrowings_CB DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records exist for Huaxia Bank or interbank deposits of 147145000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Balance_Sheet.IB_Deposits = 147145000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of companies with purchase of resale financial assets less than or equal to 75358000000.0, sorted in descending order of their names?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Buyback_FAs <= 75358000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the total owner's equity and bonds payable values for records with total owner's equity less than 985913000000.0.",
    "query": "SELECT Balance_Sheet.Tot_Own_Eq , Balance_Sheet.Bonds_PAY FROM Balance_Sheet WHERE Balance_Sheet.Tot_Own_Eq < 985913000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the translation difference of foreign currency statements that have at least 5 records.",
    "query": "SELECT Balance_Sheet.Exch_Diff_Cash FROM Balance_Sheet GROUP BY Balance_Sheet.Exch_Diff_Cash HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of records that have a different value for lending funds than 188526000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Lending_Funds != 188526000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two companies with the highest cash outflows from operating activities?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Op_CF_Out_Sub DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or have estimated liabilities of 2408443000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Balance_Sheet.Est_Liab = 2408443000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have both foreign exchange rate change on cash and cash equivalents exceeding 3958000000.0 and net profit attributable to the owner of the parent company surpassing 75752000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.FX_Rate_Change_Cash > 3958000000.0 AND Income_Statement.Attr_Parent_Net_Profit > 75752000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all values of investment losses from the cash flow statement records.",
    "query": "SELECT Cash_Flow_Statement.Investment_Loss FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of top three stocks with the highest depreciation of fixed assets, depletion of oil and gas assets, and depreciation of productive biological assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the average value of received other cash related to investment activities, the minimum value of exchange gains, and the minimum value of other cash payments related to investment activities in our data.",
    "query": "SELECT AVG (Cash_Flow_Statement.Recv_Other_Invest) , MIN (Income_Statement.Exch_Gain_Inc), MIN (Cash_Flow_Statement.Cash_Pay_Inv_Other) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the other comprehensive income values from income statement, where the total comprehensive income attributable to minority shareholders falls between 530000000.0 and 638728000.0.",
    "query": "SELECT Income_Statement.Oth_Compre_Inc FROM Income_Statement WHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc BETWEEN 530000000.0 AND 638728000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest operating expenses?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which companies have fixed asset scrap loss less than or equal to 33004342177, sorted by their names in descending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fixed_Asset_Scrap_Loss <= 33004342177 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the interest income values in descending order of net interest income.",
    "query": "SELECT Income_Statement.Int_Inc FROM Income_Statement ORDER BY Income_Statement.Net_Int_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top two stocks with the highest cash received from issuing bonds.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Issue_Bonds DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the translation difference of foreign currency statements and the total estimated liabilities of each record.",
    "query": "SELECT Balance_Sheet.Exch_Diff_Cash , SUM (Balance_Sheet.Est_Liab) FROM Balance_Sheet GROUP BY Balance_Sheet.Exch_Diff_Cash"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600036.SH or trading financial assets value equal to 740222000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Balance_Sheet.Trad_FAs = 740222000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average net profit attributable to the owner of the parent company across all records?",
    "query": "SELECT MAX (Income_Statement.Attr_Parent_Net_Profit) , MIN (Income_Statement.Attr_Parent_Net_Profit), AVG (Income_Statement.Attr_Parent_Net_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a company name of Shanghai Pudong Development Bank or a borrowing from the Central Bank equal to 195593933000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Balance_Sheet.Bor_CB = 195593933000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have non-operating revenue exceeding 26000000.0 and a decrease in operating receivables greater than -434400000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Non_Op_Rev > 26000000.0 AND Cash_Flow_Statement.Oper_Receivables_Decrease > -434400000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of stocks whose cash received from absorbing investments is not equal to 25642143174.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Absorb_Investment != 25642143174"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have taxes and surcharges equal to 534000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Tax_n_Surs = 534000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the loan issuance with the highest number of records?",
    "query": "SELECT Balance_Sheet.Loans_Adv FROM Balance_Sheet GROUP BY Balance_Sheet.Loans_Adv ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average cash paid for assets, the minimum exchange gains, and the minimum net cash flow generated from investment activities for all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Cash_Pay_Assets) , MIN (Income_Statement.Exch_Gain_Inc), MIN (Cash_Flow_Statement.Net_CF_Inv) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock codes appear more than once in our data?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the handling fees and commission expenses for each record where non-operating expenses are not defined.",
    "query": "SELECT Income_Statement.Fee_Com_Exp FROM Income_Statement WHERE Income_Statement.Non_Op_Exp IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes of all records where the net cash flow generated from financing activities is not equal to 36768000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Fin != 36768000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have fixed asset scrap loss greater than 41751881951 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fixed_Asset_Scrap_Loss > 41751881951 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all information about records with negative basic earnings per share.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Basic_EPS < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the smallest opening balance of cash equivalents for each net cash flow generated from investment activities.",
    "query": "SELECT MIN (Cash_Flow_Statement.Cash_Eq_Begin_Period) , Cash_Flow_Statement.Net_CF_Inv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Inv"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records for each company name have income tax expenses exceeding 2952000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Income_Tax_Exp > 2952000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the values of investment real estate in the records table.",
    "query": "SELECT Balance_Sheet.Inv_Real_Estate FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the stock codes of the top three securities with the highest values of total owner's equity attributable to the parent company.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Own_Eq_Attr_Parent DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the number of records and the name of stocks for each stock that has financial expenses greater than 48104685802.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Fin_Expenses > 48104685802 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the average value of minority interest and loss for each total comprehensive income value.",
    "query": "SELECT avg(Income_Statement.Minor_Int_Inc_Loss) , Income_Statement.Tot_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Tot_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each record, display the average and maximum closing balance of cash equivalents.",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_Eq_End_Period), max(Cash_Flow_Statement.Cash_Eq_End_Period) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the stock name of China Merchants Bank or operating revenue equal to 47642000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Income_Statement.Oper_Rev = 47642000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock name of Huaxia Bank or other business income of 1283000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Income_Statement.Oth_Biz_Inc = 1283000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the highest and lowest investment income values from all records.",
    "query": "SELECT MAX (Cash_Flow_Statement.Investment_Income) , MIN (Cash_Flow_Statement.Investment_Income) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of other cash payments related to investment activities that appears most frequently?",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Inv_Other FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Inv_Other ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have appeared less than 9 times in the records?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) < 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average value of asset impairment provision for each value of cash received from other investment activities.",
    "query": "SELECT avg(Cash_Flow_Statement.Asset_Impairment_Dec) , Cash_Flow_Statement.Recv_Other_Invest FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Recv_Other_Invest"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the comprehensive income attributable to shareholders of the parent company and other cash received related to operating activities for records where the comprehensive income attributable to shareholders of the parent company is above 25343000000.0.",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc , Cash_Flow_Statement.Cash_Oth_Oper_Activities FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc > 25343000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which Cash_Begin_Period value appears exactly 8 times?",
    "query": "SELECT Cash_Flow_Statement.Cash_Begin_Period FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Begin_Period HAVING COUNT (*) = 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the fair value change loss values and their corresponding record counts.",
    "query": "SELECT Cash_Flow_Statement.Fair_Value_Change_Loss , COUNT(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fair_Value_Change_Loss"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash received for interest, handling fees, and commissions of records that have more than 2 occurrences of the same value.",
    "query": "SELECT Cash_Flow_Statement.Cash_Int_Commission_Collected FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Int_Commission_Collected HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of all stocks that have other business costs not equal to 857000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Costs != 857000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the investment income from associates and joint ventures values that appeared more than once?",
    "query": "SELECT Income_Statement.Inv_Inc_Assoc_JV FROM Income_Statement GROUP BY Income_Statement.Inv_Inc_Assoc_JV HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the highest and lowest opening balances of cash equivalents in our records?",
    "query": "SELECT MAX (Cash_Flow_Statement.Initial_Cash_Equiv) , MIN (Cash_Flow_Statement.Initial_Cash_Equiv) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of all stocks that have fee and commission income less than or equal to 13441000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Inc <= 13441000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has exactly 6 records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) = 6"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the total comprehensive income and the sum of basic earnings per share for each record.",
    "query": "SELECT Income_Statement.Tot_Compre_Inc , SUM (Income_Statement.Basic_EPS) FROM Income_Statement GROUP BY Income_Statement.Tot_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have fair value change income greater than 4319000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.FV_Change_Inc > 4319000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the non-operating expenses and their total cash paid for interest, handling fees, and commissions from the records.",
    "query": "SELECT Income_Statement.Non_Op_Exp , SUM (Cash_Flow_Statement.Cash_Pay_Int_Fees_Com) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Non_Op_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the operating revenue and the total cash paid for other operating activities for each record.",
    "query": "SELECT Income_Statement.Oper_Rev , SUM (Cash_Flow_Statement.Cash_Pay_Op_Other) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Oper_Rev"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to stock 600000.SH or have net income from handling fees and commissions equal to 13962000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Income_Statement.Fee_Com_Net_Inc = 13962000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Huaxia Bank or have business and management fees equal to 24257000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Income_Statement.Gen_n_Admin_Exps = 24257000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the least frequent stock name in our records, sorted by their frequency in ascending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities have more than one record in the database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the available-for-sale financial assets value from the record with the least frequency of available-for-sale financial assets?",
    "query": "SELECT Balance_Sheet.Avail_Sale_FAs FROM Balance_Sheet GROUP BY Balance_Sheet.Avail_Sale_FAs ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has investment cash outflows not equal to 1006156903000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inv_CF_Out_Sub != 1006156903000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top five most frequent values of loss on scrapping of fixed assets?",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Scrap_Loss FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fixed_Asset_Scrap_Loss ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the stock code with the least number of records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values of asset impairment provision do we have in our records?",
    "query": "SELECT count(DISTINCT Cash_Flow_Statement.Asset_Impairment_Dec) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me with the securities code and deposit absorption in descending order of interest payable?",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Acc_Deposits FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Int_Pay DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me interest expenses that appeared at least four times in records where net increase in deposits with central bank and interbank funds is greater than 16781108734.0.",
    "query": "SELECT Income_Statement.Int_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CenBank_Interbank_Net_Inc > 16781108734.0 GROUP BY Income_Statement.Int_Exp HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the number of records and the stock names for each company that has operating expenses exceeding 16372581000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Exp > 16372581000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the five non-current asset disposal losses with the highest frequency of occurrence?",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets FROM Income_Statement GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the long-term amortization values of records, sorted in descending order by debt converted to capital.",
    "query": "SELECT Cash_Flow_Statement.Longterm_Amortization FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Debt_Converted_Capital DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock code, the number of unique lending funds, and the total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Balance_Sheet.Lending_Funds) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the count and stock code of records that have borrowing funds from other financial institutions above 106646000000.0, grouped by stock code.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Bor_Funds_Oth_FIs > 106646000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest net profit in our records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Net_Profit DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the non-operating revenue of records with net increase in customer deposits and interbank deposits between 185841000000.0 and 97042000000.0.",
    "query": "SELECT Income_Statement.Non_Op_Rev FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits BETWEEN 185841000000.0 AND 97042000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top two companies with the highest general risk preparation.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Gen_Risk_Res DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an investment income of either 50032000000.0 or 35407000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Investment_Income = 50032000000.0 OR Cash_Flow_Statement.Investment_Income = 35407000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code and amortization of intangible assets for each record.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Intangible_Asset_Amortization FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list me the names of stocks whose financial expenses in cash flow statement is not equal to 34653674596.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Fin_Expenses != 34653674596"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each securities code, how many records do we have? Show me the securities code and the corresponding count.",
    "query": "SELECT Basic_Info.Stk_Code , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks that have a decrease in deferred income tax assets less than or equal to 15479731760.0, and sort them in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.DIT_Asset_Reduction <= 15479731760.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of minority interest for records whose sum of operating revenue exceeds 10?",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss FROM Income_Statement GROUP BY Income_Statement.Minor_Int_Inc_Loss HAVING sum(Income_Statement.Oper_Rev) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600919.SH or an increase in deferred income tax liabilities of 45648588559?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Cash_Flow_Statement.DIT_Liability_Increase = 45648588559"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the employee compensation payable values that appear in 13 or more records.",
    "query": "SELECT Balance_Sheet.Emp_Comp_PAY FROM Balance_Sheet GROUP BY Balance_Sheet.Emp_Comp_PAY HAVING COUNT (*) >= 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many records have each value of other cash payments related to investment activities, and sort the result in ascending order.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Inv_Other , COUNT (*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Inv_Other ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me how many records, along with their respective company names, have cash paid for the purchase and construction of fixed assets, intangible assets, and other long-term assets greater than 4674000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Assets > 4674000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have interest income more than 75794000000.0 and business and management fees greater than 24257000000.0?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Int_Inc > 75794000000.0 AND Income_Statement.Gen_n_Admin_Exps > 24257000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of stocks with operating profit less than or equal to 24791000000.0, sorted in descending order of stock names?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Profit <= 24791000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top two securities with the highest operating profit.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Oper_Profit DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average opening balance of cash equivalents, the minimum cash paid to employees, and the minimum fee and commission income across all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Cash_Eq_Begin_Period) , MIN (Cash_Flow_Statement.Cash_Pay_Emp), MIN (Income_Statement.Fee_Com_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, give me the code itself, the number of fixed asset depreciation decrease values, and the total number of records associated with that stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have other comprehensive income greater than 1039000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Compre_Inc > 1039000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or their net cash received from disposal of fixed assets, intangible assets, and other long-term assets is exactly 65373000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Cash_Flow_Statement.Cash_Disposal_Assets = 65373000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock codes of the top three records with the highest non-operating revenue.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Non_Op_Rev DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of the two securities with the highest value of deferred tax assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Def_IT_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of records whose cash paid for interest, handling fees, and commissions is not equal to 26806028000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Int_Fees_Com != 26806028000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the names of stocks that appear less than 4 times in our data.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) < 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the names of the top two stocks in terms of cash paid for the purchase and construction of fixed assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which net income from handling fees and commissions values appear in at least 5 records?",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Net_Inc HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities with the highest total owner's equity attributable to the parent company?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Own_Eq_Attr_Parent DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have net increase in customer deposits and interbank deposits greater than 289359000000.0 and loss on disposal of fixed assets, intangible assets, and other long-term assets higher than -6000000.0?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits > 289359000000.0 AND Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec > -6000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks, where taxes and surcharges value is not 401653000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tax_n_Surs != 401653000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the net cash flow generated from investment activities values that appeared more than once?",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Inv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Inv HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either the name of China Merchants Bank or the value of cash received from investment equal to 842680000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Cash_Flow_Statement.Recv_Investment = 842680000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the comprehensive income attributable to minority shareholders that has at least five records.",
    "query": "SELECT Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Minor_Int_Shareholders_Compre_Inc HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records for each stock have debt converted to capital greater than 7541736353?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Debt_Converted_Capital > 7541736353 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the assets impairment loss values, sorted in descending order of handling fees and commission expenses.",
    "query": "SELECT Income_Statement.Assets_Imp_Loss FROM Income_Statement ORDER BY Income_Statement.Fee_Com_Exp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock codes of the top three records with the highest loss on disposal of fixed assets, intangible assets, and other long-term assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average value of deposits from interbank and other financial institutions in our records?",
    "query": "SELECT MAX (Balance_Sheet.IB_Dep_Oth_FIs) , MIN (Balance_Sheet.IB_Dep_Oth_FIs), AVG (Balance_Sheet.IB_Dep_Oth_FIs) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the total comprehensive income attributable to minority shareholders for each record where income tax expenses are not recorded.",
    "query": "SELECT Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Income_Statement WHERE Income_Statement.Income_Tax_Exp IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the security names for the records with investment income less than or equal to 49199000000.0, ordered in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Investment_Income <= 49199000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to 600015.SH or have a net increase in customer loans and advances of 326411000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Cash_Flow_Statement.Cust_Loans_Net_Inc = 326411000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the unique values of loss on disposal of non-current assets in our data?",
    "query": "SELECT distinct(Income_Statement.Loss_Disposal_Nonc_Assets) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for Huaxia Bank or the cash outflow from financing activities is equal to 63877000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Cash_Flow_Statement.Fin_CF_Out_Sub = 63877000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list out all the stock codes that have a total profit value different from 26567000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Profit != 26567000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Mingsheng Bank or have a value of 22649346156 in fixed assets acquired through financing lease?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets = 22649346156"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest assets impairment loss?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Assets_Imp_Loss DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the income tax expenses that occur more than twice.",
    "query": "SELECT Income_Statement.Income_Tax_Exp FROM Income_Statement GROUP BY Income_Statement.Income_Tax_Exp HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have total profit greater than 22433659000.0 for each stock code?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Profit > 22433659000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the other assets and purchase of resale financial assets where long term equity investment is either more than 2795000000.0 or less than 26296000000.0.",
    "query": "SELECT Balance_Sheet.Oth_Assets , Balance_Sheet.Buyback_FAs FROM Balance_Sheet WHERE Balance_Sheet.LT_Eq_Invest > 2795000000.0 OR Balance_Sheet.LT_Eq_Invest < 26296000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest values of other cash received related to operating activities?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Oth_Oper_Activities DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the highest and lowest exchange gains across all records.",
    "query": "SELECT MAX (Income_Statement.Exch_Gain_Inc) , MIN (Income_Statement.Exch_Gain_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the smallest loans and advances value for each translation difference of foreign currency statements.",
    "query": "SELECT MIN (Balance_Sheet.Loans_Adv) , Balance_Sheet.Exch_Diff_Cash FROM Balance_Sheet GROUP BY Balance_Sheet.Exch_Diff_Cash"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of records with derivative financial assets less than or equal to 22675000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Deriv_Assets <= 22675000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "i want to know how many records and different company names do we have for each stock, along with the number of times they absorbed minority shareholder investments.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.Subsidiary_Absorb_Minority) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of stocks that appear more than twice in our data.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which value of total liabilities has the fewest number of records?",
    "query": "SELECT Balance_Sheet.Tot_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code and the expenses at handling fees and commission for each record.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Fee_Com_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have net interest income before 1980?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Net_Int_Inc < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have 'Bank of Jiangsu' in their names?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%Bank of Jiangsu%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock code appears the most frequently in our data?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the most frequent net cash flow generated from investment activities value?",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Inv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Inv ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the cash and deposits with central bank value of the record that has the least number of corresponding records with the same value.",
    "query": "SELECT Balance_Sheet.Cash_CB FROM Balance_Sheet GROUP BY Balance_Sheet.Cash_CB ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the Stk_Code and Cust_Loans_Net_Inc of all records by the descending order of net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Cust_Loans_Net_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Net_Profit DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock name of China Merchants Bank or a convertible corporate bond maturing within one year value of 11824985585?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y = 11824985585"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the deposit absorption of records whose lending funds fall between 393759000000.0 and 49776000000.0.",
    "query": "SELECT Balance_Sheet.Acc_Deposits FROM Balance_Sheet WHERE Balance_Sheet.Lending_Funds BETWEEN 393759000000.0 AND 49776000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the number of records with cash equivalents closing balance higher than 48502997113.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Eq_End_Period > 48502997113.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide a list of different cash paid to and on behalf of employees and the number of records associated with each value.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Emp , COUNT(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Emp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, provide a list of records that have an increase in operating payables greater than 150890000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Oper_Payables_Increase > 150890000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have a securities name containing 'China Merchants Bank'?",
    "query": "SELECT DISTINCT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%China Merchants Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight least frequent income values from changes in fair value, sorted by their frequency in ascending order?",
    "query": "SELECT Income_Statement.FV_Change_Inc FROM Income_Statement GROUP BY Income_Statement.FV_Change_Inc ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the average cash received from absorbing investments for each value of intangible asset amortization.",
    "query": "SELECT avg(Cash_Flow_Statement.Absorb_Investment) , Cash_Flow_Statement.Intangible_Asset_Amortization FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Intangible_Asset_Amortization"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the investment losses and issued bonds in cases where the taxes and surcharges are either greater than 1051000000.0 or less than 401653000.0.",
    "query": "SELECT Cash_Flow_Statement.Investment_Loss , Cash_Flow_Statement.Issue_Bonds FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Tax_n_Surs > 1051000000.0 OR Income_Statement.Tax_n_Surs < 401653000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock name appeared the most frequently in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three securities with the highest values of capital converted from debt.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Debt_Converted_Capital DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum value of total owner's equity attributable to the parent company in our data.",
    "query": "SELECT avg(Balance_Sheet.Own_Eq_Attr_Parent), max(Balance_Sheet.Own_Eq_Attr_Parent) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have taxes and surcharges value greater than 1051000000.0 and investment losses value greater than -4367824000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Tax_n_Surs > 1051000000.0 AND Cash_Flow_Statement.Investment_Loss > -4367824000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average of comprehensive income attributable to minority shareholders, the minimum net increase in borrowing funds from other financial institutions, and the minimum exchange gains in our data.",
    "query": "SELECT AVG (Income_Statement.Minor_Int_Shareholders_Compre_Inc) , MIN (Cash_Flow_Statement.Net_Inc_IB_Borrowings), MIN (Income_Statement.Exch_Gain_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the three securities with the highest operating revenue.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Rev DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the sum of deposits from interbank and other financial institutions for each paid-in capital.",
    "query": "SELECT Balance_Sheet.Paid_Up_Cap , SUM (Balance_Sheet.IB_Dep_Oth_FIs) FROM Balance_Sheet GROUP BY Balance_Sheet.Paid_Up_Cap"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the details of the record with the highest interest receivable value.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Int_Receiv DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of all records that have interest receivable value different from 6079448104.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Int_Receiv != 6079448104"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different interest expenses values do we have in the income statement records?",
    "query": "SELECT count(DISTINCT Income_Statement.Int_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three securities with the highest interest receivable values.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Int_Receiv DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the minority shareholders' equity values, sorted by the deposit absorption in descending order.",
    "query": "SELECT Balance_Sheet.Minor_Int_Eq FROM Balance_Sheet ORDER BY Balance_Sheet.Acc_Deposits DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the interest income of records that do not have a value for handling fees and commission expenses?",
    "query": "SELECT Income_Statement.Int_Inc FROM Income_Statement WHERE Income_Statement.Fee_Com_Exp IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each borrowing funds value, give me the corresponding value of deposits from interbank and other financial institutions when it surpasses 1426046000000.0.",
    "query": "SELECT Balance_Sheet.IB_Dep_Oth_FIs , Balance_Sheet.Bor_Funds_Oth_FIs FROM Balance_Sheet WHERE Balance_Sheet.IB_Dep_Oth_FIs > 1426046000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two companies with the highest fixed assets?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Fix_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the minimum net increase in customer loans and advances for each opening balance of cash equivalents?",
    "query": "SELECT MIN (Cash_Flow_Statement.Cust_Loans_Net_Inc) , Cash_Flow_Statement.Initial_Cash_Equiv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Initial_Cash_Equiv"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest values of minority interest.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Minor_Int_Inc_Loss DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you give me the names of stocks and their \"other\" values, sorted by cash received from other cash related to operating activities in descending order?",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Other FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Oth_Oper_Activities DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock names for records with debt repayment less than or equal to 672761000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Repay_Debt <= 672761000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three stocks have the highest cash paid for investment?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Invest DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of top three securities with the highest loss from changes in fair value.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fair_Value_Change_Loss DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest subtotal of cash inflows from operating activities?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Op_CF_Sub DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which fixed asset scrapping losses and operating revenues are larger than 3601381831 in our records?",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Scrap_Loss , Income_Statement.Oper_Rev FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fixed_Asset_Scrap_Loss > 3601381831"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600015.SH or a derivative financial assets value of 22675000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Balance_Sheet.Deriv_Assets = 22675000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all other cash related to operating activities and minority interest values for the records whose other cash related to operating activities is less than 8333000000.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_Oth_Oper_Activities , Income_Statement.Minor_Int_Inc_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Oth_Oper_Activities < 8333000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the smallest loss from minority interest for each net profit attributable to the owner of the parent company?",
    "query": "SELECT MIN (Income_Statement.Minor_Int_Inc_Loss) , Income_Statement.Attr_Parent_Net_Profit FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Net_Profit"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the hold-to-maturity investment value that appears the most number of times in our records?",
    "query": "SELECT Balance_Sheet.Held_Mat_Invest FROM Balance_Sheet GROUP BY Balance_Sheet.Held_Mat_Invest ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600015.SH or a subtotal of cash inflows from financing activities equal to 70000000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Cash_Flow_Statement.Fin_CF_In_Sub = 70000000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the highest and lowest values of deposits from interbank and other financial institutions across all records?",
    "query": "SELECT MAX (Balance_Sheet.IB_Dep_Oth_FIs) , MIN (Balance_Sheet.IB_Dep_Oth_FIs) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of the stocks that have at least 5 records in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which value of total comprehensive income attributable to shareholders of the parent company appeared most frequently?",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the smallest income tax expenses for each business and management fees.",
    "query": "SELECT MIN (Income_Statement.Income_Tax_Exp) , Income_Statement.Gen_n_Admin_Exps FROM Income_Statement GROUP BY Income_Statement.Gen_n_Admin_Exps"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest decrease in deferred income tax assets?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.DIT_Asset_Reduction DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the other business income and closing balance of cash equivalents for records whose other business income is less than 5676000000.0.",
    "query": "SELECT Income_Statement.Oth_Biz_Inc , Cash_Flow_Statement.Cash_Eq_End_Period FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Inc < 5676000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have net increase in borrowing funds from other financial institutions less than or equal to 39176273386, in descending order of their stock codes?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_IB_Borrowings <= 39176273386 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all values of cash received from absorbing investments and the number of records associated with each value, sorted by the number of records in ascending order.",
    "query": "SELECT Cash_Flow_Statement.Absorb_Investment , COUNT (*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Absorb_Investment ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the interest, handling fees, and commissions paid in cash and the issuance of bonds for records that have net cash received from disposal of fixed assets, intangible assets, and other long-term assets greater than or less than 920000000.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Int_Fees_Com , Cash_Flow_Statement.Issue_Bonds FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Disposal_Assets > 920000000.0 OR Cash_Flow_Statement.Cash_Disposal_Assets < 920000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of handling fees and commission expenses that only appears once?",
    "query": "SELECT Income_Statement.Fee_Com_Exp FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Exp HAVING COUNT (*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or a subtotal of cash inflows from operating activities equal to 528276000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Cash_Flow_Statement.Op_CF_Sub = 528276000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records from each stock have total owner's equity exceeding 307617000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Own_Eq > 307617000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there for the company \"Huaxia Bank\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"Huaxia Bank\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum value of total owner's equity attributable to the parent company for each record.",
    "query": "SELECT avg(Balance_Sheet.Own_Eq_Attr_Parent), max(Balance_Sheet.Own_Eq_Attr_Parent) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock names and the net increase in customer deposits and interbank deposits for each record.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the cash equivalents closing balance values that appear less than 4 times in the records?",
    "query": "SELECT Cash_Flow_Statement.Cash_End_Period FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_End_Period HAVING COUNT (*) < 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock codes and the cash outflows from financing activities of each record.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Fin_CF_Out_Sub FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the bonds payable of records where noble metal is not recorded.",
    "query": "SELECT Balance_Sheet.Bonds_PAY FROM Balance_Sheet WHERE Balance_Sheet.Prec_Metals IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the cash equivalents closing balance that appears in more than 9 records.",
    "query": "SELECT Cash_Flow_Statement.Cash_Eq_End_Period FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Eq_End_Period HAVING COUNT (*) > 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the minimum other comprehensive income for each loss on disposal of non-current assets?",
    "query": "SELECT MIN (Income_Statement.Oth_Compre_Inc) , Income_Statement.Loss_Disposal_Nonc_Assets FROM Income_Statement GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the accounts receivable investment and other liabilities for records where the accounts receivable investment is greater than 33736231906.",
    "query": "SELECT Balance_Sheet.Recv_Invest , Balance_Sheet.Oth_Liab FROM Balance_Sheet WHERE Balance_Sheet.Recv_Invest > 33736231906"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the non-operating revenue and the count of distinct net interest income for each non-operating revenue value.",
    "query": "SELECT Income_Statement.Non_Op_Rev , COUNT (DISTINCT Income_Statement.Net_Int_Inc) FROM Income_Statement GROUP BY Income_Statement.Non_Op_Rev"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of the top two records with the highest cash and deposits with central bank.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Cash_CB DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average treasury stock for each other liability value.",
    "query": "SELECT avg(Balance_Sheet.Treas_Stock) , Balance_Sheet.Oth_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Oth_Liab"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock names and the count of their appearances in the database.",
    "query": "SELECT Basic_Info.Stk_Name , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock names and income from changes in fair value for records that have 5 or more instances of fee and commission income.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.FV_Change_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Income_Statement.Fee_Com_Inc HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash received from disposal of fixed assets, intangible assets, and other long-term assets that appeared more than twice.",
    "query": "SELECT Cash_Flow_Statement.Cash_Disposal_Assets FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Disposal_Assets HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the securities code of top three records with the highest fixed assets acquired through financing lease.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for China Merchants Bank or have total comprehensive income attributable to shareholders of the parent company equal to 13153000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Income_Statement.Attr_Parent_Shareholders_Compre_Inc = 13153000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of the stocks that have a different value for cash received from other financing activities compared to 31119913670.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Recv_Other_Fin != 31119913670.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks whose asset impairment loss is not equal to 49000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Assets_Imp_Loss != 49000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest financial assets sold for repurchase?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Sell_Rep_FAs DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all exchange gains with a total operating expenses greater than 10.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc FROM Income_Statement GROUP BY Income_Statement.Exch_Gain_Inc HAVING sum(Income_Statement.Oper_Exp) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code and the count of unique cash received for interest, handling fees, and commissions for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Cash_Flow_Statement.Cash_Int_Commission_Collected) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock names for all records where income tax expenses are not equal to 2952000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Income_Tax_Exp != 2952000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the total assets value that appears most frequently.",
    "query": "SELECT Balance_Sheet.Tot_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Assets ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock codes along with the number of unique investment income values for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Inv_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of securities codes and non-operating revenue in descending order of net income from handling fees and commissions.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Non_Op_Rev FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Net_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the net cash received from disposal of fixed assets, intangible assets, and other long-term assets, along with the closing balance of cash equivalents, for records where the net cash received from disposal of assets is higher than 65373000.0.",
    "query": "SELECT Cash_Flow_Statement.Cash_Disposal_Assets , Cash_Flow_Statement.Final_Cash_Equiv FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Disposal_Assets > 65373000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three stocks, in terms of cash received from absorbing investments.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Absorb_Investment DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have total profit exceeding 16410000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Profit > 16410000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the fee and commission income and other cash received from financing activities for the top 5 records with the highest fee and commission income.",
    "query": "SELECT Income_Statement.Fee_Com_Inc , Cash_Flow_Statement.Recv_Other_Fin FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Inc DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest total liabilities and owner's equity?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tot_Liab_Own_Eq DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the business and management fees values that have at least four records with opening balance of cash equivalents above 372304000000.0.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Initial_Cash_Equiv > 372304000000.0 GROUP BY Income_Statement.Gen_n_Admin_Exps HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the trading financial assets that appear in 5 or more records?",
    "query": "SELECT Balance_Sheet.Trad_FAs FROM Balance_Sheet GROUP BY Balance_Sheet.Trad_FAs HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each interest payable value, what are the interest payable values in records whose sum of deposit absorption is over 10?",
    "query": "SELECT Balance_Sheet.Int_Pay FROM Balance_Sheet GROUP BY Balance_Sheet.Int_Pay HAVING sum(Balance_Sheet.Acc_Deposits) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a net cash flow generated from operating activities greater than 94352000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Op > 94352000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities codes of records with net increase in cash and cash equivalents less than or equal to 17849000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.IM_NCF_Cash_Eq <= 17849000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the exchange gains and diluted earnings per share for records with exchange gains above 2480000000.0.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc , Income_Statement.Diluted_EPS FROM Income_Statement WHERE Income_Statement.Exch_Gain_Inc > 2480000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of three companies with the highest estimated liabilities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Est_Liab DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and the non-operating expenses of each record.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Non_Op_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of stocks and their total owner's equity, sorted by the amount of bonds payable in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Tot_Own_Eq FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Bonds_PAY DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of records whose net profit attributable to the owner of the parent company is not equal to 23777000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Net_Profit != 23777000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the fixed assets acquired through financing lease that have at least 8 occurrences.",
    "query": "SELECT Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets HAVING COUNT (*) >= 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all the information available in the income statement records.",
    "query": "SELECT * FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest investment income?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Investment_Income DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, show me the count of net cash flow generated from financing activities and the total count of records associated with that stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Cash_Flow_Statement.Net_CF_Fin) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the borrowing funds value for every record that has a total liabilities and owner's equity sum greater than 10.",
    "query": "SELECT Balance_Sheet.Bor_Funds_Oth_FIs FROM Balance_Sheet GROUP BY Balance_Sheet.Bor_Funds_Oth_FIs HAVING sum(Balance_Sheet.Tot_Liab_Own_Eq) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest values of minority interest?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Minor_Int_Inc_Loss DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the information available in the balance sheet for each record.",
    "query": "SELECT * FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock names of records with net profit less than or equal to 76437000000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Net_Profit <= 76437000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the name of stock and income from changes in fair value, sorted by net profit attributable to the owner of the parent company in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.FV_Change_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Net_Profit DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all the information available in balance sheet records.",
    "query": "SELECT * FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net increase in cash and cash equivalents for the records that have at least 10 occurrences.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Cash_Equiv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Cash_Equiv HAVING COUNT (*) >= 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the investment cash inflow subtotal and loss on disposal of non current assets for records where the loss on disposal of non current assets is greater than 14489125932.",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets , Cash_Flow_Statement.Inv_CF_In_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Loss_Disposal_Nonc_Assets > 14489125932"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the securities code of the top three records with the highest total liabilities and owner's equity.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tot_Liab_Own_Eq DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three companies with the highest business and management fees.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Gen_n_Admin_Exps DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of records for each stock code that has other cash received related to operating activities more than 1414041000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Oth_Oper_Activities > 1414041000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the minimum value of minority interest for each debt converted to capital value.",
    "query": "SELECT MIN (Income_Statement.Minor_Int_Inc_Loss) , Cash_Flow_Statement.Debt_Converted_Capital FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Debt_Converted_Capital"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the maximum, minimum and average value of derivative financial liabilities in our data.",
    "query": "SELECT MAX (Balance_Sheet.Deriv_Liab) , MIN (Balance_Sheet.Deriv_Liab), AVG (Balance_Sheet.Deriv_Liab) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records in each stock have other assets more than 12296993000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Oth_Assets > 12296993000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of stocks that have different values of derivative financial liabilities from 2449116000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Deriv_Liab != 2449116000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code of all records whose subtotal of cash inflows from operating activities is less than or equal to 757012000000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Op_CF_Sub <= 757012000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the investment income values that appear more than once.",
    "query": "SELECT Income_Statement.Inv_Inc FROM Income_Statement GROUP BY Income_Statement.Inv_Inc HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top two securities based on their other comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oth_Compre_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the top five most frequent investment real estate values.",
    "query": "SELECT Balance_Sheet.Inv_Real_Estate FROM Balance_Sheet GROUP BY Balance_Sheet.Inv_Real_Estate ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of two stocks that have the highest income tax expenses.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Income_Tax_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has different net cash flow generated from operating activities from 48486000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Op != 48486000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of net increase in cash and cash equivalents for the record with the least frequency?",
    "query": "SELECT Cash_Flow_Statement.IM_NCF_Cash_Eq FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.IM_NCF_Cash_Eq ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of all records where fee and commission income is 3157221000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Inc <= 3157221000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an intangible asset amortization value less than 1980?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Intangible_Asset_Amortization < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the stock codes of records where the impact of exchange rate changes on cash and cash equivalents is not 3636000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.FX_Rate_Change_Cash != 3636000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the loss on disposal of non current assets for each record whose subtotal of cash inflows from operating activities is greater than 10.",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets HAVING sum(Cash_Flow_Statement.Op_CF_Sub) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the investment income from associates and joint ventures, along with the number of distinct interest expenses and the total count of records for each group.",
    "query": "SELECT Income_Statement.Inv_Inc_Assoc_JV , count(DISTINCT Income_Statement.Int_Exp) , count(*) FROM Income_Statement GROUP BY Income_Statement.Inv_Inc_Assoc_JV"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks where the minority interest is 685000000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Inc_Loss <= 685000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the interest income and fixed assets acquired through financing lease for the top 5 records with the highest interest income.",
    "query": "SELECT Income_Statement.Int_Inc , Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Int_Inc DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the information stored in the database.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the securities codes that have at least 5 records in the database.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the maximum, minimum and average values of interest income for all records?",
    "query": "SELECT MAX (Income_Statement.Int_Inc) , MIN (Income_Statement.Int_Inc), AVG (Income_Statement.Int_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me the stock codes and net profits of records, sorted by the business and management fees in descending order?",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Gen_n_Admin_Exps DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of the top three records with the highest depreciation of fixed assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the name of securities that contain the phrase 'China Mingsheng Bank'.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%China Mingsheng Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock codes and financial expenses from cash flow statement for all records.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.CF_Stmt_Fin_Expenses FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code, the number of different trading financial liabilities, and the total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Balance_Sheet.Trad_Fin_Liab) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest noble metal value?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Prec_Metals DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of all records that have taxes and fees payable at most 8161000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tax_Pay <= 8161000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which derivative financial liability has the largest number of records?",
    "query": "SELECT Balance_Sheet.Deriv_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Deriv_Liab ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock names of records whose total profit is not equal to 22433659000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Profit != 22433659000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the smallest value of cash paid for debt repayment for each total comprehensive income value.",
    "query": "SELECT MIN (Cash_Flow_Statement.Repay_Debt) , Income_Statement.Tot_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Tot_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities with the highest operating revenue?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Rev DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of minor interest and general and administrative expenses for records with basic earnings per share greater than 1.09 or less than 1.09.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss , Income_Statement.Gen_n_Admin_Exps FROM Income_Statement WHERE Income_Statement.Basic_EPS > 1.09 OR Income_Statement.Basic_EPS < 1.09"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock codes and the number of records for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of the two companies with the highest handling fees and commission expenses.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the final balance of cash equivalents for each record, sorted by income tax expenses in descending order.",
    "query": "SELECT Cash_Flow_Statement.Final_Cash_Equiv FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Income_Tax_Exp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top three stocks with the highest capital reserves.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Cap_Reserves DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the count of records for each company name?",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the cash paid for investment and investment income of top 5 records with the highest cash paid for investment.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Invest , Income_Statement.Inv_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Invest DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the income from changes in fair value for each cash received from absorbing investments, where the income from changes in fair value is greater than -2413000000.0?",
    "query": "SELECT Income_Statement.FV_Change_Inc , Cash_Flow_Statement.Absorb_Investment FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.FV_Change_Inc > -2413000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of each stock and how many records we have for each of them.",
    "query": "SELECT Basic_Info.Stk_Name , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code and assets impairment loss of all records, sorted by net profit in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Assets_Imp_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Net_Profit DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest value of \"other\" in cash flow statement?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Other DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each company name where the operating expenses exceed 16372581000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Exp > 16372581000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fixed assets and total owner's equity attributable to the parent company for records where fixed assets exceed 6533257000.0.",
    "query": "SELECT Balance_Sheet.Fix_Assets , Balance_Sheet.Own_Eq_Attr_Parent FROM Balance_Sheet WHERE Balance_Sheet.Fix_Assets > 6533257000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities codes that appear more than twice in our records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the operating payables increase and cash received for interest, handling fees, and commissions for records that have at least 5 instances of debt converted to capital.",
    "query": "SELECT Cash_Flow_Statement.Oper_Payables_Increase , Cash_Flow_Statement.Cash_Int_Commission_Collected FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Debt_Converted_Capital HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes and the available-for-sale financial assets for all records.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Avail_Sale_FAs FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with all the details where the net cash flow generated from investment activities is negative.",
    "query": "SELECT * FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_CF_Inv < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock name and cash received from investment recovery, sorted by loss on scrapping of fixed assets in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Recv_Investment FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fixed_Asset_Scrap_Loss DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average operating revenue, minimum net cash received from disposal of fixed assets, intangible assets, and other long-term assets, and minimum net increase in cash and cash equivalents for all records.",
    "query": "SELECT AVG (Income_Statement.Oper_Rev) , MIN (Cash_Flow_Statement.Cash_Disposal_Assets), MIN (Cash_Flow_Statement.IM_NCF_Cash_Eq) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me a list of stock codes and the count of records for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities with the highest net profit in the cash flow statement?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.CF_Stmt_Net_Income DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the stock codes of the two records with the highest closing balance of cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Final_Cash_Equiv DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with the stock name \"China Mingsheng Bank\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"China Mingsheng Bank\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the closing balance of cash for records where there is no value for other cash payments related to operating activities.",
    "query": "SELECT Cash_Flow_Statement.Cash_End_Period FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Op_Other IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the securities codes of the top two stocks with the highest paid-in capital.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Paid_Up_Cap DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have exactly 4 records?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) = 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the foreign exchange rate change on cash that has the highest number of records?",
    "query": "SELECT Cash_Flow_Statement.FX_Rate_Change_Cash FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.FX_Rate_Change_Cash ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or have total assets equal to 4098550000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Balance_Sheet.Tot_Assets = 4098550000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the total number of records in the balance sheet table?",
    "query": "SELECT count(*) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the stock codes of the top three records with the highest non-operating expenses.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Non_Op_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the top three securities with the highest cash paid for interest, handling fees, and commissions.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Int_Fees_Com DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net interest income of records where there is no business and management fees.",
    "query": "SELECT Income_Statement.Net_Int_Inc FROM Income_Statement WHERE Income_Statement.Gen_n_Admin_Exps IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Bank of Jiangsu or have long-term amortization equal to 632000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Cash_Flow_Statement.Longterm_Amortization = 632000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the three stocks with the highest treasury stock value.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Treas_Stock DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock names and the cash outflows from investment activities for each record.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Inv_CF_Out_Sub FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net profit and total comprehensive income attributable to minority shareholders for records with net profit less than 76437000000.0.",
    "query": "SELECT Income_Statement.Net_Profit , Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Income_Statement WHERE Income_Statement.Net_Profit < 76437000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the value of loans and advances, along with the count of distinct deferred tax liabilities and the total count of records for each value.",
    "query": "SELECT Balance_Sheet.Loans_Adv , count(DISTINCT Balance_Sheet.Def_IT_Liab) , count(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Loans_Adv"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have other business costs equal to 539000000.0 or 857000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Oth_Biz_Costs = 539000000.0 OR Income_Statement.Oth_Biz_Costs = 857000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the name of each stock, along with the number of distinct net cash flow generated from operating activities and the total number of records for that stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.IM_NCF_Oper_Activities) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "get me the handling fees and commission expenses for all records, and the total diluted earnings per share for each of them.",
    "query": "SELECT Income_Statement.Fee_Com_Exp , SUM (Income_Statement.Diluted_EPS) FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock codes have 5 or more records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have with distinct net interest income?",
    "query": "SELECT count(DISTINCT Income_Statement.Net_Int_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different net cash flow generated from operating activities do we have for each stock?",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Cash_Flow_Statement.Net_CF_Op) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top two securities with the highest net increase in cash and cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_CF_Cash_Equiv DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, provide the stock code itself, the count of different interest income values, and the total number of records for that stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Income_Statement.Int_Inc) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three stocks have the highest values of available-for-sale financial assets?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Avail_Sale_FAs DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks that appear more than once in our records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have debt repayment exceeding 2822000000.0 for each stock code?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Repay_Debt > 2822000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the cash paid for taxes and the total increase in deferred income tax liabilities for each record.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Taxes , SUM (Cash_Flow_Statement.DIT_Liability_Increase) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Taxes"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of stock names and net income from handling fees and commissions in descending order of total comprehensive income attributable to minority shareholders.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Fee_Com_Net_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Minor_Int_Shareholders_Compre_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the investment income from associates and joint ventures for records whose net increase in deposits with central bank and interbank funds is between 49220712331.0 and 16781108734.0.",
    "query": "SELECT Income_Statement.Inv_Inc_Assoc_JV FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CenBank_Interbank_Net_Inc BETWEEN 49220712331.0 AND 16781108734.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the smallest reduction in operating receivables for each net increase in deposits with central bank and interbank funds?",
    "query": "SELECT MIN (Cash_Flow_Statement.Oper_Receivables_Decrease) , Cash_Flow_Statement.CenBank_Interbank_Net_Inc FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.CenBank_Interbank_Net_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the value of subsidiary payments to minority shareholders that appeared exactly 4 times.",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Pay_Minority FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Subsidiary_Pay_Minority HAVING COUNT (*) = 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have a securities code containing '600016.SH'?",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600016.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me all the total profits where we have at least 4 records with net increase in customer deposits and interbank deposits greater than 97042000000.0.",
    "query": "SELECT Income_Statement.Tot_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits > 97042000000.0 GROUP BY Income_Statement.Tot_Profit HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the values of handling fees and commission expenses and the increase in deferred income tax liabilities for records where handling fees and commission expenses are less than 3558000000.0.",
    "query": "SELECT Income_Statement.Fee_Com_Exp , Cash_Flow_Statement.DIT_Liability_Increase FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Exp < 3558000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of records where the loss on disposal of non current assets is 22986325737 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Loss_Disposal_Nonc_Assets <= 22986325737 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600015.SH or an investment income of 3656000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Income_Statement.Inv_Inc = 3656000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the securities codes for all the records whose income from changes in fair value is less than or equal to -2413000000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.FV_Change_Inc <= -2413000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of stocks that have net profit values different from 12365000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Net_Profit != 12365000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of top three securities with the highest investment income from associates and joint ventures.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Inv_Inc_Assoc_JV DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each record without other business costs, give me the value of loss on scrapping of fixed assets.",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Scrap_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Costs IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of records where loss on disposal of fixed assets, intangible assets, and other long-term assets is -83000000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec <= -83000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the exchange gains value that appears the least number of times?",
    "query": "SELECT Income_Statement.Exch_Gain_Inc FROM Income_Statement GROUP BY Income_Statement.Exch_Gain_Inc ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net profit values that have at least 4 records with the amount of money received from other financing activities exceeding 45550964132.0.",
    "query": "SELECT Income_Statement.Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Recv_Other_Fin > 45550964132.0 GROUP BY Income_Statement.Net_Profit HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks that have 5 or more records in the database.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock names that appear in more than 11 records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) > 11"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the average and maximum subtotal of cash inflows from operating activities in all records.",
    "query": "SELECT avg(Cash_Flow_Statement.Op_CF_Sub), max(Cash_Flow_Statement.Op_CF_Sub) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the five cash payments related to investment activities with the highest frequency of occurrence?",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Inv_Other FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Inv_Other ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest cash received from other financing activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Recv_Other_Fin DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities with the highest net increase in cash and cash equivalents?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_CF_Cash_Equiv DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the stock codes of records where the cash paid for taxes is less than or equal to 30823000000.0, sorted in descending order?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Taxes <= 30823000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a total liabilities and owner's equity value greater than 4098550000000.0 for each company name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab_Own_Eq > 4098550000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the other business income and total profit for records with other business income less than 5676000000.0.",
    "query": "SELECT Income_Statement.Oth_Biz_Inc , Income_Statement.Tot_Profit FROM Income_Statement WHERE Income_Statement.Oth_Biz_Inc < 5676000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of records with cash payments related to operating activities more than 95779000000.0 for each company.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Op_Other > 95779000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the loss on disposal of non current assets value that has the most occurrences?",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets FROM Income_Statement GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average net profit attributable to the owner of the parent company for each basic earnings per share value.",
    "query": "SELECT avg(Income_Statement.Attr_Parent_Net_Profit) , Income_Statement.Basic_EPS FROM Income_Statement GROUP BY Income_Statement.Basic_EPS"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock codes for all records where the tax payment is less than or equal to 8161000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tax_Pay <= 8161000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of records that have a stock code of 600016.SH or a fixed asset depreciation of 4399000000.0.",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec = 4399000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest, and average net profit value across all records?",
    "query": "SELECT MAX (Income_Statement.Net_Profit) , MIN (Income_Statement.Net_Profit), AVG (Income_Statement.Net_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have business and management fees greater than 24257000000.0 and assets impairment loss greater than 49000000.0?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Gen_n_Admin_Exps > 24257000000.0 AND Income_Statement.Assets_Imp_Loss > 49000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different noble metals does each security code have?",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Balance_Sheet.Prec_Metals) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average net profit, the minimum net income from handling fees and commissions, and the minimum handling fees and commission expenses across all records.",
    "query": "SELECT AVG (Income_Statement.Net_Profit) , MIN (Income_Statement.Fee_Com_Net_Inc), MIN (Income_Statement.Fee_Com_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the highest derivative financial liabilities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Deriv_Liab DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the asset impairment provision values for those whose net increase in borrowing funds from other financial institutions is more than 10, grouped by asset impairment provision?",
    "query": "SELECT Cash_Flow_Statement.Asset_Impairment_Dec FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Asset_Impairment_Dec HAVING sum(Cash_Flow_Statement.Net_Inc_IB_Borrowings) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the value of issue bonds for each record whose sum of net profit attributable to the owner of the parent company is greater than 10.",
    "query": "SELECT Cash_Flow_Statement.Issue_Bonds FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Issue_Bonds HAVING sum(Income_Statement.Attr_Parent_Net_Profit) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different securities codes are there in our data?",
    "query": "SELECT count(DISTINCT Basic_Info.Stk_Code) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please show me the names of two companies with the highest cash paid for distributing dividends, profits, or paying interest.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Distribute_Dividends_Profits DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the details of the record with the highest fee and commission income.",
    "query": "SELECT * FROM Income_Statement ORDER BY Income_Statement.Fee_Com_Inc DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest long-term amortization values?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Longterm_Amortization DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have \"Shanghai Pudong Development Bank\" as their stock name?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"Shanghai Pudong Development Bank\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of records with net profit attributable to the owner of the parent company exceeding 17020129000.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Net_Profit > 17020129000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two companies with the highest subtotal of cash inflows from financing activities?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fin_CF_In_Sub DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock name and the count of unique other business income values for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Income_Statement.Oth_Biz_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fixed asset depreciation amortization values that appeared more than once.",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec HAVING COUNT (*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the total liabilities and paid-in capital of the top 5 records with the highest paid-in capital.",
    "query": "SELECT Balance_Sheet.Paid_Up_Cap , Balance_Sheet.Tot_Liab FROM Balance_Sheet ORDER BY Balance_Sheet.Paid_Up_Cap DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the number of records and different net increase in customer deposits and interbank deposits for each value of loss on disposal of non current assets, along with the value itself.",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets , count(DISTINCT Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the values of borrowing funds from other financial institutions that appear more than once.",
    "query": "SELECT Balance_Sheet.Bor_Funds_Oth_FIs FROM Balance_Sheet GROUP BY Balance_Sheet.Bor_Funds_Oth_FIs HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock whose comprehensive income attributable to minority shareholders is above 808000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc > 808000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of each stock, the number of distinct paid-in capital, as well as the total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Balance_Sheet.Paid_Up_Cap) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display any income tax expense value that appears exactly once.",
    "query": "SELECT Income_Statement.Income_Tax_Exp FROM Income_Statement GROUP BY Income_Statement.Income_Tax_Exp HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of cash received from other financing activities that appear in more than two records?",
    "query": "SELECT Cash_Flow_Statement.Recv_Other_Fin FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Recv_Other_Fin HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a stock code of 600919.SH or a trading financial liabilities of 51596000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Balance_Sheet.Trad_Fin_Liab = 51596000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the highest number of members in our database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have general and administrative expenses that are not equal to 21136000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Gen_n_Admin_Exps != 21136000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock name has only one record in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the interest expenses for those whose other comprehensive income exceeds 10, grouped by interest expenses.",
    "query": "SELECT Income_Statement.Int_Exp FROM Income_Statement GROUP BY Income_Statement.Int_Exp HAVING sum(Income_Statement.Oth_Compre_Inc) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the trading financial liabilities and taxes and fees payable values of the top 5 records with the highest taxes and fees payable?",
    "query": "SELECT Balance_Sheet.Tax_Pay , Balance_Sheet.Trad_Fin_Liab FROM Balance_Sheet ORDER BY Balance_Sheet.Tax_Pay DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please tell me the names of two stocks with the highest net increase in customer loans and advances.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cust_Loans_Net_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the different values of total owner's equity attributable to the parent company, along with the count of records for each value.",
    "query": "SELECT Balance_Sheet.Own_Eq_Attr_Parent , COUNT(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Own_Eq_Attr_Parent"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the non-operating revenue from income statement for records whose subtotal of cash inflows from operating activities is between 528276000000.0 and 528276000000.0.",
    "query": "SELECT Income_Statement.Non_Op_Rev FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Op_CF_Sub BETWEEN 528276000000.0 AND 528276000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me interest income and the subtotal of cash outflows from financing activities for records whose interest income is smaller than 187334000000.0.",
    "query": "SELECT Income_Statement.Int_Inc , Cash_Flow_Statement.Fin_CF_Out_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Int_Inc < 187334000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the fee and commission income and cash received from absorbing investments for the top five records with the highest fee and commission income.",
    "query": "SELECT Income_Statement.Fee_Com_Inc , Cash_Flow_Statement.Absorb_Investment FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Inc DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the two securities codes that have the highest borrowing funds from other financial institutions.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Bor_Funds_Oth_FIs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide a list of different values of loans and advances along with the number of records for each value.",
    "query": "SELECT Balance_Sheet.Loans_Adv , COUNT(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Loans_Adv"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three securities have the highest net increase in deposits with the central bank and interbank funds?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.CenBank_Interbank_Net_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average cash received from subsidiaries absorbing minority shareholder investments for each diluted earnings per share value.",
    "query": "SELECT avg(Cash_Flow_Statement.Subsidiary_Absorb_Minority) , Income_Statement.Diluted_EPS FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Diluted_EPS"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of comprehensive income attributable to minority shareholders that appears the most frequently?",
    "query": "SELECT Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Minor_Int_Shareholders_Compre_Inc ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the handling fees and commission expenses and investment income of the top five records with the highest handling fees and commission expenses.",
    "query": "SELECT Income_Statement.Fee_Com_Exp , Income_Statement.Inv_Inc FROM Income_Statement ORDER BY Income_Statement.Fee_Com_Exp DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the handling fees and commission expenses values that only appear once in our records?",
    "query": "SELECT Income_Statement.Fee_Com_Exp FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Exp HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has only one record in the database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the fair value change loss for each stock whose net profit is more than 10.",
    "query": "SELECT Cash_Flow_Statement.Fair_Value_Change_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Fair_Value_Change_Loss HAVING sum(Income_Statement.Net_Profit) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the top three stock codes with the highest net increase in cash and cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.IM_NCF_Cash_Eq DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the foreign exchange rate change on cash and cash equivalents along with the total interest income for each record.",
    "query": "SELECT Cash_Flow_Statement.FX_Rate_Change_Cash , SUM (Income_Statement.Int_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.FX_Rate_Change_Cash"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the total liabilities and fixed assets of records whose total liabilities is greater than 7014760000000.0.",
    "query": "SELECT Balance_Sheet.Tot_Liab , Balance_Sheet.Fix_Assets FROM Balance_Sheet WHERE Balance_Sheet.Tot_Liab > 7014760000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of different treasury stock values for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Balance_Sheet.Treas_Stock) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the maximum, minimum and average borrowing funds from other financial institutions value in our data.",
    "query": "SELECT MAX (Balance_Sheet.Bor_Funds_Oth_FIs) , MIN (Balance_Sheet.Bor_Funds_Oth_FIs), AVG (Balance_Sheet.Bor_Funds_Oth_FIs) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the information in the basic_info table.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock names and investment income from associates and joint ventures of all records.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Inv_Inc_Assoc_JV FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and the count of unique interest payable values for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Balance_Sheet.Int_Pay) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of stocks that have five or more records in the database.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of unique cash paid for investment values for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Cash_Flow_Statement.Cash_Pay_Invest) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the opening balance of cash equivalents, along with the count of how many times each value appears.",
    "query": "SELECT Cash_Flow_Statement.Cash_Eq_Begin_Period , count(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Eq_Begin_Period"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with a borrowing funds from other financial institutions greater than 183053000000.0 do we have for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Bor_Funds_Oth_FIs > 183053000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a net increase in deposits with central bank and interbank funds smaller than 1980?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.CenBank_Interbank_Net_Inc < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the name of the stock with the least frequency in the records, sorted by their frequency in ascending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of top three stocks with the highest basic earnings per share.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Basic_EPS DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two companies with the highest increase in deferred income tax liabilities?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.DIT_Liability_Increase DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a net cash flow generated from operating activities greater than 74145000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Op > 74145000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have other business costs that exceed 857000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Costs > 857000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average net increase in customer deposits and interbank deposits, the minimum cash payment for other operating activities, and the minimum net cash flow generated from financing activities across all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits) , MIN (Cash_Flow_Statement.Cash_Pay_Op_Other), MIN (Cash_Flow_Statement.Net_CF_Fin) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the details of the record with the highest trading financial liabilities.",
    "query": "SELECT * FROM Balance_Sheet ORDER BY Balance_Sheet.Trad_Fin_Liab DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the security codes whose interest expenses are less than or equal to 81746000000.0, sorted in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Int_Exp <= 81746000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the details in income statement where non operating expenses are negative.",
    "query": "SELECT * FROM Income_Statement WHERE Income_Statement.Non_Op_Exp < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have income from changes in fair value greater than 1814000000.0 and other business income greater than 2447000000.0?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.FV_Change_Inc > 1814000000.0 AND Income_Statement.Oth_Biz_Inc > 2447000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the business and management fees for each record that does not have a value for debt converted to capital.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Debt_Converted_Capital IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either the stock code 600000.SH or an income from changes in fair value of 4319000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Income_Statement.FV_Change_Inc = 4319000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you provide me the stock code and other business costs, sorted by total profit in descending order?",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Oth_Biz_Costs FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Tot_Profit DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of fixed asset scrap loss, received investment, and cash paid for investment for each record.",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Scrap_Loss , Cash_Flow_Statement.Recv_Investment , Cash_Flow_Statement.Cash_Pay_Invest FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the count of records and the corresponding stock names where the operating profit is greater than 24791000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Profit > 24791000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of three companies with the highest investment income from associates and joint ventures.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Inv_Inc_Assoc_JV DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the net increase in borrowing funds from other financial institutions and other business costs for records whose net increase in borrowing funds from other financial institutions is less than 3623846164.",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_IB_Borrowings , Income_Statement.Oth_Biz_Costs FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_IB_Borrowings < 3623846164"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have depreciation of fixed assets, depletion of oil and gas assets, and depreciation of productive biological assets equal to either 5030000000.0 or 1906000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec = 5030000000.0 OR Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec = 1906000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the average and maximum amount of cash paid for distributing dividends, profits, or paying interest in each record.",
    "query": "SELECT avg(Cash_Flow_Statement.Distribute_Dividends_Profits), max(Cash_Flow_Statement.Distribute_Dividends_Profits) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of stocks that appear more than twice.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks that appear in more than 13 records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) > 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of stocks whose exchange gains are less than or equal to -3155000000.0, in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Exch_Gain_Inc <= -3155000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records, grouped by company name, have an asset impairment loss greater than 49000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Assets_Imp_Loss > 49000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the information available in cash flow statement records.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all values of cash paid for debt repayment in the cash flow statement.",
    "query": "SELECT Cash_Flow_Statement.Repay_Debt FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the stock code of the company with the fewest number of records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the securities code that appears in more than 12 records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) > 12"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock codes of records where non operating expenses are less than or equal to 108000000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Non_Op_Exp <= 108000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of asset impairment provision, cash received from subsidiaries absorbing minority shareholder investments and other cash flow statement records.",
    "query": "SELECT Cash_Flow_Statement.Asset_Impairment_Dec , Cash_Flow_Statement.Subsidiary_Absorb_Minority , Cash_Flow_Statement.Other FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock code and depreciation of fixed assets, intangible assets, and other long-term assets for each record, sorted by net increase in deposits with central bank and interbank funds in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.CenBank_Interbank_Net_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the top five securities codes with the highest number of records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the other business income values in descending order of net profit.",
    "query": "SELECT Income_Statement.Oth_Biz_Inc FROM Income_Statement ORDER BY Income_Statement.Net_Profit DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the average and maximum total profit for each record.",
    "query": "SELECT avg(Income_Statement.Tot_Profit), max(Income_Statement.Tot_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose handling fees and commission expenses are less than or equal to 2605000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Exp <= 2605000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have total assets lower than 1980?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Tot_Assets < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me a list of stock codes where the other comprehensive income is less than or equal to 1375220000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Compre_Inc <= 1375220000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have assets impairment loss more than 13527799084.0 as well as decrease in deferred income tax assets greater than 15479731760.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Assets_Imp_Loss > 13527799084.0 AND Cash_Flow_Statement.DIT_Asset_Reduction > 15479731760.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all total liabilities that have more than 2 records.",
    "query": "SELECT Balance_Sheet.Tot_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of issue bonds and net cash flow from cash equivalents for records with subsidiary paying minority shareholders above 18253188566 or below 18253188566?",
    "query": "SELECT Cash_Flow_Statement.Issue_Bonds , Cash_Flow_Statement.Net_CF_Cash_Equiv FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Subsidiary_Pay_Minority > 18253188566 OR Cash_Flow_Statement.Subsidiary_Pay_Minority < 18253188566"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average cash inflows from financing activities for each asset impairment provision value.",
    "query": "SELECT avg(Cash_Flow_Statement.Fin_CF_In_Sub) , Cash_Flow_Statement.Asset_Impairment_Dec FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Asset_Impairment_Dec"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average value of loans and advances for each owner's equity attributable to the parent company.",
    "query": "SELECT avg(Balance_Sheet.Loans_Adv) , Balance_Sheet.Own_Eq_Attr_Parent FROM Balance_Sheet GROUP BY Balance_Sheet.Own_Eq_Attr_Parent"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash paid for the purchase and construction of fixed assets, intangible assets, and other long-term assets, sorted by net increase in customer loans and advances in descending order.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Assets FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cust_Loans_Net_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the reductions in operating receivables where the total interest income is greater than 10.",
    "query": "SELECT Cash_Flow_Statement.Oper_Receivables_Decrease FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Oper_Receivables_Decrease HAVING sum(Income_Statement.Int_Inc) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average interest receivable value in our data?",
    "query": "SELECT MAX (Balance_Sheet.Int_Receiv) , MIN (Balance_Sheet.Int_Receiv), AVG (Balance_Sheet.Int_Receiv) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the non-operating expenses and the total amount of cash received from absorbing investments for each record.",
    "query": "SELECT Income_Statement.Non_Op_Exp , SUM (Cash_Flow_Statement.Absorb_Investment) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Non_Op_Exp"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average subtotal of cash outflows from operating activities in our data?",
    "query": "SELECT MAX (Cash_Flow_Statement.Op_CF_Out_Sub) , MIN (Cash_Flow_Statement.Op_CF_Out_Sub), AVG (Cash_Flow_Statement.Op_CF_Out_Sub) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of stocks and their corresponding total owner's equity attributable to the parent company.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Own_Eq_Attr_Parent FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the subtotal of cash inflows from financing activities, where the total fee and commission income is greater than 10.",
    "query": "SELECT Cash_Flow_Statement.Fin_CF_In_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Fin_CF_In_Sub HAVING sum(Income_Statement.Fee_Com_Inc) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the highest exchange gains in their income statement.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Exch_Gain_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the top 5 fee and commission income values that appear most frequently in our records.",
    "query": "SELECT Income_Statement.Fee_Com_Inc FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Inc ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each company name, where the lending funds value exceeds 393759000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Lending_Funds > 393759000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of two stocks that have the highest loss on disposal of non-current assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Loss_Disposal_Nonc_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have with the stock code 600036.SH or intangible assets of 548886000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Balance_Sheet.Intang_Assets = 548886000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the information available in the cash flow statement for each record.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of top three companies with the highest cash paid for taxes.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Taxes DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the eight least frequent net income from handling fees and commissions values in our records.",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Net_Inc ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the least occurrence in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has a loss on disposal of non current assets value not equal to 22986325737?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Loss_Disposal_Nonc_Assets != 22986325737"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the total liabilities and owner's equity from records that occur more than three times.",
    "query": "SELECT Balance_Sheet.Tot_Liab_Own_Eq FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Liab_Own_Eq HAVING COUNT (*) > 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of the top three records with the highest closing balance of cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Eq_End_Period DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the investment income and net increase in borrowing funds from other financial institutions for the top 5 records with the highest investment income.",
    "query": "SELECT Income_Statement.Inv_Inc , Cash_Flow_Statement.Net_Inc_IB_Borrowings FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Inv_Inc DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a stock code of 600000.SH or a purchase of resale financial assets equal to 10025000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Balance_Sheet.Buyback_FAs = 10025000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities with the highest subtotal of cash inflows from operating activities?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Op_CF_Sub DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which Cash_Pay_Int_Fees_Com value appears only once in the records?",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Int_Fees_Com FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Int_Fees_Com HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all values of minority interest with more than 4 records having total comprehensive income greater than 26693000000.0.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss FROM Income_Statement WHERE Income_Statement.Tot_Compre_Inc > 26693000000.0 GROUP BY Income_Statement.Minor_Int_Inc_Loss HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two securities codes with the highest net profit attributable to the owner of the parent company.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Net_Profit DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose general risk preparation is less than or equal to 90673000000.0, in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Gen_Risk_Res <= 90673000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net profit attributable to the owner of the parent company and the total investment income from associates and joint ventures in each record.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit , SUM (Income_Statement.Inv_Inc_Assoc_JV) FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Net_Profit"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the securities codes of records where interest income is not equal to 75794000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Int_Inc != 75794000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have income tax expenses less than 1980?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Income_Tax_Exp < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records for each stock have other cash received related to investment activities greater than 503000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Recv_Other_Invest > 503000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with general and administrative expenses exceeding 13287000000.0 do we have for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Gen_n_Admin_Exps > 13287000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of records where the operating expenses are not equal to 31273000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Exp != 31273000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with investment absorption value larger than 22810940294 do we have for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Absorb_Investment > 22810940294 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all deferred tax assets values that occur less than 12 times in our records.",
    "query": "SELECT Balance_Sheet.Def_IT_Assets FROM Balance_Sheet GROUP BY Balance_Sheet.Def_IT_Assets HAVING COUNT (*) < 12"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the most frequent decrease in deferred income tax assets value in our records?",
    "query": "SELECT Cash_Flow_Statement.DIT_Asset_Reduction FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.DIT_Asset_Reduction ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the securities code and bonds payable of each record.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Bonds_PAY FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average of total comprehensive income attributable to minority shareholders for each operating profit value.",
    "query": "SELECT avg(Income_Statement.Minor_Int_Shareholders_Compre_Inc) , Income_Statement.Oper_Profit FROM Income_Statement GROUP BY Income_Statement.Oper_Profit"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all stock codes that have minority interest (income/loss) less than or equal to 477000000.0 in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Inc_Loss <= 477000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me all the Fee and commission income and loss on disposal of non current assets values that are bigger than 13441000000.0 in income statement.",
    "query": "SELECT Income_Statement.Fee_Com_Inc , Income_Statement.Loss_Disposal_Nonc_Assets FROM Income_Statement WHERE Income_Statement.Fee_Com_Inc > 13441000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two companies with the highest value of financial assets sold for repurchase?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Sell_Rep_FAs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many records have total assets greater than 7641451000000.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Assets > 7641451000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes and losses from changes in fair value in cash flow statement.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Fair_Value_Change_Loss FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with stock code 600015.SH or total assets equal to 4098550000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600015.SH' OR Balance_Sheet.Tot_Assets = 4098550000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock name that has total assets exceeding 8932519000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Assets > 8932519000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the securities names in descending order where the deposit absorption is no larger than 4300243000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Acc_Deposits <= 4300243000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the two securities with the highest income tax expenses.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Income_Tax_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have comprehensive income attributable to minority shareholders more than 251000000.0 and an increase in deferred income tax liabilities greater than 11864320664?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc > 251000000.0 AND Cash_Flow_Statement.DIT_Liability_Increase > 11864320664"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock names and closing balance of cash equivalents for all records.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Cash_Eq_End_Period FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which value of net income from handling fees and commissions has the highest frequency?",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Net_Inc ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the most common stock name in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have other business income exceeding 1283000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Inc > 1283000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many records have capital reserves greater than 60737000000.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Cap_Reserves > 60737000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of securities where the depreciation of fixed assets, depletion of oil and gas assets, and depreciation of productive biological assets is less than or equal to 1906000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fixed_Asset_Dep_Amort_Dec <= 1906000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the minority shareholders' equity and the corresponding frequency of records, sorted by the frequency in ascending order.",
    "query": "SELECT Balance_Sheet.Minor_Int_Eq , COUNT (*) FROM Balance_Sheet GROUP BY Balance_Sheet.Minor_Int_Eq ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock name if their purchase of resale financial assets exceeds 21841583000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Buyback_FAs > 21841583000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you show me the stock codes of the records that have at least 3 occurrences?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) >= 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the highest number of records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have derivative financial assets less than 1980?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Deriv_Assets < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the paid-in capital and the total bonds payable for each record.",
    "query": "SELECT Balance_Sheet.Paid_Up_Cap , SUM (Balance_Sheet.Bonds_PAY) FROM Balance_Sheet GROUP BY Balance_Sheet.Paid_Up_Cap"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all securities codes where the amortization of long-term deferred expenses is less than or equal to 26443266996.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Longterm_Amortization <= 26443266996.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of the two stocks with the highest value of intangible assets?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Intang_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the smallest net increase in customer deposits and interbank deposits for each net cash flow generated from investment activities.",
    "query": "SELECT MIN (Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits) , Cash_Flow_Statement.Net_CF_Inv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Inv"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for the records with net profit attributable to the owner of the parent company smaller than 23777000000.0, give me their net profit and the subtotal of cash outflows from operating activities.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit , Cash_Flow_Statement.Op_CF_Out_Sub FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Net_Profit < 23777000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net increase in cash and cash equivalents and the count of records for each net increase in cash and cash equivalents.",
    "query": "SELECT Cash_Flow_Statement.IM_NCF_Cash_Eq , count(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.IM_NCF_Cash_Eq"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of stocks that have five or more records in the database.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock whose total liabilities and owner's equity is greater than 8932519000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab_Own_Eq > 8932519000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the total comprehensive income values that have at least 5 records.",
    "query": "SELECT Income_Statement.Tot_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Tot_Compre_Inc HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the net income from handling fees and commissions for all records whose other cash payments related to financing activities are between 1822000000.0 and 4972437585.0.",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Fin_Other BETWEEN 1822000000.0 AND 4972437585.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with either a stock code of 600000.SH or deposit absorption of 8098272000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Balance_Sheet.Acc_Deposits = 8098272000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three stocks with the highest capital reserves.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Cap_Reserves DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different net profits attributable to the owner of the parent company are there for each stock code?",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Income_Statement.Attr_Parent_Net_Profit) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the values of diluted earnings per share and minority interest in our data.",
    "query": "SELECT Income_Statement.Diluted_EPS , Income_Statement.Minor_Int_Inc_Loss FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose loan and advances are equal to or less than 6096979000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Loans_Adv <= 6096979000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the long-term equity investments that have at least four records with loans and advances greater than 6096979000000.0.",
    "query": "SELECT Balance_Sheet.LT_Eq_Invest FROM Balance_Sheet WHERE Balance_Sheet.Loans_Adv > 6096979000000.0 GROUP BY Balance_Sheet.LT_Eq_Invest HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all minority interest values where the total business and management fees are above 10.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss FROM Income_Statement GROUP BY Income_Statement.Minor_Int_Inc_Loss HAVING sum(Income_Statement.Gen_n_Admin_Exps) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities have other comprehensive income that is not equal to 1375220000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oth_Compre_Inc != 1375220000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average loss on scrapping of fixed assets across all records?",
    "query": "SELECT MAX (Cash_Flow_Statement.Fixed_Asset_Scrap_Loss) , MIN (Cash_Flow_Statement.Fixed_Asset_Scrap_Loss), AVG (Cash_Flow_Statement.Fixed_Asset_Scrap_Loss) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the name of stocks along with the count of unique interest income values for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Income_Statement.Int_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the cash received from other cash related to operating activities that appeared more than twice.",
    "query": "SELECT Cash_Flow_Statement.Cash_Oth_Oper_Activities FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Oth_Oper_Activities HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the general risk preparation and purchase of resale financial assets values of the five records with the highest general risk preparation value.",
    "query": "SELECT Balance_Sheet.Gen_Risk_Res , Balance_Sheet.Buyback_FAs FROM Balance_Sheet ORDER BY Balance_Sheet.Gen_Risk_Res DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have net income from handling fees and commissions greater than 47091000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Net_Inc > 47091000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has the highest number of records in our database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash received from other cash related to operating activities, sorted by the net increase in cash and cash equivalents in descending order.",
    "query": "SELECT Cash_Flow_Statement.Cash_Oth_Oper_Activities FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Net_CF_Cash_Equiv DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two securities with the highest subtotal of cash inflows from investment activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inv_CF_In_Sub DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks where taxes and surcharges is less than or equal to 534000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Tax_n_Surs <= 534000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of top three securities with the highest cash received for interest, handling fees, and commissions.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Int_Commission_Collected DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have investment income from associates and joint ventures greater than 43028778631.0 and net increase in borrowings from the central bank greater than 8252626000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Inv_Inc_Assoc_JV > 43028778631.0 AND Cash_Flow_Statement.Net_Inc_Borrowings_CB > 8252626000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the net increase in cash and cash equivalents that is greater than 66167000000.0, along with the corresponding basic earnings per share values.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Cash_Equiv , Income_Statement.Basic_EPS FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Cash_Equiv > 66167000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a net increase in customer deposits and interbank deposits greater than 305091568000.0 and a loss from changes in fair value greater than 2413000000.0?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits > 305091568000.0 AND Cash_Flow_Statement.Fair_Value_Change_Loss > 2413000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have intangible assets exceeding 1759000000.0 and deferred tax assets above 64585000000.0?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Intang_Assets > 1759000000.0 AND Balance_Sheet.Def_IT_Assets > 64585000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the average investment income for each net profit value in cash flow statement.",
    "query": "SELECT avg(Cash_Flow_Statement.Investment_Income) , Cash_Flow_Statement.CF_Stmt_Net_Income FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.CF_Stmt_Net_Income"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the exchange difference of foreign currency statements for those who have sold more than 10 financial assets for repurchase, grouped by the exchange difference value.",
    "query": "SELECT Balance_Sheet.Exch_Diff_Cash FROM Balance_Sheet GROUP BY Balance_Sheet.Exch_Diff_Cash HAVING sum(Balance_Sheet.Sell_Rep_FAs) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock name and the amortization of long-term deferred expenses for all records, sorted by the decrease in deferred income tax assets in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Longterm_Amortization FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.DIT_Asset_Reduction DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net profit values that appear more than once in our records.",
    "query": "SELECT Income_Statement.Net_Profit FROM Income_Statement GROUP BY Income_Statement.Net_Profit HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return a list of comprehensive income attributable to shareholders of the parent company in the income statement.",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities with the highest capital reserves?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Cap_Reserves DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the minority interest value that has the highest frequency among all records?",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss FROM Income_Statement GROUP BY Income_Statement.Minor_Int_Inc_Loss ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock code and comprehensive income attributable to minority shareholders, sorted by investment income in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Minor_Int_Shareholders_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Inv_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the cash paid for interest, handling fees, and commissions and their total cash paid for taxes in our records.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Int_Fees_Com , SUM (Cash_Flow_Statement.Cash_Pay_Taxes) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Int_Fees_Com"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three companies with the highest interest expenses.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Int_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities with the highest trading financial assets value?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Trad_FAs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the interest income value that has the fewest number of records.",
    "query": "SELECT Income_Statement.Int_Inc FROM Income_Statement GROUP BY Income_Statement.Int_Inc ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the name of stocks whose basic earnings per share is less than or equal to 0.76, and display them in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Basic_EPS <= 0.76 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the number of records with initial cash equivalents exceeding 63953659000.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Initial_Cash_Equiv > 63953659000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the interest expenses of records whose net increase in borrowing funds from other financial institutions is between 39176273386 and 13068329529.",
    "query": "SELECT Income_Statement.Int_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_IB_Borrowings BETWEEN 39176273386 AND 13068329529"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there that either belong to China Merchants Bank or have cash paid for investment equal to 316981000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Cash_Flow_Statement.Cash_Pay_Invest = 316981000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the inventory decrease for those whose diluted earnings per share is greater than 10, and group them by inventory decrease.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Inventory_Decrease HAVING sum(Income_Statement.Diluted_EPS) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the security code and cash outflows from operating activities of the records that have at least 5 instances of distributing dividends and profits.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Op_CF_Out_Sub FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Distribute_Dividends_Profits HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of the two highest income tax expenses.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Income_Tax_Exp DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest fee and commission income.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the debt converted to capital and assets impairment loss for records where the debt converted to capital value is higher than 32546712357.",
    "query": "SELECT Cash_Flow_Statement.Debt_Converted_Capital , Income_Statement.Assets_Imp_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Debt_Converted_Capital > 32546712357"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the distinct values of interest expenses from income statement records.",
    "query": "SELECT distinct(Income_Statement.Int_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or have available-for-sale financial assets equal to 3468896914?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Balance_Sheet.Avail_Sale_FAs = 3468896914"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest operating profit?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Profit DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the name of securities that appear more than once in our data.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have fee and commission income greater than 6044000000.0 for each stock code?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Inc > 6044000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records does each company have where dividends and profits paid by subsidiaries to minority shareholders exceeds 43223398119?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Subsidiary_Pay_Minority > 43223398119 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities codes that have at least 5 records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the stock codes and the closing balances of cash equivalents for records that have at least 5 other cash payments related to financing activities.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Cash_Eq_End_Period FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cash_Pay_Fin_Other HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock issued bonds more than 14005000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Issue_Bonds > 14005000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the name of the stock that has only one record.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all details of the record with the highest value of amortization of long-term deferred expenses.",
    "query": "SELECT * FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Longterm_Amortization DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the securities codes of records with intangible assets less than or equal to 1759000000.0, in descending order of the securities codes.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Intang_Assets <= 1759000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the tax and surcharges values that appear less than two times.",
    "query": "SELECT Income_Statement.Tax_n_Surs FROM Income_Statement GROUP BY Income_Statement.Tax_n_Surs HAVING COUNT (*) < 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all the information available in the cash flow statement.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all the cash outflow subtotals from operating activities that have more than 2 records.",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Out_Sub FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Op_CF_Out_Sub HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum value of total liabilities and owner's equity for each record.",
    "query": "SELECT avg(Balance_Sheet.Tot_Liab_Own_Eq), max(Balance_Sheet.Tot_Liab_Own_Eq) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the interest receivable value that appears more than once.",
    "query": "SELECT Balance_Sheet.Int_Receiv FROM Balance_Sheet GROUP BY Balance_Sheet.Int_Receiv HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which five cash payments for investment are the most frequent?",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Invest FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Invest ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the bonds payable values that have at least 5 records?",
    "query": "SELECT Balance_Sheet.Bonds_PAY FROM Balance_Sheet GROUP BY Balance_Sheet.Bonds_PAY HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have minor interest losses greater than 195000000.0 and subsidiary payments to minority shareholders above 18253188566?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Inc_Loss > 195000000.0 AND Cash_Flow_Statement.Subsidiary_Pay_Minority > 18253188566"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of two companies with the highest subtotal of cash inflows from financing activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fin_CF_In_Sub DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Provide the names of the top three companies with the highest capital reserves.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Cap_Reserves DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the translation differences of foreign currency statements in the balance sheet records.",
    "query": "SELECT Balance_Sheet.Exch_Diff_Cash FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the three securities with the highest interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.IB_Deposits DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock codes have more than one record in the database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) >= 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the lending funds value of records with paid-in capital equal to 15915000000.0.",
    "query": "SELECT Balance_Sheet.Lending_Funds FROM Balance_Sheet WHERE Balance_Sheet.Paid_Up_Cap BETWEEN 15915000000.0 AND 15915000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the different values of amortization of intangible assets and the count of records for each value.",
    "query": "SELECT Cash_Flow_Statement.Intangible_Asset_Amortization , COUNT(*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Intangible_Asset_Amortization"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the trading financial assets values, sorted by fixed assets in descending order.",
    "query": "SELECT Balance_Sheet.Trad_FAs FROM Balance_Sheet ORDER BY Balance_Sheet.Fix_Assets DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest cash payments related to other operating activities?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Op_Other DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have the highest investment income?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Recv_Invest DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock codes of the top three records with the highest increase in deferred income tax liabilities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.DIT_Liability_Increase DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average total comprehensive income attributable to shareholders of the parent company, the minimum total comprehensive income attributable to minority shareholders, and the minimum net increase in cash and cash equivalents for all records?",
    "query": "SELECT AVG (Income_Statement.Attr_Parent_Shareholders_Compre_Inc) , MIN (Income_Statement.Minor_Int_Shareholders_Compre_Inc), MIN (Cash_Flow_Statement.IM_NCF_Cash_Eq) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the inventory decrease value for each stock whose business and management fees is greater than 10.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Inventory_Decrease HAVING sum(Income_Statement.Gen_n_Admin_Exps) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a securities code equal to \"600016.SH\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Code = \"600016.SH\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have both total liabilities and owner's equity exceeding 8932519000000.0 and payable employee compensation greater than 7367000000.0?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Tot_Liab_Own_Eq > 8932519000000.0 AND Balance_Sheet.Emp_Comp_PAY > 7367000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a deferred tax liability smaller than 1980?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Def_IT_Liab < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the net income from handling fees and commissions values that have a total comprehensive income attributable to shareholders of the parent company greater than 10.",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Net_Inc HAVING sum(Income_Statement.Attr_Parent_Shareholders_Compre_Inc) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a stock code of 600919.SH or a minority interest income loss of 251000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Income_Statement.Minor_Int_Inc_Loss = 251000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me how many records have total owner's equity greater than 721080000000.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Own_Eq > 721080000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the other business income values, along with the count of their occurrences.",
    "query": "SELECT Income_Statement.Oth_Biz_Inc , count(*) FROM Income_Statement GROUP BY Income_Statement.Oth_Biz_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average interest payable value in our data?",
    "query": "SELECT MAX (Balance_Sheet.Int_Pay) , MIN (Balance_Sheet.Int_Pay), AVG (Balance_Sheet.Int_Pay) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of all stocks whose general risk preparation is 133002000000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Gen_Risk_Res <= 133002000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sum up other comprehensive income for each exchange gain income value.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc , SUM (Income_Statement.Oth_Compre_Inc) FROM Income_Statement GROUP BY Income_Statement.Exch_Gain_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average operating expenses, the minimum value of fixed assets acquired through financing lease, and the minimum value of inventory decrease among all records?",
    "query": "SELECT AVG (Income_Statement.Oper_Exp) , MIN (Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets), MIN (Cash_Flow_Statement.Inventory_Decrease) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the owner's equity attributable to the parent company that appears at least 10 times.",
    "query": "SELECT Balance_Sheet.Own_Eq_Attr_Parent FROM Balance_Sheet GROUP BY Balance_Sheet.Own_Eq_Attr_Parent HAVING COUNT (*) >= 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes in our data whose dividends and profits paid by subsidiaries to minority shareholders are smaller than or equal to 2856081728, and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Subsidiary_Pay_Minority <= 2856081728 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many records of each stock code have total assets more than 7641451000000.0",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Assets > 7641451000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a Stk_Code equal to 600016.SH or a total liabilities equal to 3056280475000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Balance_Sheet.Tot_Liab = 3056280475000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock names in ascending order of their frequency in the records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of the stock whose translation difference of foreign currency statements is not 36352257336.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Exch_Diff_Cash != 36352257336"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of net increase in customer loans and advances from the record with the least frequent occurrence of net increase in customer loans and advances?",
    "query": "SELECT Cash_Flow_Statement.Cust_Loans_Net_Inc FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cust_Loans_Net_Inc ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top 5 subtotals of cash inflows from operating activities, sorted by the number of records?",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Sub FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Op_CF_Sub ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list cash paid for investment and the number of unique fee and commission expenses that each cash paid for investment value contains.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Invest , COUNT (DISTINCT Income_Statement.Fee_Com_Exp) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cash_Pay_Invest"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the due from interbank deposits values for records with cash and deposits with central bank between 176103000000.0 and 354899000000.0.",
    "query": "SELECT Balance_Sheet.IB_Deposits FROM Balance_Sheet WHERE Balance_Sheet.Cash_CB BETWEEN 176103000000.0 AND 354899000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Huaxia Bank or have trading financial assets valued at 425245000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Balance_Sheet.Trad_FAs = 425245000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average diluted earnings per share, the minimum other business income, and the minimum other business costs of all records.",
    "query": "SELECT AVG (Income_Statement.Diluted_EPS) , MIN (Income_Statement.Oth_Biz_Inc), MIN (Income_Statement.Oth_Biz_Costs) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of loss on disposal of fixed assets, intangible assets, and other long-term assets that has the highest frequency in our records?",
    "query": "SELECT Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest net cash flow generated from investment activities?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_CF_Inv DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the value of received other cash related to investment activities, the number of distinct fee and commission income, and the total number of records in each group.",
    "query": "SELECT Cash_Flow_Statement.Recv_Other_Invest , count(DISTINCT Income_Statement.Fee_Com_Inc) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Recv_Other_Invest"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of customer loans and advances with the least number of records?",
    "query": "SELECT Cash_Flow_Statement.Cust_Loans_Net_Inc FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cust_Loans_Net_Inc ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with a stock code of 600000.SH or a closing balance of cash equal to 12045000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Cash_Flow_Statement.Cash_End_Period = 12045000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of companies whose operating revenue is less than or equal to 38842871000.0 in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Rev <= 38842871000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of securities that have more than 2 records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the minimum net profit in cash flow statement for each other business income value?",
    "query": "SELECT MIN (Cash_Flow_Statement.CF_Stmt_Net_Income) , Income_Statement.Oth_Biz_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Oth_Biz_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average net increase in deposits with central bank and interbank funds, the minimum opening balance of cash, and the minimum decrease in inventory across all records.",
    "query": "SELECT AVG (Cash_Flow_Statement.CenBank_Interbank_Net_Inc) , MIN (Cash_Flow_Statement.Cash_Begin_Period), MIN (Cash_Flow_Statement.Inventory_Decrease) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, show me the number of records that have borrowing from the Central Bank above 137465000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Bor_CB > 137465000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest and lowest value of available-for-sale financial assets in all records?",
    "query": "SELECT MAX (Balance_Sheet.Avail_Sale_FAs) , MIN (Balance_Sheet.Avail_Sale_FAs) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each subtotal of cash inflows from operating activities, count the number of distinct convertible corporate bonds maturing within one year.",
    "query": "SELECT Cash_Flow_Statement.Op_CF_Sub , COUNT (DISTINCT Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Op_CF_Sub"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the company name that appears exactly 10 times in the records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) = 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the income tax expenses values that appear in 12 or more records.",
    "query": "SELECT Income_Statement.Income_Tax_Exp FROM Income_Statement GROUP BY Income_Statement.Income_Tax_Exp HAVING COUNT (*) >= 12"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two securities with the highest derivative financial liabilities?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Deriv_Liab DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two securities with the highest comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me non operating expenses and net cash flow generated from investment activities for those records whose net increase in cash and cash equivalents is either greater than -88278000000.0 or less than -15933000000.0.",
    "query": "SELECT Income_Statement.Non_Op_Exp , Cash_Flow_Statement.Net_CF_Inv FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Cash_Equiv > -88278000000.0 OR Cash_Flow_Statement.Net_CF_Cash_Equiv < -15933000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the opening and closing balances of cash for the top five records with the highest opening balance.",
    "query": "SELECT Cash_Flow_Statement.Cash_Begin_Period , Cash_Flow_Statement.Cash_End_Period FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cash_Begin_Period DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600919.SH or other assets value of 31365000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Balance_Sheet.Oth_Assets = 31365000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of stocks whose total profit is not equal to 16410000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Profit != 16410000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three securities with the highest subtotal of cash inflows from operating activities.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Op_CF_Sub DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Bank of Jiangsu or their total liabilities and owner's equity is 10739836000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Balance_Sheet.Tot_Liab_Own_Eq = 10739836000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have cash received for interest, handling fees, and commissions less than 1980?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Int_Commission_Collected < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the trading financial liabilities values with at least 4 records where investment real estate is greater than 1227000000.0?",
    "query": "SELECT Balance_Sheet.Trad_Fin_Liab FROM Balance_Sheet WHERE Balance_Sheet.Inv_Real_Estate > 1227000000.0 GROUP BY Balance_Sheet.Trad_Fin_Liab HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of top three stocks with the highest cash paid for interest, handling fees, and commissions.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Pay_Int_Fees_Com DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock code and increase in deferred income tax liabilities for all records, sorted in descending order of cash outflows from investment activities.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.DIT_Liability_Increase FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inv_CF_Out_Sub DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the three companies with the highest taxes and fees payable.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tax_Pay DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of stocks whose trading financial assets are less than or equal to 386582000000.0, sorted in descending order of their names?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Trad_FAs <= 386582000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the cash received for interest, handling fees, and commissions for the records whose increase in deferred income tax liabilities is between 17186943329 and 39371315080.",
    "query": "SELECT Cash_Flow_Statement.Cash_Int_Commission_Collected FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.DIT_Liability_Increase BETWEEN 17186943329 AND 39371315080"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the securities code for all records with total assets less than or equal to 3294582710000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Assets <= 3294582710000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the unique company names and the number of records for each company.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the minor interest and net profit values for records where the minor interest is less than 477000000.0.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss , Income_Statement.Net_Profit FROM Income_Statement WHERE Income_Statement.Minor_Int_Inc_Loss < 477000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of stock codes and diluted earnings per share in descending order of interest income.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Diluted_EPS FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Int_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which non-operating expenses have 12 or more occurrences in our data?",
    "query": "SELECT Income_Statement.Non_Op_Exp FROM Income_Statement GROUP BY Income_Statement.Non_Op_Exp HAVING COUNT (*) >= 12"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks whose handling fees and commission expenses are less than or equal to 2605000000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Exp <= 2605000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return all columns in cash flow statement records.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600036.SH or an income tax expense of 2952000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Income_Statement.Income_Tax_Exp = 2952000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the five exchange gains values of records that have the highest frequency?",
    "query": "SELECT Income_Statement.Exch_Gain_Inc FROM Income_Statement GROUP BY Income_Statement.Exch_Gain_Inc ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have 'Shanghai Pudong Development Bank' in their name?",
    "query": "SELECT DISTINCT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%Shanghai Pudong Development Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fixed assets value and the frequency of each value in the records.",
    "query": "SELECT Balance_Sheet.Fix_Assets , count(*) FROM Balance_Sheet GROUP BY Balance_Sheet.Fix_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the general risk preparation value that occurs exactly 9 times?",
    "query": "SELECT Balance_Sheet.Gen_Risk_Res FROM Balance_Sheet GROUP BY Balance_Sheet.Gen_Risk_Res HAVING COUNT (*) = 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the cash outflows from investment activities in descending order of net increase in borrowings from the central bank.",
    "query": "SELECT Cash_Flow_Statement.Inv_CF_Out_Sub FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Net_Inc_Borrowings_CB DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of total comprehensive income attributable to shareholders of the parent company that appeared more than once?",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top 5 companies with the most records?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the paid-in capital values that have at least 8 occurrences.",
    "query": "SELECT Balance_Sheet.Paid_Up_Cap FROM Balance_Sheet GROUP BY Balance_Sheet.Paid_Up_Cap HAVING COUNT (*) >= 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the interest expenses in the income statement table.",
    "query": "SELECT Income_Statement.Int_Exp FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the investment cash flow inflow subtotal that only appears once in our records?",
    "query": "SELECT Cash_Flow_Statement.Inv_CF_In_Sub FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Inv_CF_In_Sub HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the stock codes that appear more than twice in the records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) > 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the count of distinct interest expenses and the total number of records for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Income_Statement.Int_Exp) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the closing balance of cash equivalents in descending order of subtotal of cash inflows from operating activities.",
    "query": "SELECT Cash_Flow_Statement.Final_Cash_Equiv FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Op_CF_Sub DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the count of initial cash equivalents and total number of records for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Cash_Flow_Statement.Initial_Cash_Equiv) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the cash received for interest, handling fees, and commissions and non operating expenses of the top 5 records with the highest cash received for interest, handling fees, and commissions value.",
    "query": "SELECT Cash_Flow_Statement.Cash_Int_Commission_Collected , Income_Statement.Non_Op_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Int_Commission_Collected DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or have net interest income equal to 34151000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Income_Statement.Net_Int_Inc = 34151000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities codes of records that have other business income different from 2447000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oth_Biz_Inc != 2447000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock that has convertible corporate bonds maturing within one year value greater than 1275433540?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y > 1275433540 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the interest expenses of each record in the income statement table as a list.",
    "query": "SELECT Income_Statement.Int_Exp FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest interest payable?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Int_Pay DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me two securities codes of the records with the highest available-for-sale financial assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Avail_Sale_FAs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock name and the count of unique net profit attributable to the owner of the parent company for each stock name.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Income_Statement.Attr_Parent_Net_Profit) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Bank of Jiangsu or have non-operating expenses equal to 37000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Income_Statement.Non_Op_Exp = 37000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have assets impairment loss less than 1980?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Assets_Imp_Loss < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the indirect method net cash flow generated from operating activities that appeared more than 10 times.",
    "query": "SELECT Cash_Flow_Statement.IM_NCF_Oper_Activities FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.IM_NCF_Oper_Activities HAVING COUNT (*) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock name appears most frequently in our records?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock code and the count of records for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and the number of occurrences for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the paid-in capitals that appear less than 9 times in the records?",
    "query": "SELECT Balance_Sheet.Paid_Up_Cap FROM Balance_Sheet GROUP BY Balance_Sheet.Paid_Up_Cap HAVING COUNT (*) < 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three securities have the highest value of available-for-sale financial assets?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Avail_Sale_FAs DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock name of records whose asset impairment provision is not equal to 49000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Asset_Impairment_Dec != 49000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes in descending order whose total comprehensive income is 13404000000.0 or less.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Tot_Compre_Inc <= 13404000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either stock code 600016.SH or deposit absorption of 5069529000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Balance_Sheet.Acc_Deposits = 5069529000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of companies that appear more than once in our data.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different values of derivative financial assets do we have in our records?",
    "query": "SELECT count(DISTINCT Balance_Sheet.Deriv_Assets) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the three stock codes with the highest tax payment.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tax_Pay DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities codes of records that appear more than once.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all business and management fees values that have a total investment income greater than 10.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Income_Statement GROUP BY Income_Statement.Gen_n_Admin_Exps HAVING sum(Income_Statement.Inv_Inc) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a translation difference of foreign currency statements greater than 17679402107 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Exch_Diff_Cash > 17679402107 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return me the two company names with the highest total comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the distinct values of Securities code in our records.",
    "query": "SELECT distinct(Basic_Info.Stk_Code) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities codes that appear less than once in the records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) < 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the minimum asset impairment provision value for each intangible asset amortization value?",
    "query": "SELECT MIN (Cash_Flow_Statement.Asset_Impairment_Dec) , Cash_Flow_Statement.Intangible_Asset_Amortization FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Intangible_Asset_Amortization"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or have non-operating expenses equal to 37000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Income_Statement.Non_Op_Exp = 37000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the number of records that has cash paid for other financing activities more than 4972437585.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Fin_Other > 4972437585.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose net cash flow generated from operating activities is not equal to 108631000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Op != 108631000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the owner's equity attributable to the parent company and capital reserves for records with owner's equity less than 713100000000.0.",
    "query": "SELECT Balance_Sheet.Own_Eq_Attr_Parent , Balance_Sheet.Cap_Reserves FROM Balance_Sheet WHERE Balance_Sheet.Own_Eq_Attr_Parent < 713100000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average loss on disposal of non current assets, the minimum non operating revenue, and the minimum net income from handling fees and commissions across all records.",
    "query": "SELECT AVG (Income_Statement.Loss_Disposal_Nonc_Assets) , MIN (Income_Statement.Non_Op_Rev), MIN (Income_Statement.Fee_Com_Net_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the deposit absorption values that have at least 4 records and their corresponding bonds payable exceeds 1272371000000.0.",
    "query": "SELECT Balance_Sheet.Acc_Deposits FROM Balance_Sheet WHERE Balance_Sheet.Bonds_PAY > 1272371000000.0 GROUP BY Balance_Sheet.Acc_Deposits HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest financial assets sold for repurchase?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Sell_Rep_FAs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have operating expenses greater than 64652000000.0, and what are the corresponding values of operating expenses and basic earnings per share?",
    "query": "SELECT Income_Statement.Oper_Exp , Income_Statement.Basic_EPS FROM Income_Statement WHERE Income_Statement.Oper_Exp > 64652000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different securities codes are there in our database?",
    "query": "SELECT count(DISTINCT Basic_Info.Stk_Code) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Mingsheng Bank or have general and administrative expenses of exactly 24257000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Income_Statement.Gen_n_Admin_Exps = 24257000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the highest and lowest values of diluted earnings per share across all records.",
    "query": "SELECT MAX (Income_Statement.Diluted_EPS) , MIN (Income_Statement.Diluted_EPS) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three stock codes with the highest subtotal of cash inflows from investment activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inv_CF_In_Sub DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide all records of each stock with net increase in cash and cash equivalents above 22704805000.0, along with the name of the stock.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.IM_NCF_Cash_Eq > 22704805000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of securities that have five or more records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the exchange gains of records that have cash outflows from financing activities between 63877000000.0 and 42937000000.0.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fin_CF_Out_Sub BETWEEN 63877000000.0 AND 42937000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the securities codes where the net cash flow generated from operating activities is 48486000000.0 or less, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Op <= 48486000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock with intangible assets value higher than 548886000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Intang_Assets > 548886000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock code has the fewest number of occurrences in the records table?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the stock code that appeared only once in our data.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the information available for each record in the cash flow statement.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the count of records and different values of other assets for each stock code, along with the stock code itself.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Balance_Sheet.Oth_Assets) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock names only appear once in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose interest income is not equal to 75794000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Int_Inc != 75794000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have non-operating expenses exceeding 37000000.0 and decrease in deferred income tax assets surpassing 3334000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Non_Op_Exp > 37000000.0 AND Cash_Flow_Statement.DIT_Asset_Reduction > 3334000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the highest other comprehensive income.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Oth_Compre_Inc DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the operating profit values that appear at least 14 times.",
    "query": "SELECT Income_Statement.Oper_Profit FROM Income_Statement GROUP BY Income_Statement.Oper_Profit HAVING COUNT (*) >= 14"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the general and administrative expenses from income statement, sorted by assets impairment loss in descending order.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Income_Statement ORDER BY Income_Statement.Assets_Imp_Loss DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stock codes have the highest comprehensive income attributable to shareholders of the parent company?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose non-operating expenses are not equal to 68000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Non_Op_Exp != 68000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return me the names of eight stocks with the least frequency of occurrence in ascending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have diluted earnings per share greater than 32452670465.0 and cash paid to employees exceeding 19183000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Diluted_EPS > 32452670465.0 AND Cash_Flow_Statement.Cash_Pay_Emp > 19183000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the treasury stock value and the total deposits from interbank and other financial institutions for each record.",
    "query": "SELECT Balance_Sheet.Treas_Stock , SUM (Balance_Sheet.IB_Dep_Oth_FIs) FROM Balance_Sheet GROUP BY Balance_Sheet.Treas_Stock"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for records with a sum of other business income greater than 10, what are the net increase in customer loans and advances?",
    "query": "SELECT Cash_Flow_Statement.Cust_Loans_Net_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Cust_Loans_Net_Inc HAVING sum(Income_Statement.Oth_Biz_Inc) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the employee compensation payable and lending funds values for the top five records with the highest employee compensation payable.",
    "query": "SELECT Balance_Sheet.Emp_Comp_PAY , Balance_Sheet.Lending_Funds FROM Balance_Sheet ORDER BY Balance_Sheet.Emp_Comp_PAY DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records for each stock have general risk preparation greater than 133002000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Gen_Risk_Res > 133002000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all investment income from associates and joint ventures and operating payables increase for records with investment income from associates and joint ventures smaller than 31428654111.0.",
    "query": "SELECT Income_Statement.Inv_Inc_Assoc_JV , Cash_Flow_Statement.Oper_Payables_Increase FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Inv_Inc_Assoc_JV < 31428654111.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either a stock code of 600000.SH or loans and advances of 4866904000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Balance_Sheet.Loans_Adv = 4866904000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have cash payments related to financing activities greater than 4972437585.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Fin_Other > 4972437585.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of the records whose deposits from interbank and other financial institutions are 559475000000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.IB_Dep_Oth_FIs <= 559475000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all non-operating revenue values where the total cash payments for other operating activities exceed 10.",
    "query": "SELECT Income_Statement.Non_Op_Rev FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Non_Op_Rev HAVING sum(Cash_Flow_Statement.Cash_Pay_Op_Other) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the closing balance of cash equivalents for records where cash paid for interest, handling fees, and commissions is null.",
    "query": "SELECT Cash_Flow_Statement.Cash_Eq_End_Period FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Pay_Int_Fees_Com IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock names whose tax payment is less than or equal to 10461000000.0, in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Taxes <= 10461000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "get me the foreign exchange rate change on cash in descending order based on interest expenses.",
    "query": "SELECT Cash_Flow_Statement.FX_Rate_Change_Cash FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Int_Exp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have received other cash related to financing activities of either 31119913670.0 or 14299585929.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Recv_Other_Fin = 31119913670.0 OR Cash_Flow_Statement.Recv_Other_Fin = 14299585929.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the fee and commission income along with their total fee and commission expenses in the records.",
    "query": "SELECT Income_Statement.Fee_Com_Inc , SUM (Income_Statement.Fee_Com_Exp) FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks whose lending funds value is less than or equal to 188526000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Lending_Funds <= 188526000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the name of the stock that appears most frequently in our data.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are from Shanghai Pudong Development Bank or have a cash paid for investment of 1056100000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Cash_Flow_Statement.Cash_Pay_Invest = 1056100000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a cash outflow from investment activities greater than 335731000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inv_CF_Out_Sub > 335731000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the two companies with the highest capital reserves?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Cap_Reserves DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with either a company name of Bank of Jiangsu or other business costs equal to 857000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Income_Statement.Oth_Biz_Costs = 857000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock name, provide the stock name itself, the number of total owner's equity values, and the total number of records associated with that stock name.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Balance_Sheet.Tot_Own_Eq) , count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the other business costs and net increase in customer deposits and interbank deposits for the top five records with the highest other business costs.",
    "query": "SELECT Income_Statement.Oth_Biz_Costs , Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Oth_Biz_Costs DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average value of minority interest and income loss for each net profit value in cash flow statement.",
    "query": "SELECT avg(Income_Statement.Minor_Int_Inc_Loss) , Cash_Flow_Statement.CF_Stmt_Net_Income FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.CF_Stmt_Net_Income"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the diluted earnings per share for records with net increase in customer deposits and interbank deposits between 185841000000.0 and 494490000000.0.",
    "query": "SELECT Income_Statement.Diluted_EPS FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits BETWEEN 185841000000.0 AND 494490000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the securities codes of records that have fee and commission income less than or equal to 17520000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Inc <= 17520000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have investment income exceeding 50032000000.0 and capital converted from debt greater than 7541736353?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Investment_Income > 50032000000.0 AND Cash_Flow_Statement.Debt_Converted_Capital > 7541736353"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the highest, lowest and average values of interest expenses in all records?",
    "query": "SELECT MAX (Income_Statement.Int_Exp) , MIN (Income_Statement.Int_Exp), AVG (Income_Statement.Int_Exp) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have operating profit values different from 16369000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Profit != 16369000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest exchange gains?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Exch_Gain_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes in descending alphabetical order of companies whose undistributed profits are less than or equal to 115670000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Undist_Profits <= 115670000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of loans and advances that has the highest number of occurrences?",
    "query": "SELECT Balance_Sheet.Loans_Adv FROM Balance_Sheet GROUP BY Balance_Sheet.Loans_Adv ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities codes appear only once in the database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock names and estimated liabilities for all records.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Est_Liab FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock codes and cash paid for investment in descending order of debt repayment.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Cash_Pay_Invest FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Repay_Debt DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities codes that appear more than 5 times in our records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) > 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the treasury stock value for each record with a total cash and deposits with central bank exceeding 10?",
    "query": "SELECT Balance_Sheet.Treas_Stock FROM Balance_Sheet GROUP BY Balance_Sheet.Treas_Stock HAVING sum(Balance_Sheet.Cash_CB) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of all stocks and the number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the three stock codes with the highest translation difference of foreign currency statements.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Exch_Diff_Cash DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the net profit values in the income statement records.",
    "query": "SELECT Income_Statement.Net_Profit FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have treasury stock greater than 18462901041 and interest receivable above 6079448104?",
    "query": "SELECT count(*) FROM Balance_Sheet WHERE Balance_Sheet.Treas_Stock > 18462901041 AND Balance_Sheet.Int_Receiv > 6079448104"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different business costs correspond to each loss on disposal of non current assets?",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets , COUNT (DISTINCT Income_Statement.Oth_Biz_Costs) FROM Income_Statement GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with a stock code of 600016.SH or cash received for interest, handling fees, and commissions equal to 118670000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Cash_Flow_Statement.Cash_Int_Commission_Collected = 118670000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of other business costs that appears most frequently?",
    "query": "SELECT Income_Statement.Oth_Biz_Costs FROM Income_Statement GROUP BY Income_Statement.Oth_Biz_Costs ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the fee and commission income of all records, and the total net increase in customer loans and advances for each of them.",
    "query": "SELECT Income_Statement.Fee_Com_Inc , SUM (Cash_Flow_Statement.Cust_Loans_Net_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Fee_Com_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the non-operating expenses that occur more than 3 times.",
    "query": "SELECT Income_Statement.Non_Op_Exp FROM Income_Statement GROUP BY Income_Statement.Non_Op_Exp HAVING COUNT (*) > 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either the stock code 600036.SH or cash payments for other investment equal to 45793937627?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Cash_Flow_Statement.Cash_Pay_Inv_Other = 45793937627"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the information available in the income statement records.",
    "query": "SELECT * FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks that appear less than once.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) < 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "Show me the securities code and the count of records for each securities code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the top five most frequent stock names in our records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of the three companies with the highest financial expenses in cash flow statement.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.CF_Stmt_Fin_Expenses DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the eight smallest decrease in deferred income tax assets values, sorted by their frequency?",
    "query": "SELECT Cash_Flow_Statement.DIT_Asset_Reduction FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.DIT_Asset_Reduction ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the basic earnings per share of all records, along with the total value of minority interest income and loss for each.",
    "query": "SELECT Income_Statement.Basic_EPS , SUM (Income_Statement.Minor_Int_Inc_Loss) FROM Income_Statement GROUP BY Income_Statement.Basic_EPS"
  },
  {
    "db_id": "Bank_Financials",
    "question": "query the values of minor interest and operating expenses for records where the value of minor interest is greater than 685000000.0.",
    "query": "SELECT Income_Statement.Minor_Int_Inc_Loss , Income_Statement.Oper_Exp FROM Income_Statement WHERE Income_Statement.Minor_Int_Inc_Loss > 685000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest deposits from interbank and other financial institutions?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.IB_Dep_Oth_FIs DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities codes only appear once in the data?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) < 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the other business costs values that have at least 4 records where other cash payments related to operating activities are larger than 9279000000.0?",
    "query": "SELECT Income_Statement.Oth_Biz_Costs FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Op_Other > 9279000000.0 GROUP BY Income_Statement.Oth_Biz_Costs HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average net interest income for each non-operating income value.",
    "query": "SELECT avg(Income_Statement.Net_Int_Inc) , Income_Statement.Non_Op_Rev FROM Income_Statement GROUP BY Income_Statement.Non_Op_Rev"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes whose net increase in cash and cash equivalents is less than or equal to -88278000000.0, sorted in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Net_CF_Cash_Equiv <= -88278000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the values of other and assets impairment loss where the exchange gains are either greater than 2480000000.0 or less than 459000000.0.",
    "query": "SELECT Cash_Flow_Statement.Other , Income_Statement.Assets_Imp_Loss FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Exch_Gain_Inc > 2480000000.0 OR Income_Statement.Exch_Gain_Inc < 459000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me all instances of loss on disposal of fixed assets, intangible assets, and other long-term assets and cash outflows from operating activities for which the loss is greater than -6000000.0.",
    "query": "SELECT Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec , Cash_Flow_Statement.Op_CF_Out_Sub FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec > -6000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the values of net increase in customer loans and advances in cash flow statement.",
    "query": "SELECT Cash_Flow_Statement.Cust_Loans_Net_Inc FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest non-operating income?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Non_Op_Rev DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the operating profit along with the number of records for each operating profit value, sorted in ascending order of the count of records.",
    "query": "SELECT Income_Statement.Oper_Profit , COUNT (*) FROM Income_Statement GROUP BY Income_Statement.Oper_Profit ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes of the three records with the highest values of net cash received from disposal of fixed assets, intangible assets, and other long-term assets.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Disposal_Assets DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the value of dividend distribution and profit payment that has the fewest number of records?",
    "query": "SELECT Cash_Flow_Statement.Distribute_Dividends_Profits FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Distribute_Dividends_Profits ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the highest operating profit.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Oper_Profit DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either the stock name of China Mingsheng Bank or an assets impairment loss value of 230000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Income_Statement.Assets_Imp_Loss = 230000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me any cash flow statement net income value that appears exactly once.",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Net_Income FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.CF_Stmt_Net_Income HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the maximum, minimum and average value of cash and deposits with central bank across all records?",
    "query": "SELECT MAX (Balance_Sheet.Cash_CB) , MIN (Balance_Sheet.Cash_CB), AVG (Balance_Sheet.Cash_CB) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have operating expenses exceeding 64652000000.0 and convertible corporate bonds maturing within one year greater than 9665640917?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oper_Exp > 64652000000.0 AND Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y > 9665640917"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have net cash flow generated from operating activities greater than 48486000000.0 and net cash received from disposal of fixed assets, intangible assets, and other long-term assets greater than 920000000.0?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Net_CF_Op > 48486000000.0 AND Cash_Flow_Statement.Cash_Disposal_Assets > 920000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the eight least frequent non-operating revenue values in our records.",
    "query": "SELECT Income_Statement.Non_Op_Rev FROM Income_Statement GROUP BY Income_Statement.Non_Op_Rev ORDER BY COUNT (*) ASC LIMIT 8"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all the unique values of diluted earnings per share in the income statement.",
    "query": "SELECT distinct(Income_Statement.Diluted_EPS) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which cash equivalents opening balance have at least 4 records with closing balance larger than 21163428610.0?",
    "query": "SELECT Cash_Flow_Statement.Cash_Begin_Period FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Cash_Eq_End_Period > 21163428610.0 GROUP BY Cash_Flow_Statement.Cash_Begin_Period HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of top three stocks with the highest closing balance of cash equivalents.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Final_Cash_Equiv DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or have investment income from associates and joint ventures equal to 31428654111.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Income_Statement.Inv_Inc_Assoc_JV = 31428654111.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the two securities with the highest operating profit.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Oper_Profit DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have closing balance of cash greater than 71774000000.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_End_Period > 71774000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "fetch all unique values of cash paid for the purchase and construction of fixed assets, intangible assets, and other long-term assets in our records.",
    "query": "SELECT distinct(Cash_Flow_Statement.Cash_Pay_Assets) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or received other cash related to investment activities equal to 503000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Cash_Flow_Statement.Recv_Other_Invest = 503000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with stock code 600016.SH or an asset impairment loss of 150000000.0 do we have?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Income_Statement.Assets_Imp_Loss = 150000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each company, i want to know how many records and how many different loss on disposal of fixed assets values do we have, along with their name.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the investment losses and net increase in borrowings from the central bank for the records where the investment loss is less than 1494406973.0.",
    "query": "SELECT Cash_Flow_Statement.Investment_Loss , Cash_Flow_Statement.Net_Inc_Borrowings_CB FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Investment_Loss < 1494406973.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the information about records with negative paid-in capital.",
    "query": "SELECT * FROM Balance_Sheet WHERE Balance_Sheet.Paid_Up_Cap < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the net profit attributable to the owner of the parent company and other business costs for records where net profit attributable to the owner of the parent company is greater than 23777000000.0.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit , Income_Statement.Oth_Biz_Costs FROM Income_Statement WHERE Income_Statement.Attr_Parent_Net_Profit > 23777000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the purchase of resale financial assets and trading financial assets with the highest five purchase of resale financial assets values.",
    "query": "SELECT Balance_Sheet.Buyback_FAs , Balance_Sheet.Trad_FAs FROM Balance_Sheet ORDER BY Balance_Sheet.Buyback_FAs DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the names of stocks with debt repayment less than or equal to 530375000000.0, sorted in descending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Repay_Debt <= 530375000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock names and estimated liabilities of all records, sorted by the investment in real estate in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Est_Liab FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Inv_Real_Estate DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the exchange gains value that appears most frequently?",
    "query": "SELECT Income_Statement.Exch_Gain_Inc FROM Income_Statement GROUP BY Income_Statement.Exch_Gain_Inc ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, show the stock code itself, the number of records with minority interest (income/loss), and the total number of records.",
    "query": "SELECT Basic_Info.Stk_Code , count(DISTINCT Income_Statement.Minor_Int_Inc_Loss) , count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Huaxia Bank or have an interest income of 62213781000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Income_Statement.Int_Inc = 62213781000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the two companies with the highest trading financial assets.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Trad_FAs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the company name of the record with the highest number of occurrences?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities code of records whose hold-to-maturity investment is not equal to 11040375984.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Held_Mat_Invest != 11040375984"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock names and the number of records for each stock, sorted in ascending order of the record counts.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me all the total profits that have at least four records with long-term amortization values greater than 26443266996.0.",
    "query": "SELECT Income_Statement.Tot_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Longterm_Amortization > 26443266996.0 GROUP BY Income_Statement.Tot_Profit HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the final cash equivalents value that appears the least number of times.",
    "query": "SELECT Cash_Flow_Statement.Final_Cash_Equiv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Final_Cash_Equiv ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the operating expenses and cash paid for assets of each record.",
    "query": "SELECT Income_Statement.Oper_Exp , Cash_Flow_Statement.Cash_Pay_Assets FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of the top three securities with the highest capital reserves.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Cap_Reserves DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have general risk preparation equal to 48747000000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Gen_Risk_Res = 48747000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the decrease in deferred income tax assets values that appeared at least 3 times.",
    "query": "SELECT Cash_Flow_Statement.DIT_Asset_Reduction FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.DIT_Asset_Reduction HAVING COUNT (*) >= 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock name and taxes and fees payable of each record, sorted by available-for-sale financial assets in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Tax_Pay FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Avail_Sale_FAs DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average total owner's equity for each value of financial assets sold for repurchase.",
    "query": "SELECT avg(Balance_Sheet.Tot_Own_Eq) , Balance_Sheet.Sell_Rep_FAs FROM Balance_Sheet GROUP BY Balance_Sheet.Sell_Rep_FAs"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and the count of different values of loss on scrapping of fixed assets for each stock.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Cash_Flow_Statement.Fixed_Asset_Scrap_Loss) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the securities codes of records that have a different opening balance of cash than 128305000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Begin_Period != 128305000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock names of records whose assets impairment loss is not equal to 13527799084.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Assets_Imp_Loss != 13527799084.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the total owner's equity value that has the highest frequency of occurrence in the records.",
    "query": "SELECT Balance_Sheet.Tot_Own_Eq FROM Balance_Sheet GROUP BY Balance_Sheet.Tot_Own_Eq ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the name of stocks and the count of unique operating revenues for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Income_Statement.Oper_Rev) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the securities code of any records that have a different value of total liabilities and owner's equity from 8932519000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Liab_Own_Eq != 8932519000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the operating receivables reduction and loss from changes in fair value for the top 5 records with the largest reduction in operating receivables.",
    "query": "SELECT Cash_Flow_Statement.Oper_Receivables_Decrease , Cash_Flow_Statement.Fair_Value_Change_Loss FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Oper_Receivables_Decrease DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Bank of Jiangsu or have total comprehensive income of 13404000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Income_Statement.Tot_Compre_Inc = 13404000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all fair value change losses and cash outflows from operating activities for records with fair value change losses less than -2462319000.0.",
    "query": "SELECT Cash_Flow_Statement.Fair_Value_Change_Loss , Cash_Flow_Statement.Op_CF_Out_Sub FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Fair_Value_Change_Loss < -2462319000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest diluted earnings per share?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Diluted_EPS DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the handling fees and commission expenses for individuals whose income from changes in fair value is more than 10, grouped by the handling fees and commission expenses?",
    "query": "SELECT Income_Statement.Fee_Com_Exp FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Exp HAVING sum(Income_Statement.FV_Change_Inc) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, provide me with the count of records that have non-operating expenses exceeding 42892000.0, along with the stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Non_Op_Exp > 42892000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the highest and lowest values of assets impairment loss in our data?",
    "query": "SELECT MAX (Income_Statement.Assets_Imp_Loss) , MIN (Income_Statement.Assets_Imp_Loss) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the highest, lowest, and average value of intangible assets across all records.",
    "query": "SELECT MAX (Balance_Sheet.Intang_Assets) , MIN (Balance_Sheet.Intang_Assets), AVG (Balance_Sheet.Intang_Assets) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock code where the deferred tax assets are over 56977000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Def_IT_Assets > 56977000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have operating payables increase equal to either 321269969000.0 or 150890000000.0?",
    "query": "SELECT COUNT (*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Oper_Payables_Increase = 321269969000.0 OR Cash_Flow_Statement.Oper_Payables_Increase = 150890000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the lending funds of all records whose total owner's equity lies between 626691000000.0 and 985913000000.0.",
    "query": "SELECT Balance_Sheet.Lending_Funds FROM Balance_Sheet WHERE Balance_Sheet.Tot_Own_Eq BETWEEN 626691000000.0 AND 985913000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average cash and deposits with central bank, the minimum lending funds and the minimum trading financial assets across all records.",
    "query": "SELECT AVG (Balance_Sheet.Cash_CB) , MIN (Balance_Sheet.Lending_Funds), MIN (Balance_Sheet.Trad_FAs) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have opening balance of cash equivalents less than or equal to 38168607483.0, sorted by their names in descending order?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Eq_Begin_Period <= 38168607483.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which surplus reserves value appeared only once?",
    "query": "SELECT Balance_Sheet.Sur_Reserves FROM Balance_Sheet GROUP BY Balance_Sheet.Sur_Reserves HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the net profit attributable to the owner of the parent company for records with missing net profit value in the cash flow statement?",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Net_Income IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which companies have only one record in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of the stock, cash and deposits with central bank, and payable employee compensation for each record.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Cash_CB , Balance_Sheet.Emp_Comp_PAY FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the stock name \"Huaxia Bank\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"Huaxia Bank\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the name of the stocks whose tax and fees payable is not equal to 17577000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tax_Pay != 17577000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the minimum payable employee compensation for each value of minority shareholders' equity.",
    "query": "SELECT MIN (Balance_Sheet.Emp_Comp_PAY) , Balance_Sheet.Minor_Int_Eq FROM Balance_Sheet GROUP BY Balance_Sheet.Minor_Int_Eq"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities have exactly 9 records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) = 9"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600000.SH or net increase in borrowing funds from other financial institutions equal to 39176273386?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Cash_Flow_Statement.Net_Inc_IB_Borrowings = 39176273386"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the tax and fees payable value for records with minority shareholders' equity between 7437337000.0 and 7437337000.0?",
    "query": "SELECT Balance_Sheet.Tax_Pay FROM Balance_Sheet WHERE Balance_Sheet.Minor_Int_Eq BETWEEN 7437337000.0 AND 7437337000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the cash paid for interest, handling fees, and commissions of the record with the highest frequency?",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Int_Fees_Com FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Int_Fees_Com ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of two companies with the highest translation difference of foreign currency statements.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Exch_Diff_Cash DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have operating expenses before 1980?",
    "query": "SELECT count(*) FROM Income_Statement WHERE Income_Statement.Oper_Exp < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average other business income, the minimum net profit attributable to the owner of the parent company, and the minimum total profit across all records?",
    "query": "SELECT AVG (Income_Statement.Oth_Biz_Inc) , MIN (Income_Statement.Attr_Parent_Net_Profit), MIN (Income_Statement.Tot_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net increase in customer loans and advances, sorted by cash paid to and on behalf of employees in descending order.",
    "query": "SELECT Cash_Flow_Statement.Cust_Loans_Net_Inc FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cash_Pay_Emp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of the stock and the noble metal value for the records with at least 5 purchase of resale financial assets.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Prec_Metals FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Balance_Sheet.Buyback_FAs HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the cash paid to and on behalf of employees that exceed 5344056000.0, along with the corresponding investment income.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Emp , Income_Statement.Inv_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Emp > 5344056000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average net profit, the minimum operating revenue and the minimum diluted earnings per share of all the records?",
    "query": "SELECT AVG (Income_Statement.Net_Profit) , MIN (Income_Statement.Oper_Rev), MIN (Income_Statement.Diluted_EPS) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the interest income value with the least frequency in our data.",
    "query": "SELECT Income_Statement.Int_Inc FROM Income_Statement GROUP BY Income_Statement.Int_Inc ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the top 5 companies with the most records in the database.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to stock 600036.SH or have an \"other\" value of 41995235271?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Cash_Flow_Statement.Other = 41995235271"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock names whose net increase in deposits with central bank and interbank funds is less than or equal to 14594000000.0, sorted in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CenBank_Interbank_Net_Inc <= 14594000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return all columns of records in the cash flow statement.",
    "query": "SELECT * FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock that has derivative financial assets value greater than 70837000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Deriv_Assets > 70837000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the surplus reserves values that have a total owner's equity attributable to the parent company greater than 10.",
    "query": "SELECT Balance_Sheet.Sur_Reserves FROM Balance_Sheet GROUP BY Balance_Sheet.Sur_Reserves HAVING sum(Balance_Sheet.Own_Eq_Attr_Parent) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks whose intangible assets value is not equal to 5739000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Intang_Assets != 5739000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each record that does not have a value for income from changes in fair value, give me the value of exchange gains.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc FROM Income_Statement WHERE Income_Statement.FV_Change_Inc IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the securities code and total comprehensive income of each record, sorted by net interest income in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Tot_Compre_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Net_Int_Inc DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top two stocks with the highest income from changes in fair value.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.FV_Change_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve all the names of securities from the records table.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three companies have the highest undistributed profits?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Undist_Profits DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there with either a stock code of 600919.SH or a general risk preparation value of 48747000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600919.SH' OR Balance_Sheet.Gen_Risk_Res = 48747000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock name of \"Shanghai Pudong Development Bank\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Name = \"Shanghai Pudong Development Bank\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the name of the stocks where operating expenses is not equal to 87581000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Exp != 87581000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of two stocks with the highest debt repayment.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Repay_Debt DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities have appeared less than 4 times in our records?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) < 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, show me the count of records with investment income greater than 3656000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Inv_Inc > 3656000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have surplus reserves exceeding 188929000000.0 for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Sur_Reserves > 188929000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock code with cash outflows from financing activities more than 393612997000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fin_CF_Out_Sub > 393612997000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have deferred tax assets exceeding 64585000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Def_IT_Assets > 64585000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display all the information about records with negative noble metal value.",
    "query": "SELECT * FROM Balance_Sheet WHERE Balance_Sheet.Prec_Metals < 0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock name of Shanghai Pudong Development Bank or an interbank and other financial institutions deposit value of 783188000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Balance_Sheet.IB_Dep_Oth_FIs = 783188000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the asset impairment provision and the sum of opening balance of cash from cash flow statement.",
    "query": "SELECT Cash_Flow_Statement.Asset_Impairment_Dec , SUM (Cash_Flow_Statement.Cash_Begin_Period) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Asset_Impairment_Dec"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a Stk_Code of 600016.SH or an intangible assets value of 548886000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Balance_Sheet.Intang_Assets = 548886000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the financial cash outflow subtotal of the record with the least frequency in the table.",
    "query": "SELECT Cash_Flow_Statement.Fin_CF_Out_Sub FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fin_CF_Out_Sub ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have fixed assets value greater than 50856000000.0 for each company?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Fix_Assets > 50856000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list all business and management fees values that appear at least 5 times.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Income_Statement GROUP BY Income_Statement.Gen_n_Admin_Exps HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of each stock and their corresponding amortization of long-term deferred expenses.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Longterm_Amortization FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count how many records have cash paid for interest, handling fees, and commissions greater than 26806028000.0 for each stock name.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Pay_Int_Fees_Com > 26806028000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the investment losses and received investments from cash flow statements where the investment losses are less than -11281000000.0.",
    "query": "SELECT Cash_Flow_Statement.Investment_Loss , Cash_Flow_Statement.Recv_Investment FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Investment_Loss < -11281000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average net cash flow generated from operating activities for each value of financial expenses in cash flow statement.",
    "query": "SELECT avg(Cash_Flow_Statement.IM_NCF_Oper_Activities) , Cash_Flow_Statement.CF_Stmt_Fin_Expenses FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.CF_Stmt_Fin_Expenses"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Merchants Bank or have a capital converted from debt of 7528101683?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'China Merchants Bank' OR Cash_Flow_Statement.Debt_Converted_Capital = 7528101683"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the investment income and investment loss of records that have at least 5 instances of loss on scrapping fixed assets.",
    "query": "SELECT Cash_Flow_Statement.Investment_Income , Cash_Flow_Statement.Investment_Loss FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Fixed_Asset_Scrap_Loss HAVING COUNT (*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the securities code and lending funds of all records, sorted by noble metal in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Lending_Funds FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Prec_Metals DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the name of each stock and the number of records associated with each stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the operating expenses that have occurred in at least 4 records where other business income is greater than 1283000000.0.",
    "query": "SELECT Income_Statement.Oper_Exp FROM Income_Statement WHERE Income_Statement.Oth_Biz_Inc > 1283000000.0 GROUP BY Income_Statement.Oper_Exp HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average other cash payments related to financing activities for each diluted earnings per share value.",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_Pay_Fin_Other) , Income_Statement.Diluted_EPS FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Diluted_EPS"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the three stock codes with the highest borrowing funds from other financial institutions.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Bor_Funds_Oth_FIs DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a net profit value of 76437000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Net_Profit = 76437000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the names of the top three securities with the highest cash received from absorbing investments.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Absorb_Investment DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest income from changes in fair value?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.FV_Change_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the general and administrative expenses of records whose subtotal of cash inflows from financing activities lie between 100645000000.0 and 506253000000.0.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fin_CF_In_Sub BETWEEN 100645000000.0 AND 506253000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return a list of all the stock names in the records.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records with net income from handling fees and commissions more than 10836000000.0 do we have for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Net_Inc > 10836000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the total number of records and the number of different closing balances of cash and cash equivalents for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.Cash_End_Period) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which company has the most records in our data?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net increase in cash and cash equivalents values from cash flow statements that have at least four records with net profit in cash flow statement exceeding 12365000000.0.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Cash_Equiv FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.CF_Stmt_Net_Income > 12365000000.0 GROUP BY Cash_Flow_Statement.Net_CF_Cash_Equiv HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average income tax expenses, the minimum other comprehensive income and the minimum non operating revenue in all records?",
    "query": "SELECT AVG (Income_Statement.Income_Tax_Exp) , MIN (Income_Statement.Oth_Compre_Inc), MIN (Income_Statement.Non_Op_Rev) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the inventory decrease and loss on disposal of non-current assets values for records with inventory decrease less than 32207893333.",
    "query": "SELECT Cash_Flow_Statement.Inventory_Decrease , Income_Statement.Loss_Disposal_Nonc_Assets FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inventory_Decrease < 32207893333"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes in ascending order of their frequency in records.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have an interest income exceeding 150294000000.0 and an investment income exceeding 20864000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Int_Inc > 150294000000.0 AND Cash_Flow_Statement.Investment_Income > 20864000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose dividend and profit distribution does not equal to 11854000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Distribute_Dividends_Profits != 11854000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest net profit attributable to the owner of the parent company?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Attr_Parent_Net_Profit DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of all stocks whose decrease in deferred income tax assets does not equal to -1957000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.DIT_Asset_Reduction != -1957000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the names of the top three stocks with the highest long term equity investments.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.LT_Eq_Invest DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the names of stocks whose investment income is less than or equal to 15807087000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Investment_Income <= 15807087000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes of records with income from changes in fair value not equal to 1814000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.FV_Change_Inc != 1814000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock name occurs the most frequently?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for every record with a sum of dividends and profits paid by subsidiaries to minority shareholders greater than 10, give me the value of other business income.",
    "query": "SELECT Income_Statement.Oth_Biz_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Oth_Biz_Inc HAVING sum(Cash_Flow_Statement.Subsidiary_Pay_Minority) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the general and administrative expenses for all records where the interest income is null.",
    "query": "SELECT Income_Statement.Gen_n_Admin_Exps FROM Income_Statement WHERE Income_Statement.Int_Inc IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the income from changes in fair value in each record where the income from changes in fair value is greater than 4223000000.0?",
    "query": "SELECT Income_Statement.FV_Change_Inc , Income_Statement.Int_Inc FROM Income_Statement WHERE Income_Statement.FV_Change_Inc > 4223000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the names of stocks that have at least 13 records in the database.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) >= 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the count of records for each stock name, sorted by count in ascending order.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the number of records and the stock names for each company whose total owner's equity is greater than 626691000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Own_Eq > 626691000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have a total profit different from 26567000000.0?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Tot_Profit != 26567000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have a subtotal of cash inflows from investment activities greater than 931722450000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inv_CF_In_Sub > 931722450000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the subsidiary absorbing minority shareholder investments and closing balance of cash equivalents for the top five records with the highest values of subsidiary absorbing minority shareholder investments.",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Absorb_Minority , Cash_Flow_Statement.Final_Cash_Equiv FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Subsidiary_Absorb_Minority DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock code, show me the number of records that have taxes and surcharges above 1043000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tax_n_Surs > 1043000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return me the two stock codes with the highest values of minor interest (income/loss).",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Minor_Int_Inc_Loss DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top two stocks with the highest translation difference of foreign currency statements.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Exch_Diff_Cash DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Mingsheng Bank or have loans and advances of 6096979000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Balance_Sheet.Loans_Adv = 6096979000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks where the non-operating expenses are less than or equal to 37000000.0, and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Non_Op_Exp <= 37000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have other assets either equal to 43087000000.0 or 145910000000.0?",
    "query": "SELECT COUNT (*) FROM Balance_Sheet WHERE Balance_Sheet.Oth_Assets = 43087000000.0 OR Balance_Sheet.Oth_Assets = 145910000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stocks have 14 or more records in the database?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code HAVING COUNT (*) >= 14"
  },
  {
    "db_id": "Bank_Financials",
    "question": "retrieve the deferred tax liability value from balance sheet records where capital reserves lie between 32203742000.0 and 32203742000.0.",
    "query": "SELECT Balance_Sheet.Def_IT_Liab FROM Balance_Sheet WHERE Balance_Sheet.Cap_Reserves BETWEEN 32203742000.0 AND 32203742000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of securities and their corresponding net cash flow generated from financing activities, sorted by the value of net cash received from disposal of fixed assets, intangible assets, and other long-term assets in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Net_CF_Fin FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Cash_Disposal_Assets DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the borrowing from the Central Bank value that appears more than once.",
    "query": "SELECT Balance_Sheet.Bor_CB FROM Balance_Sheet GROUP BY Balance_Sheet.Bor_CB HAVING count(*) > 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top three stocks with the highest total profit.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Tot_Profit DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the other comprehensive income values along with the number of records for each value, sorted by the number of records in ascending order.",
    "query": "SELECT Income_Statement.Oth_Compre_Inc , COUNT (*) FROM Income_Statement GROUP BY Income_Statement.Oth_Compre_Inc ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the securities codes of all records with financial expenses less than or equal to 41100351237, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.CF_Stmt_Fin_Expenses <= 41100351237 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest taxes and surcharges?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Tax_n_Surs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have net interest income equal to either 27177219000.0 or 108996000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Net_Int_Inc = 27177219000.0 OR Income_Statement.Net_Int_Inc = 108996000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have cash equivalents closing balance greater than 48502997113.0 for each stock name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cash_Eq_End_Period > 48502997113.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of securities codes and non-operating revenue in descending order of net increase in borrowing funds from other financial institutions.",
    "query": "SELECT Basic_Info.Stk_Code , Income_Statement.Non_Op_Rev FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_Inc_IB_Borrowings DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three securities have the highest investment in real estate?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Inv_Real_Estate DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, count the number of different general risk preparation values.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Balance_Sheet.Gen_Risk_Res) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the least frequent value of lending funds in balance sheet records?",
    "query": "SELECT Balance_Sheet.Lending_Funds FROM Balance_Sheet GROUP BY Balance_Sheet.Lending_Funds ORDER BY COUNT (*) ASC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which total comprehensive income values only appear once in the records?",
    "query": "SELECT Income_Statement.Tot_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Tot_Compre_Inc HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average value of derivative financial liabilities, the minimum value of accounts receivable investment, and the minimum value of deferred tax liabilities across all records?",
    "query": "SELECT AVG (Balance_Sheet.Deriv_Liab) , MIN (Balance_Sheet.Recv_Invest), MIN (Balance_Sheet.Def_IT_Liab) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of all stocks that have sell and repurchase financial assets value not equal to 54335023000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Sell_Rep_FAs != 54335023000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the different values of loss on disposal of non current assets and the count of records for each value.",
    "query": "SELECT Income_Statement.Loss_Disposal_Nonc_Assets , COUNT(*) FROM Income_Statement GROUP BY Income_Statement.Loss_Disposal_Nonc_Assets"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600016.SH or received other cash related to investment activities equal to 10266052498.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600016.SH' OR Cash_Flow_Statement.Recv_Other_Invest = 10266052498.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the average total owner's equity, the minimum hold-to-maturity investment and the minimum interest payable for all records.",
    "query": "SELECT AVG (Balance_Sheet.Tot_Own_Eq) , MIN (Balance_Sheet.Held_Mat_Invest), MIN (Balance_Sheet.Int_Pay) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average interest expenses for each value of total comprehensive income attributable to shareholders of the parent company.",
    "query": "SELECT avg(Income_Statement.Int_Exp) , Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the net cash flow generated from financing activities with the highest number of records?",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Fin FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Net_CF_Fin ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the values of loss on scrapping of fixed assets, fee and commission income, and exchange gains for each record.",
    "query": "SELECT Cash_Flow_Statement.Fixed_Asset_Scrap_Loss , Income_Statement.Fee_Com_Inc , Income_Statement.Exch_Gain_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average closing balance of cash equivalents for each value of cash paid for interest, handling fees, and commissions.",
    "query": "SELECT avg(Cash_Flow_Statement.Cash_Eq_End_Period) , Cash_Flow_Statement.Cash_Pay_Int_Fees_Com FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Int_Fees_Com"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the values of the \"other\" column in the cash flow statement table as a list.",
    "query": "SELECT Cash_Flow_Statement.Other FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the subsidiary payments to minority shareholders where there are at least 4 records with fee and commission income exceeding 6044000000.0.",
    "query": "SELECT Cash_Flow_Statement.Subsidiary_Pay_Minority FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Inc > 6044000000.0 GROUP BY Cash_Flow_Statement.Subsidiary_Pay_Minority HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of the two companies with the highest interbank deposits.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.IB_Deposits DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have operating expenses greater than 87581000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Oper_Exp > 87581000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "count the occurrences of financial expenses in cash flow statement for each record, and sort them by the number of occurrences.",
    "query": "SELECT Cash_Flow_Statement.CF_Stmt_Fin_Expenses , COUNT (*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.CF_Stmt_Fin_Expenses ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "from the records, find me the stock codes whose capital reserves are less than or equal to 32203742000.0, and sort them in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Cap_Reserves <= 32203742000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have exchange gains of either 24366000.0 or 459000000.0?",
    "query": "SELECT COUNT (*) FROM Income_Statement WHERE Income_Statement.Exch_Gain_Inc = 24366000.0 OR Income_Statement.Exch_Gain_Inc = 459000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the cash ending balance for records with comprehensive income attributable to minority shareholders between 808000000.0 and 251000000.0?",
    "query": "SELECT Cash_Flow_Statement.Cash_End_Period FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc BETWEEN 808000000.0 AND 251000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock codes of all records whose operating revenue is less than or equal to 178460000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Oper_Rev <= 178460000000.0 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each stock, show me the number of records that have derivative financial liabilities above 41844000000.0 along with their stock names.",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Deriv_Liab > 41844000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the two securities codes with the highest deposits from interbank and other financial institutions.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.IB_Dep_Oth_FIs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of stocks whose fee and commission income is not equal to 3157221000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Inc != 3157221000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have interbank and other financial institutions deposits more than 783188000000.0 for each company name?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.IB_Dep_Oth_FIs > 783188000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the top two stocks with the highest bonds payable.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Bonds_PAY DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide the interest income and income from changes in fair value for records whose total comprehensive income attributable to minority shareholders is greater or less than 530000000.0.",
    "query": "SELECT Income_Statement.Int_Inc , Income_Statement.FV_Change_Inc FROM Income_Statement WHERE Income_Statement.Minor_Int_Shareholders_Compre_Inc > 530000000.0 OR Income_Statement.Minor_Int_Shareholders_Compre_Inc < 530000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock name, minor interest income/loss, and total profit for each record.",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Minor_Int_Inc_Loss , Income_Statement.Tot_Profit FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the different net profit attributable to the owner of the parent company and the count of records for each net profit value.",
    "query": "SELECT Income_Statement.Attr_Parent_Net_Profit , COUNT(*) FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Net_Profit"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have either the stock code 600000.SH or the investment income from associates and joint ventures equal to 31428654111.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Income_Statement.Inv_Inc_Assoc_JV = 31428654111.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities have more than 13 records in the database?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) > 13"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net interest income and investment income from associates and joint ventures for the records with net interest income less than 34151000000.0.",
    "query": "SELECT Income_Statement.Net_Int_Inc , Income_Statement.Inv_Inc_Assoc_JV FROM Income_Statement WHERE Income_Statement.Net_Int_Inc < 34151000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records do we have for each stock name where the net income from handling fees and commissions exceeds 10836000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Fee_Com_Net_Inc > 10836000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600036.SH or a net interest income of 60428000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600036.SH' OR Income_Statement.Net_Int_Inc = 60428000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the name of stocks whose total comprehensive income attributable to shareholders of the parent company is not equal to 13153000000.0.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Attr_Parent_Shareholders_Compre_Inc != 13153000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average exchange gains for each net interest income value.",
    "query": "SELECT avg(Income_Statement.Exch_Gain_Inc) , Income_Statement.Net_Int_Inc FROM Income_Statement GROUP BY Income_Statement.Net_Int_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the names of stocks whose net profit is no more than 76437000000.0, in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Net_Profit <= 76437000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have investment income from associates and joint ventures exceeding 31428654111.0 for each stock?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Inv_Inc_Assoc_JV > 31428654111.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the three securities with the highest total profit.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Tot_Profit DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are in the database?",
    "query": "SELECT count(*) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the maximum and minimum value of total liabilities across all records?",
    "query": "SELECT MAX (Balance_Sheet.Tot_Liab) , MIN (Balance_Sheet.Tot_Liab) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net cash flow generated from operating activities for individuals whose diluted earnings per share surpasses 10, grouped by net cash flow from operating activities.",
    "query": "SELECT Cash_Flow_Statement.Net_CF_Op FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Cash_Flow_Statement.Net_CF_Op HAVING sum(Income_Statement.Diluted_EPS) > 10"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the net interest income and the total interest expenses of each record.",
    "query": "SELECT Income_Statement.Net_Int_Inc , SUM (Income_Statement.Int_Exp) FROM Income_Statement GROUP BY Income_Statement.Net_Int_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the interest income and the total cash paid for assets from the records.",
    "query": "SELECT Income_Statement.Int_Inc , SUM (Cash_Flow_Statement.Cash_Pay_Assets) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Income_Statement.Int_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the cash paid for investment for all records where the cash outflows from financing activities is null.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Invest FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Fin_CF_Out_Sub IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average total assets, the minimum long term equity investment and the minimum value of other assets in our data?",
    "query": "SELECT AVG (Balance_Sheet.Tot_Assets) , MIN (Balance_Sheet.LT_Eq_Invest), MIN (Balance_Sheet.Oth_Assets) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the average and maximum purchase of resale financial assets value in all records?",
    "query": "SELECT avg(Balance_Sheet.Buyback_FAs), max(Balance_Sheet.Buyback_FAs) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the top three securities with the highest income tax expenses.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Income_Tax_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to China Mingsheng Bank or have other liabilities equal to 19902328000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'China Mingsheng Bank' OR Balance_Sheet.Oth_Liab = 19902328000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of the two companies with the highest income from changes in fair value.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.FV_Change_Inc DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with all the details of the record with the highest fee and commission income.",
    "query": "SELECT * FROM Income_Statement ORDER BY Income_Statement.Fee_Com_Inc DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock has a different net cash flow generated from operating activities value than 48486000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.IM_NCF_Oper_Activities != 48486000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the average and maximum value of cash received from absorbing investments in our data.",
    "query": "SELECT avg(Cash_Flow_Statement.Absorb_Investment), max(Cash_Flow_Statement.Absorb_Investment) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Shanghai Pudong Development Bank or have a lending funds value of 87641076000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Shanghai Pudong Development Bank' OR Balance_Sheet.Lending_Funds = 87641076000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the stock codes of the two securities with the highest total owner's equity.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Tot_Own_Eq DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the count of records for each value of impact of exchange rate changes on cash and cash equivalents?",
    "query": "SELECT Cash_Flow_Statement.FX_Rate_Change_Cash , COUNT (*) FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.FX_Rate_Change_Cash ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the names of the two securities with the highest net increase in borrowing funds from other financial institutions.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Net_Inc_IB_Borrowings DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Huaxia Bank or have an income tax expense of exactly 4807695000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Name = 'Huaxia Bank' OR Income_Statement.Income_Tax_Exp = 4807695000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum translation difference of foreign currency statements for each record.",
    "query": "SELECT avg(Balance_Sheet.Exch_Diff_Cash), max(Balance_Sheet.Exch_Diff_Cash) FROM Balance_Sheet"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes and paid-in capital of all records, sorted by the interbank and other financial institutions deposits in descending order.",
    "query": "SELECT Basic_Info.Stk_Code , Balance_Sheet.Paid_Up_Cap FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.IB_Dep_Oth_FIs DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the net increase in customer deposits and interbank deposits values that have at least 4 records with a minority interest loss greater than 251000000.0.",
    "query": "SELECT Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Minor_Int_Inc_Loss > 251000000.0 GROUP BY Cash_Flow_Statement.Net_Inc_Cust_Deposits_IB_Deposits HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find all the stock codes whose net increase in customer loans and advances is not equal to 147416667000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cust_Loans_Net_Inc != 147416667000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose subtotal of cash inflows from financing activities is 612774000000.0 or less, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fin_CF_In_Sub <= 612774000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the number of records for each stock code that has deposit absorption value greater than 8098272000000.0.",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Acc_Deposits > 8098272000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest and lowest value of loss on disposal of fixed assets, intangible assets, and other long-term assets in our data?",
    "query": "SELECT MAX (Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec) , MIN (Cash_Flow_Statement.Loss_Disposal_Fixed_Assets_Dec) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the five records with the highest cash outflows from financing activities and their corresponding non-operating expenses?",
    "query": "SELECT Cash_Flow_Statement.Fin_CF_Out_Sub , Income_Statement.Non_Op_Exp FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Fin_CF_Out_Sub DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the values of assets impairment loss that have appeared in at least 5 records?",
    "query": "SELECT Income_Statement.Assets_Imp_Loss FROM Income_Statement GROUP BY Income_Statement.Assets_Imp_Loss HAVING count(*) >= 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "tell me the number of records for each stock name, sorted by the count of stock name.",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (*) FROM Basic_Info GROUP BY Basic_Info.Stk_Name ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the comprehensive income attributable to shareholders of the parent company and the number of records for each value, sorted by the frequency of comprehensive income in ascending order.",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc , COUNT (*) FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc ORDER BY COUNT (*)"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me all the values for cash payments related to financing activities and cash received from subsidiaries absorbing minority shareholder investments.",
    "query": "SELECT Cash_Flow_Statement.Cash_Pay_Fin_Other , Cash_Flow_Statement.Subsidiary_Absorb_Minority FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the average and maximum net cash flow generated from financing activities for each record.",
    "query": "SELECT avg(Cash_Flow_Statement.Net_CF_Fin), max(Cash_Flow_Statement.Net_CF_Fin) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you find the minimum dividends and profits paid by subsidiaries to minority shareholders for each closing balance of cash?",
    "query": "SELECT MIN (Cash_Flow_Statement.Subsidiary_Pay_Minority) , Cash_Flow_Statement.Cash_End_Period FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_End_Period"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two companies have the highest fixed assets in their records?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Fix_Assets DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which companies have the name containing the phrase 'Huaxia Bank'?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%Huaxia Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the top five income tax expenses values among the most frequent records?",
    "query": "SELECT Income_Statement.Income_Tax_Exp FROM Income_Statement GROUP BY Income_Statement.Income_Tax_Exp ORDER BY COUNT (*) DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the name of the company that appears exactly six times in the data.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info GROUP BY Basic_Info.Stk_Name HAVING COUNT (*) = 6"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the most frequent closing balance of cash equivalents value in records?",
    "query": "SELECT Cash_Flow_Statement.Final_Cash_Equiv FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Final_Cash_Equiv ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a cash inflow from investment activities smaller than 1980?",
    "query": "SELECT count(*) FROM Cash_Flow_Statement WHERE Cash_Flow_Statement.Inv_CF_In_Sub < 1980"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records does each stock have if their surplus reserves exceed 94985000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Sur_Reserves > 94985000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the securities code of records with total profit not equal to 22433659000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Tot_Profit != 22433659000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "identify the estimated liabilities with only one record.",
    "query": "SELECT Balance_Sheet.Est_Liab FROM Balance_Sheet GROUP BY Balance_Sheet.Est_Liab HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which securities contain the phrase 'China Mingsheng Bank' in their name?",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info WHERE Basic_Info.Stk_Name LIKE '%China Mingsheng Bank%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock code and the count of unique investment real estate values for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , COUNT (DISTINCT Balance_Sheet.Inv_Real_Estate) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find the stock codes of records that have income tax expenses different from 775000000.0.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Income_Tax_Exp != 775000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me with the stock name, the number of distinct opening balances of cash equivalents, and the total number of records for each stock.",
    "query": "SELECT Basic_Info.Stk_Name , count(DISTINCT Cash_Flow_Statement.Cash_Eq_Begin_Period) , count(*) FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a stock code of 600000.SH or a value of 195000000.0 for the minority interest (income/loss)?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Basic_Info.Stk_Code = '600000.SH' OR Income_Statement.Minor_Int_Inc_Loss = 195000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records belong to Bank of Jiangsu or have trading financial liabilities equal to 14920000000.0?",
    "query": "SELECT count(*) FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Basic_Info.Stk_Name = 'Bank of Jiangsu' OR Balance_Sheet.Trad_Fin_Liab = 14920000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum basic earnings per share for all records.",
    "query": "SELECT avg(Income_Statement.Basic_EPS), max(Income_Statement.Basic_EPS) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the total comprehensive income and cash paid for investment of the top 5 records with the highest total comprehensive income.",
    "query": "SELECT Income_Statement.Tot_Compre_Inc , Cash_Flow_Statement.Cash_Pay_Invest FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Income_Statement.Tot_Compre_Inc DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have total owner's equity exceeding 721080000000.0 for each company?",
    "query": "SELECT count(*) , Basic_Info.Stk_Name FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Tot_Own_Eq > 721080000000.0 GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the values of issue bonds that appeared more than three times.",
    "query": "SELECT Cash_Flow_Statement.Issue_Bonds FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Issue_Bonds HAVING COUNT (*) > 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the names of stocks that have deferred income tax liabilities increase value less than or equal to 39371315080, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.DIT_Liability_Increase <= 39371315080 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "sort the list of stock names and cash paid for assets in descending order of reduction in operating receivables.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Cash_Pay_Assets FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Oper_Receivables_Decrease DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average loss on disposal of non current assets value in our data?",
    "query": "SELECT MAX (Income_Statement.Loss_Disposal_Nonc_Assets) , MIN (Income_Statement.Loss_Disposal_Nonc_Assets), AVG (Income_Statement.Loss_Disposal_Nonc_Assets) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "list the stock names whose cash inflow from investment activities subtotal is less than or equal to 893215000000.0, sorted in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Inv_CF_In_Sub <= 893215000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the unique values of payable employee compensation in our data?",
    "query": "SELECT Balance_Sheet.Emp_Comp_PAY FROM Balance_Sheet GROUP BY Balance_Sheet.Emp_Comp_PAY HAVING count(*) = 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which value of paid-in capital has the fewest number of records?",
    "query": "SELECT Balance_Sheet.Paid_Up_Cap FROM Balance_Sheet GROUP BY Balance_Sheet.Paid_Up_Cap ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the largest derivative financial liabilities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Deriv_Liab DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the smallest value of received investment for each cash paid for taxes?",
    "query": "SELECT MIN (Cash_Flow_Statement.Recv_Investment) , Cash_Flow_Statement.Cash_Pay_Taxes FROM Cash_Flow_Statement GROUP BY Cash_Flow_Statement.Cash_Pay_Taxes"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum net profit attributable to the owner of the parent company for each record.",
    "query": "SELECT avg(Income_Statement.Attr_Parent_Net_Profit), max(Income_Statement.Attr_Parent_Net_Profit) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many different basic earnings per share values are there for each stock name?",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Income_Statement.Basic_EPS) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which three securities have the highest expenses at handling fees and commissions?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Fee_Com_Exp DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which value of investment real estate has the highest frequency?",
    "query": "SELECT Balance_Sheet.Inv_Real_Estate FROM Balance_Sheet GROUP BY Balance_Sheet.Inv_Real_Estate ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks and their trading financial liabilities, sorted by interest payable in descending order.",
    "query": "SELECT Basic_Info.Stk_Name , Balance_Sheet.Trad_Fin_Liab FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code ORDER BY Balance_Sheet.Int_Pay DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock code is associated with records that do not have an exchange gain income of 2480000000.0?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Income_Statement.Exch_Gain_Inc != 2480000000.0"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the stock codes along with the count of records for each stock code.",
    "query": "SELECT Basic_Info.Stk_Code , count(*) FROM Basic_Info GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the two securities codes with the highest values of received other cash related to investment activities.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Recv_Other_Invest DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the distinct securities codes in our data.",
    "query": "SELECT distinct(Basic_Info.Stk_Code) FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the other liabilities value for each record that does not have a general risk preparation value.",
    "query": "SELECT Balance_Sheet.Oth_Liab FROM Balance_Sheet WHERE Balance_Sheet.Gen_Risk_Res IS NULL"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the fixed assets acquired through financing lease, sorted in descending order of cash paid to and on behalf of employees.",
    "query": "SELECT Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets FROM Cash_Flow_Statement ORDER BY Cash_Flow_Statement.Cash_Pay_Emp DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the top three securities with the largest assets impairment loss.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Assets_Imp_Loss DESC LIMIT 3"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which records have securities code containing '600036.SH'?",
    "query": "SELECT DISTINCT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600036.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records of each stock have net increase in customer loans and advances value more than 98383000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Cust_Loans_Net_Inc > 98383000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return the highest, lowest, and average value of dividends and profits paid by subsidiaries to minority shareholders across all records.",
    "query": "SELECT MAX (Cash_Flow_Statement.Subsidiary_Pay_Minority) , MIN (Cash_Flow_Statement.Subsidiary_Pay_Minority), AVG (Cash_Flow_Statement.Subsidiary_Pay_Minority) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what are the maximum, minimum and average values of net income from handling fees and commissions across all records?",
    "query": "SELECT MAX (Income_Statement.Fee_Com_Net_Inc) , MIN (Income_Statement.Fee_Com_Net_Inc), AVG (Income_Statement.Fee_Com_Net_Inc) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes whose fixed assets acquired through financing lease are less than or equal to 47615923168, sorted in descending order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Fin_Lease_Additions_Fixed_Assets <= 47615923168 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "provide me the stock codes of records whose loss on disposal of non current assets is no more than 29050967828, and sort them in descending alphabetical order.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Loss_Disposal_Nonc_Assets <= 29050967828 ORDER BY Basic_Info.Stk_Code DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average and maximum cash outflows from investment activities for all records.",
    "query": "SELECT avg(Cash_Flow_Statement.Inv_CF_Out_Sub), max(Cash_Flow_Statement.Inv_CF_Out_Sub) FROM Cash_Flow_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have a translation difference of foreign currency statements value above 49337805049 for each stock code?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Exch_Diff_Cash > 49337805049 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "return all columns in basic info records.",
    "query": "SELECT * FROM Basic_Info"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records are there for each stock code where the total owner's equity attributable to the parent company is greater than 613419000000.0?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Balance_Sheet ON Basic_Info.Stk_Code = Balance_Sheet.Stk_Code WHERE Balance_Sheet.Own_Eq_Attr_Parent > 613419000000.0 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records have the security code \"600036.SH\"?",
    "query": "SELECT count(*) FROM Basic_Info WHERE Basic_Info.Stk_Code = \"600036.SH\""
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the names of stocks whose closing balance of cash equivalents is less than or equal to 71774000000.0, sorted in descending order.",
    "query": "SELECT Basic_Info.Stk_Name FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Final_Cash_Equiv <= 71774000000.0 ORDER BY Basic_Info.Stk_Name DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two stocks have the highest tax and surcharges value?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code ORDER BY Income_Statement.Tax_n_Surs DESC LIMIT 2"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the interest receivable value that appears most frequently in the records?",
    "query": "SELECT Balance_Sheet.Int_Receiv FROM Balance_Sheet GROUP BY Balance_Sheet.Int_Receiv ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "for each company, how many distinct values of comprehensive income attributable to minority shareholders do we have?",
    "query": "SELECT Basic_Info.Stk_Name , COUNT (DISTINCT Income_Statement.Minor_Int_Shareholders_Compre_Inc) FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code GROUP BY Basic_Info.Stk_Name"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me the stock names and convertible corporate bonds maturing within one year for all records.",
    "query": "SELECT Basic_Info.Stk_Name , Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "give me the stock codes that contain the substring '600000.SH'.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600000.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which stock code has the highest frequency in our data?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info GROUP BY Basic_Info.Stk_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which value of total comprehensive income attributable to shareholders of the parent company has the fewest number of records?",
    "query": "SELECT Income_Statement.Attr_Parent_Shareholders_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Attr_Parent_Shareholders_Compre_Inc ORDER BY COUNT (*) LIMIT 1"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average interest income for each value of other comprehensive income.",
    "query": "SELECT avg(Income_Statement.Int_Inc) , Income_Statement.Oth_Compre_Inc FROM Income_Statement GROUP BY Income_Statement.Oth_Compre_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "get the total liabilities from records, sorted in descending order of treasury stock.",
    "query": "SELECT Balance_Sheet.Tot_Liab FROM Balance_Sheet ORDER BY Balance_Sheet.Treas_Stock DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "can you give me the stock name and the loss on disposal of non current assets in descending order of investment losses?",
    "query": "SELECT Basic_Info.Stk_Name , Income_Statement.Loss_Disposal_Nonc_Assets FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Investment_Loss DESC"
  },
  {
    "db_id": "Bank_Financials",
    "question": "how many records for each stock code have basic earnings per share higher than 1.09?",
    "query": "SELECT count(*) , Basic_Info.Stk_Code FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code WHERE Income_Statement.Basic_EPS > 1.09 GROUP BY Basic_Info.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "display the investment income and interest income of the top five records with the highest investment income.",
    "query": "SELECT Income_Statement.Inv_Inc , Income_Statement.Int_Inc FROM Income_Statement ORDER BY Income_Statement.Inv_Inc DESC LIMIT 5"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find out the average operating expenses of records grouped by other business income.",
    "query": "SELECT avg(Income_Statement.Oper_Exp) , Income_Statement.Oth_Biz_Inc FROM Income_Statement GROUP BY Income_Statement.Oth_Biz_Inc"
  },
  {
    "db_id": "Bank_Financials",
    "question": "please provide me with the stock code, net cash flow generated from financing activities, and loss from changes in fair value for each record.",
    "query": "SELECT Basic_Info.Stk_Code , Cash_Flow_Statement.Net_CF_Fin , Cash_Flow_Statement.Fair_Value_Change_Loss FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all the net income from handling fees and commissions values that appear less than 7 times.",
    "query": "SELECT Income_Statement.Fee_Com_Net_Inc FROM Income_Statement GROUP BY Income_Statement.Fee_Com_Net_Inc HAVING COUNT (*) < 7"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the exchange gains of records with convertible corporate bonds maturing within one year value between 44478183762 and 11824985585.",
    "query": "SELECT Income_Statement.Exch_Gain_Inc FROM Basic_Info JOIN Income_Statement ON Basic_Info.Stk_Code = Income_Statement.Stk_Code JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code WHERE Cash_Flow_Statement.Conv_Bonds_Maturing_Within_1Y BETWEEN 44478183762 AND 11824985585"
  },
  {
    "db_id": "Bank_Financials",
    "question": "show me all fee and commission income values that have at least four records with net profit attributable to the owner of the parent company greater than 12114000000.0.",
    "query": "SELECT Income_Statement.Fee_Com_Inc FROM Income_Statement WHERE Income_Statement.Attr_Parent_Net_Profit > 12114000000.0 GROUP BY Income_Statement.Fee_Com_Inc HAVING count(*) >= 4"
  },
  {
    "db_id": "Bank_Financials",
    "question": "find me the stock codes that contain the word '600000.SH'.",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info WHERE Basic_Info.Stk_Code LIKE '%600000.SH%'"
  },
  {
    "db_id": "Bank_Financials",
    "question": "what is the highest, lowest and average value of other business costs across all records?",
    "query": "SELECT MAX (Income_Statement.Oth_Biz_Costs) , MIN (Income_Statement.Oth_Biz_Costs), AVG (Income_Statement.Oth_Biz_Costs) FROM Income_Statement"
  },
  {
    "db_id": "Bank_Financials",
    "question": "calculate the average net profit for each value of basic earnings per share.",
    "query": "SELECT avg(Income_Statement.Net_Profit) , Income_Statement.Basic_EPS FROM Income_Statement GROUP BY Income_Statement.Basic_EPS"
  },
  {
    "db_id": "Bank_Financials",
    "question": "which two securities have the highest decrease in inventory?",
    "query": "SELECT Basic_Info.Stk_Code FROM Basic_Info JOIN Cash_Flow_Statement ON Basic_Info.Stk_Code = Cash_Flow_Statement.Stk_Code ORDER BY Cash_Flow_Statement.Inventory_Decrease DESC LIMIT 2"
  }
]